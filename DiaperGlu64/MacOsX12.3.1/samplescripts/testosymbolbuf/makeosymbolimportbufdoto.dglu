( //////////////////////////////////////////////////////////////////////////////////////// )
( //                                                                                       )
( //    Copyright 2022 James Patrick Norris                                                )
( //                                                                                       )
( //    This file is part of Diaperglu 5.5.                                                )
( //                                                                                       )
( //    Diaperglu 5.5 is free software; you can redistribute it and/or modify              )
( //    it under the terms of the GNU General Public License as published by               )
( //    the Free Software Foundation; either version 2 of the License, or                  )
( //    {at your option} any later version.                                                )
( //                                                                                       )
( //    Diaperglu 5.5 is distributed in the hope that it will be useful,                   )
( //    but WITHOUT ANY WARRANTY; without even the implied warranty of                     )
( //    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      )
( //    GNU General Public License for more details.                                       )
( //                                                                                       )
( //    You should have received a copy of the GNU General Public License                  )
( //    along with Diaperglu 5.5; if not, write to the Free Software                       )
( //    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA          )
( //                                                                                       )
( //////////////////////////////////////////////////////////////////////////////////////// )

( /////////////////////////////// )
( // James Patrick Norris      // )
( // www.rainbarrel.com        // )
( // July 2, 2022              // )
( // version 5.5               // )
( /////////////////////////////// )


NEW-FLAT-OSYMBOL-BUF ( -r- oldcompilebuf )

  // current compile buf is set to a new buffer
  // new hlist created with two parent elements
  //  one element is for the export symbol list
  //  the other element is for the import symbol list

OSYMBOL-CODE-IMPORTS,<
  dg_firstfunction
  dg_secondfunction
>

X86-WORDLIST >SEARCH-ORDER


// using an import link branch table
OSYMBOL dg_testfirstimport
  EH[1D]. dg_firstfunction OIMPORTCODELINK CALL,
  RET,

// using an import link branch table
OSYMBOL dg_testsecondimport
  EH[1D]. dg_secondfunction OIMPORTCODELINK CALL,
  RET,

// importing the link directly to the call, this executes faster
//  on Mac OS X, this also does not slow down run time linking
//  compiling the link in detail
OSYMBOL dg_testfirstimportagain
  RIP 0 [R+N] CALL,                                            // this will call the import function
  OHERE 4 - >NEW$   $" dg_testfirstimport"  1 EH[ND]  NEW-ELEMENT  DROP  // this adds the import
  RET,

// importing the link directly to the call, this executes faster
//  on Mac OS X, this also does not slow down run time linking
//  compiling the link using shortcut words
OSYMBOL dg_testsecondimportagain
  IMP CALL, OSYMBOL-IMPORT dg_secondfunction
  RET,

HEX
OSYMBOL dg_testvalueimport
  RAX RAX XOR, 
  RIP 0 [R+N] RAX MOV, OSYMBOL-IMPORT dg_myexportvalue 
  RAX [R] RAX MOV,
  RET,

HEX
OSYMBOL dg_callpickparamn
  ENTER-CALL-SUBS-FRAME,
  FRAME-PARAMS< n >
  CALL-SUBS-FRAME-LOCALS,< 
    x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 
    y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 
  >

  4000 N  RAX  MOV,   RAX  x0  MOV,
  RAX  INC,           RAX  x1  MOV,
  RAX  INC,           RAX  x2  MOV,
  RAX  INC,           RAX  x3  MOV,
  RAX  INC,           RAX  x4  MOV,
  RAX  INC,           RAX  x5  MOV,
  RAX  INC,           RAX  x6  MOV,
  RAX  INC,           RAX  x7  MOV,
  RAX  INC,           RAX  x8  MOV,
  RAX  INC,           RAX  x9  MOV,
  RAX  INC,           RAX  x10 MOV,
  RAX  INC,           RAX  x11 MOV,
  5000 N  RAX  MOV,   RAX  y0  MOV,
  RAX  INC,           RAX  y1  MOV,
  RAX  INC,           RAX  y2  MOV,
  RAX  INC,           RAX  y3  MOV,
  RAX  INC,           RAX  y4  MOV,
  RAX  INC,           RAX  y5  MOV,
  RAX  INC,           RAX  y6  MOV,
  RAX  INC,           RAX  y7  MOV,
  RAX  INC,           RAX  y8  MOV,
  RAX  INC,           RAX  y9  MOV,
  RAX  INC,           RAX  y10 MOV,
  RAX  INC,           RAX  y11 MOV,

  (( 
        n >IPARAM   // RDI        > RDI
       x1 >IPARAM   // [RBP - nn] > RSI  
       x2 >IPARAM   // [RBP - nn] > RDX
       x3 >IPARAM   // [RBP - nn] > RCX
       y0 >FPARAM   // [RBP - nn] > XMM0
       y1 >FPARAM   // [RBP - nn] > XMM1
       y2 >FPARAM   // [RBP - nn] > XMM2
       y3 >FPARAM   // [RBP - nn] > XMM3 
       x4 >IPARAM   // [RBP - nn] > R8
       x5 >IPARAM   // [RBP - nn] > R9
       x6 >IPARAM   // [RBP - nn] > [RSP + mm]
       x7 >IPARAM   // [RBP - nn] > [RSP + mm]
       y4 >FPARAM   // [RBP - nn] > XMM4
       y5 >FPARAM   // [RBP - nn] > XMM5
       y6 >FPARAM   // [RBP - nn] > XMM6
       y7 >FPARAM   // [RBP - nn] > XMM7 
       x8 >IPARAM   // [RBP - nn] > [RSP + mm]
       x9 >IPARAM   // [RBP - nn] > [RSP + mm]
       x10 >IPARAM  // [RBP - nn] > [RSP + mm]
       x11 >IPARAM  // [RBP - nn] > [RSP + mm]
       y8 >FPARAM   // [RBP - nn] > [RSP + mm]
       y9 >FPARAM   // [RBP - nn] > [RSP + mm]
       y10 >FPARAM  // [RBP - nn] > [RSP + mm]
       y11 >FPARAM  // [RBP - nn] > [RSP + mm]
  )),
  
  IMP CALL,  OSYMBOL-IMPORT dg_pickparamn 
  RAX PUSH,
  XMM0  RSP [R]  MOVQ,
  RAX POP,
  
  EXIT-CALL-SUBS-FRAME,
  RET,
  
  SEARCH-ORDER> DROP
  ?CLEAR-LOCALS


// saving the compiled buffer in the mach-o .o format

PCURRENTCOMPILEBUFFER @ 
EH 
1 EH[ND]
BUF>NEWEXPORTIMPORT.OBUF

$" osymbolimport.o" SAVEFILE$

( oldcompilebuf -r- )
FREE-FLAT-OSYMBOL-BUF 




     

