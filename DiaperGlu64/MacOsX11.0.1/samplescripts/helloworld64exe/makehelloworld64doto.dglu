( //////////////////////////////////////////////////////////////////////////////////////// )
( //                                                                                       )
( //    Copyright 2021 James Patrick Norris                                                )
( //                                                                                       )
( //    This file is part of Diaperglu 5.0.                                                )
( //                                                                                       )
( //    Diaperglu 5.0 is free software; you can redistribute it and/or modify              )
( //    it under the terms of the GNU General Public License as published by               )
( //    the Free Software Foundation; either version 2 of the License, or                  )
( //    {at your option} any later version.                                                )
( //                                                                                       )
( //    Diaperglu 5.0 is distributed in the hope that it will be useful,                   )
( //    but WITHOUT ANY WARRANTY; without even the implied warranty of                     )
( //    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      )
( //    GNU General Public License for more details.                                       )
( //                                                                                       )
( //    You should have received a copy of the GNU General Public License                  )
( //    along with Diaperglu 5.0; if not, write to the Free Software                       )
( //    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA          )
( //                                                                                       )
( //////////////////////////////////////////////////////////////////////////////////////// )

( /////////////////////////////// )
( // James Patrick Norris      // )
( // www.rainbarrel.com        // )
( // January 9, 2021           // )
( // version 5.0               // )
( /////////////////////////////// )


// last changed April 5, 2020



// adding the assembler to the search order

X86-WORDLIST >SEARCH-ORDER


// make new empty compile buffer

HEX 10000 -1 NEWBUFFER CONSTANT MYCOMPILEBUFID
MYCOMPILEBUFID PCURRENTCOMPILEBUFFER !

 
// making an hlist to hold a symbol list and making it the current elementid hlistid

NEW-NGLULIST>EH

( noparentelementid_myhlistid -EH- )


 // adding a root element to the current EH hlist
 //  this element is not used other than as a parent to the import symbol list elements
$" myimportsymbollistparent" 0 >NEW$ EH-NEW-ELEMENT>EH

( noparentelementid_myhlistid importsparentelementid_myhlistid -EH- )

// it would be nice to be able to add symbol lists to the search order... 12/25/2019


// adding another root element to the current EH hlist
//  this element is not used other than as a parent to the export symbol list elements

$" myexportsymbollistparent" 0 >NEW$
1 EH[ND] // noparentelementid_myhlistid on data stack
DUP >R   // saving a copy of the myhlistid
NEW-ELEMENT
R> >EH

( noparentelementid_myhlistid importsparentelementid_myhlistid exportsparentelemendid_mylistid -EH- )


HEX
OHERE CONSTANT omyhelloworldmessage
  $" Hello World!" HEX 0A C>$ LENGTH$ CONSTANT myhelloworldmessagelength 
  MYCOMPILEBUFID $>BUF


HEX
OSYMBOL myhelloworldstart

  -10 N  RSP  AND,                                         // align the return stack
                                                           //  not worried about losing the return
                                                           //  value because this function does not
                                                           //  not do a return

  1 N RDI MOV,                                             // rdi = hstdout
  myhelloworldmessagelength N RDX MOV,                     // rdx = count
  omyhelloworldmessage [O] RSI LEA,                        // rsi = pstring 
  RIP 0 [R+N] CALL,                                        // this will call the import function
  OHERE 4 - >NEW$  $" write"  1 EH[ND]  NEW-ELEMENT  DROP  // this adds the import

  RIP 0 [R+N] CALL,                                        // this will call the import function
  OHERE 4 - >NEW$  $" exit"  1 EH[ND]  NEW-ELEMENT  DROP   // this adds the import
  
  // ld makes an import table for you with one import per unique symbol name, and will
  //   fill in the offset from your [RIP+N] instruction to the import table at link time
  // At this time, I do not know how to tell ld which import symbol comes from which library. 12/26/2019
  

// saving the compiled buffer in the mach-o .o format

MYCOMPILEBUFID
EH>                                              // export symbol list parent
EH>                                              // import symbol list parent
BUF>NEWMACH-O.OBUF

$" helloworld64.o" SAVEFILE$

