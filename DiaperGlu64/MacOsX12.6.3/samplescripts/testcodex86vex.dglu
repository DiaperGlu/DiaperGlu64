( //////////////////////////////////////////////////////////////////////////////////////// )
( //                                                                                       )
( //    Copyright 2023 James Patrick Norris                                                )
( //                                                                                       )
( //    This file is part of Diaperglu 5.8.                                                )
( //                                                                                       )
( //    Diaperglu 5.8 is free software; you can redistribute it and/or modify              )
( //    it under the terms of the GNU General Public License as published by               )
( //    the Free Software Foundation; either version 2 of the License, or                  )
( //    {at your option} any later version.                                                )
( //                                                                                       )
( //    Diaperglu 5.8 is distributed in the hope that it will be useful,                   )
( //    but WITHOUT ANY WARRANTY; without even the implied warranty of                     )
( //    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      )
( //    GNU General Public License for more details.                                       )
( //                                                                                       )
( //    You should have received a copy of the GNU General Public License                  )
( //    along with Diaperglu 5.8; if not, write to the Free Software                       )
( //    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA          )
( //                                                                                       )
( //////////////////////////////////////////////////////////////////////////////////////// )

( /////////////////////////////// )
( // James Patrick Norris      // )
( // www.rainbarrel.com        // )
( // March 27, 2023            // )
( // version 5.8               // )
( /////////////////////////////// )


( Making sure the new variable buffer won't move when new variables are declared )
HEX
1000 1000 NEWBUFFER CONSTANT mylockeddownbuffer
mylockeddownbuffer PCURRENTNEWVARIABLEBUFFER !

200000 200000 NEWBUFFER PCURRENTCOMPILEBUFFER !  // this doesn't grow either

VARIABLE VARX
VARIABLE VARZ
VARIABLE VARY  // a fixed address UINT64 variable
0 VARY !
100 ALLOT



: CCO@ PCURRENTCOMPILEBUFFER @ O@ ;
: CCO! PCURRENTCOMPILEBUFFER @ O! ;
: CCOC! PCURRENTCOMPILEBUFFER @ OC! ;
: CCOC@ PCURRENTCOMPILEBUFFER @ OC@ ;
: CCO>P PCURRENTCOMPILEBUFFER @ GETSBUFFER DROP + ;

: CCOU32@ PCURRENTCOMPILEBUFFER @ GETSBUFFER DROP + U32@ ;
: CCOU32! PCURRENTCOMPILEBUFFER @ GETSBUFFER DROP + U32! ;

: CCOU16@ PCURRENTCOMPILEBUFFER @ GETSBUFFER DROP + U16@ ;
: CCOU16! PCURRENTCOMPILEBUFFER @ GETSBUFFER DROP + U16! ;

( push and pop 32bit reg instructions already tested… )




( HEX
X86-WORDLIST >SEARCH-ORDER

: testnop
." Testing NOP, … "
REGS> [ NOP, ] REGS> 

09 ROLL =           
SWAP 09 ROLL = AND
SWAP 08 ROLL = AND
SWAP 07 ROLL = AND
SWAP 06 ROLL = AND
SWAP 05 ROLL = AND
SWAP 04 ROLL = AND
SWAP 03 ROLL = AND
SWAP 02 ROLL = AND
IF ." success " ELSE ." fail " THEN CR ;

SEARCH-ORDER> DROP

testnop )


HEX
C000000000000000 CONSTANT FPD-2.0

3FF0000000000000 CONSTANT FPD1.0
3FF8000000000000 CONSTANT FPD1.5
4000000000000000 CONSTANT FPD2.0
4004000000000000 CONSTANT FPD2.5
4008000000000000 CONSTANT FPD3.0
4010000000000000 CONSTANT FPD4.0
4012000000000000 CONSTANT FPD4.5
4014000000000000 CONSTANT FPD5.0
4018000000000000 CONSTANT FPD6.0
4020000000000000 CONSTANT FPD8.0
4022000000000000 CONSTANT FPD9.0

C0000000 CONSTANT FPS-2.0

3E000000 CONSTANT FPS0.125
3E800000 CONSTANT FPS0.25
3F000000 CONSTANT FPS0.5
3F800000 CONSTANT FPS1.0
3FC00000 CONSTANT FPS1.5
40000000 CONSTANT FPS2.0
40200000 CONSTANT FPS2.5
40400000 CONSTANT FPS3.0
40800000 CONSTANT FPS4.0
40900000 CONSTANT FPS4.5
40A00000 CONSTANT FPS5.0
40C00000 CONSTANT FPS6.0
41000000 CONSTANT FPS8.0
41100000 CONSTANT FPS9.0

C000 CONSTANT FPH-2.0
3C00 CONSTANT FPH1.0
4000 CONSTANT FPH2.0
4400 CONSTANT FPH4.0
4800 CONSTANT FPH8.0






// align to 32 byte boundary for ymm
HEX
20  PCURRENTCOMPILEBUFFER @ GETSBUFFER + 20 MOD -  20 MOD   CODE-ALLOT

OHERE CONSTANT OU128A 20 CODE-ALLOT // doubled size for ymm tests
OHERE CONSTANT OU128B 40 CODE-ALLOT // added room so I can do unaligned tests
OHERE CONSTANT OU128C 40 CODE-ALLOT // added room so I can do unaligned tests
OHERE CONSTANT OU128D 20 CODE-ALLOT // doubled size for ymm tests
OHERE CONSTANT OU128E 20 CODE-ALLOT // doubled size for ymm tests


HEX
CODE TESTRORXN8EAXTOECX
  OU128A [O]  RAX  MOV,
  OU128B [O]  RCX  MOV,
  4 N  EAX  ECX  RORX,
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testrorxn8eaxtoecx ( -- )
    ." testing 8 N  EAX  ECX  RORX, "
    1122334455667788  OU128A CCO!
    0                 OU128B CCO!
    0                 OU128C CCO! 
    0 ['] TESTRORXN8EAXTOECX >BODY CALLPROC OU128D CCO!

    OU128A CCO@ OU128D CCO@ = IF
     ."   SUCCESS! src unchanged"
    ELSE
      ." FAIL! src unchanged. Expected " 1122334455667788 U. 
      ." , got " OU128D CCO@ U.
    THEN

    OU128C CCO@ 85566778 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 85566778 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testrorxn8eaxtoecx 


HEX
CODE TESTRORXN8RAXTORCX
  OU128A [O]  RAX  MOV,
  OU128B [O]  RCX  MOV,
  4 N  RAX  RCX  RORX,
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testrorxn8raxtorcx ( -- )
    ." testing 4 N  RAX  RCX  RORX, "
    1122334455667788  OU128A CCO!
    0                 OU128B CCO!
    0                 OU128C CCO! 
    0 ['] TESTRORXN8RAXTORCX >BODY CALLPROC OU128D CCO!

    OU128A CCO@ OU128D CCO@ = IF
     ."   SUCCESS! src unchanged"
    ELSE
      ." FAIL! src unchanged. Expected " 1122334455667788 U. 
      ." , got " OU128D CCO@ U.
    THEN

    OU128C CCO@ 8112233445566778 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 8112233445566778 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testrorxn8raxtorcx


HEX
CODE TESTRORXN8MTOECX
  OU128B [O]  RCX  MOV,
  4 N  OU128A [O] ECX  RORX,
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testrorxn8mtoecx ( -- )
    ." testing 4 N  M  ECX  RORX, "
    1122334455667788  OU128A CCO!
    0                 OU128B CCO!
    0                 OU128C CCO! 
    0 ['] TESTRORXN8MTOECX >BODY CALLPROC DROP

    OU128A CCO@ 1122334455667788 = IF
     ."   SUCCESS! src unchanged"
    ELSE
      ." FAIL! src changed. Expected " 1122334455667788 U. 
      ." , got " OU128D CCO@ U.
    THEN

    OU128C CCO@ 85566778 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 85566778 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testrorxn8mtoecx


HEX
CODE TESTRORXN8MTORCX
  OU128B [O]  RCX  MOV,
  4 N  OU128A [O] RCX  RORX,
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testrorxn8mtorcx ( -- )
    ." testing 4 N  M  RCX  RORX, "
    1122334455667788  OU128A CCO!
    0                 OU128B CCO!
    0                 OU128C CCO! 
    0 ['] TESTRORXN8MTORCX >BODY CALLPROC DROP

    OU128A CCO@ 1122334455667788 = IF
     ."   SUCCESS! src unchanged"
    ELSE
      ." FAIL! src changed. Expected " 1122334455667788 U. 
      ." , got " OU128D CCO@ U.
    THEN

    OU128C CCO@ 8112233445566778 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 8112233445566778 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testrorxn8mtorcx


HEX
CODE TESTRORXN8MTOR9
  OU128B [O]  R9  MOV,
  4 N  OU128A [O] R9  RORX,
  R9  OU128C [O]  MOV,
  RET,
END-CODE

: testrorxn8mtor9 ( -- )
    ." testing 4 N  M  R9  RORX, "
    1122334455667788  OU128A CCO!
    0                 OU128B CCO!
    0                 OU128C CCO! 
    0 ['] TESTRORXN8MTOR9 >BODY CALLPROC DROP

    OU128A CCO@ 1122334455667788 = IF
     ."   SUCCESS! src unchanged"
    ELSE
      ." FAIL! src changed. Expected " 1122334455667788 U. 
      ." , got " OU128D CCO@ U.
    THEN

    OU128C CCO@ 8112233445566778 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 8112233445566778 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testrorxn8mtor9

HEX
CODE TESTRORXN8MSIBRAXRCXTOR9
  OU128B [O]  R9  MOV,
  OU128A [O]  RAX  LEA,
  RCX  RCX  XOR,
  4 N  RAX SCALE1* RCX 0 [R+S*R+N]  R9  RORX,
  R9  OU128C [O]  MOV,
  RET,
END-CODE

: testrorxn8msibraxrcxtor9 ( -- )
    ." testing 4 N  RAX SCALE1* RCX 0 [R+S*R+N]  R9  RORX, "
    1122334455667788  OU128A CCO!
    0                 OU128B CCO!
    0                 OU128C CCO! 
    0 ['] TESTRORXN8MSIBRAXRCXTOR9 >BODY CALLPROC DROP

    OU128A CCO@ 1122334455667788 = IF
     ."   SUCCESS! src unchanged"
    ELSE
      ." FAIL! src changed. Expected " 1122334455667788 U. 
      ." , got " OU128D CCO@ U.
    THEN

    OU128C CCO@ 8112233445566778 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 8112233445566778 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testrorxn8msibraxrcxtor9


HEX
CODE TESTRORXN8MSIBR8R9TORCX
  OU128B [O]  RCX  MOV,
  OU128A [O]  R8  LEA,
  5 N  R9  MOV,
  4 N  R8 SCALE1* R9 3 [R+S*R+N]  RCX  RORX,
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testrorxn8msibr8r9torcx ( -- )
    ." testing 4 N  R8 SCALE1* R9 3 [R+S*R+N]  RCX  RORX, "
    0                     OU128A CCO!
    1122334455667788      OU128A 8 + CCO!
    0                     OU128B CCO!
    0                     OU128C CCO! 
    0 ['] TESTRORXN8MSIBR8R9TORCX >BODY CALLPROC DROP

    OU128A 8 + CCO@ 1122334455667788 = IF
     ."   SUCCESS! src unchanged"
    ELSE
      ." FAIL! src changed. Expected " 1122334455667788 U. 
      ." , got " OU128A 8 + CCO@ U.
    THEN

    OU128C CCO@ 8112233445566778 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 8112233445566778 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testrorxn8msibr8r9torcx


HEX
CODE TESTSARXEDXEAXTOECX
  OU128B [O]  RCX  MOV,
  OU128A [O]  RAX  MOV,
  OU128D [O]  RDX  MOV,
  EDX  EAX  ECX  SARX, // EDX is count
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testasrxedxeaxtoecx ( -- )
    ." testing EDX  EAX  ECX  SARX, "

    9977665588332211      OU128A CCO! // source
    1                     OU128B CCO! // pre destination
    0                     OU128C CCO! // result
    4                     OU128D CCO! // count
    
    0 ['] TESTSARXEDXEAXTOECX >BODY CALLPROC OU128E CCO!

    OU128E CCO@ 9977665588332211 = IF
     ."   SUCCESS! src unchanged"
    ELSE
      ." FAIL! src changed. Expected " 9977665588332211 U. 
      ." , got " OU128E CCO@ U.
    THEN

    OU128C CCO@ F8833221 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " F8833221 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testasrxedxeaxtoecx

HEX
CODE TESTSARXRDXRAXTORCX
  OU128B [O]  RCX  MOV,
  OU128A [O]  RAX  MOV,
  OU128D [O]  RDX  MOV,
  RDX  RAX  RCX  SARX, // RDX is count
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testasrxrdxraxtorcx ( -- )
    ." testing RDX  RAX  RCX  SARX, "

    9977665588332211      OU128A CCO! // source
    1                     OU128B CCO! // pre destination
    0                     OU128C CCO! // result
    4                     OU128D CCO! // count
    
    0 ['] TESTSARXRDXRAXTORCX >BODY CALLPROC OU128E CCO!

    OU128E CCO@ 9977665588332211 = IF
     ."   SUCCESS! src unchanged"
    ELSE
      ." FAIL! src changed. Expected " 9977665588332211 U. 
      ." , got " OU128E CCO@ U.
    THEN

    OU128C CCO@ F997766558833221 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " F997766558833221 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testasrxrdxraxtorcx

HEX
CODE TESTSARXR8RAXTORCX
  OU128B [O]  RCX  MOV,
  OU128A [O]  RAX  MOV,
  OU128D [O]  R8   MOV,
  R8  RAX  RCX  SARX, // RDX is count
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testsarxr8raxtorcx ( -- )
    ." testing R8  RAX  RCX  SARX, "

    9977665588332211      OU128A CCO! // source
    1                     OU128B CCO! // pre destination
    0                     OU128C CCO! // result
    4                     OU128D CCO! // count
    
    0 ['] TESTSARXR8RAXTORCX >BODY CALLPROC OU128E CCO!

    OU128E CCO@ 9977665588332211 = IF
     ."   SUCCESS! src unchanged"
    ELSE
      ." FAIL! src changed. Expected " 9977665588332211 U. 
      ." , got " OU128E CCO@ U.
    THEN

    OU128C CCO@ F997766558833221 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " F997766558833221 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testsarxr8raxtorcx

HEX
CODE TESTSHLXRDXRAXTORCX
  OU128B [O]  RCX  MOV,
  OU128A [O]  RAX  MOV,
  OU128D [O]  RDX  MOV,
  RDX  RAX  RCX  SHLX, // RDX is count
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testshlxrdxraxtorcx ( -- )
    ." testing RDX  RAX  RCX  SHLX, "

    9977665588332211      OU128A CCO! // source
    1                     OU128B CCO! // pre destination
    0                     OU128C CCO! // result
    4                     OU128D CCO! // count
    
    0 ['] TESTSHLXRDXRAXTORCX >BODY CALLPROC OU128E CCO!

    OU128E CCO@ 9977665588332211 = IF
     ."   SUCCESS! src unchanged"
    ELSE
      ." FAIL! src changed. Expected " 9977665588332211 U. 
      ." , got " OU128E CCO@ U.
    THEN

    OU128C CCO@ 9776655883322110 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 9776655883322110 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testshlxrdxraxtorcx

HEX
CODE TESTSHRXRDXRAXTORCX
  OU128B [O]  RCX  MOV,
  OU128A [O]  RAX  MOV,
  OU128D [O]  RDX  MOV,
  RDX  RAX  RCX  SHRX, // RDX is count
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testshrxrdxraxtorcx ( -- )
    ." testing RDX  RAX  RCX  SARX, "

    9977665588332211      OU128A CCO! // source
    1                     OU128B CCO! // pre destination
    0                     OU128C CCO! // result
    4                     OU128D CCO! // count
    
    0 ['] TESTSHRXRDXRAXTORCX >BODY CALLPROC OU128E CCO!

    OU128E CCO@ 9977665588332211 = IF
     ."   SUCCESS! src unchanged"
    ELSE
      ." FAIL! src changed. Expected " 9977665588332211 U. 
      ." , got " OU128E CCO@ U.
    THEN

    OU128C CCO@ 997766558833221 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 997766558833221 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testshrxrdxraxtorcx


HEX
CODE TESTVPEXTRB0NXMM5TOCL
  OU128A [O]  XMM5  MOVDQA,
  OU128B [O]  RCX   MOV,
  0 N  XMM5  CL  VPEXTRB, 
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testvpextrb0nxmm5tocl ( -- )
    ." testing  0 N  XMM5  CL  VPEXTRB, "

    9977665588332211      OU128A CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // pre destination
    0                     OU128C CCO! // pre result 
    
    0 ['] TESTVPEXTRB0NXMM5TOCL >BODY CALLPROC DROP

    OU128C CCO@ 11 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 11 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;


testvpextrb0nxmm5tocl


HEX
CODE TESTVPEXTRB1NXMM5TOCL
  OU128A [O]  XMM5  MOVDQA,
  OU128B [O]  RCX   MOV,
  1 N  XMM5  CL  VPEXTRB, 
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testvpextrb1nxmm5tocl ( -- )
    ." testing  1 N  XMM5  CL  VPEXTRB, "

    9977665588332211      OU128A CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // pre destination
    0                     OU128C CCO! // pre result 
    
    0 ['] TESTVPEXTRB1NXMM5TOCL >BODY CALLPROC DROP

    OU128C CCO@ 22 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 22 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testvpextrb1nxmm5tocl


HEX
CODE TESTVPEXTRB1NXMM5TOM8
  OU128A [O]  XMM5  MOVDQA,
  1 N  XMM5  OU128C [O]  VPEXTRB, 
  RET,
END-CODE

: testvpextrb1nxmm5tom8 ( -- )
    ." testing  1 N  XMM5  OU128C [O]  VPEXTRB, "

    9977665588332211      OU128A CCO! // source
    FFFFFFFFFFFFFFFF      OU128C CCO! // pre destination 
    
    0 ['] TESTVPEXTRB1NXMM5TOM8 >BODY CALLPROC DROP

    OU128C CCO@ FFFFFFFFFFFFFF22 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " FFFFFFFFFFFFFF22 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testvpextrb1nxmm5tom8



HEX
CODE TESTVPEXTRB1NXMM8TOM8
  OU128A [O]  XMM5  MOVDQA,
  1 N  XMM5  OU128C [O]  VPEXTRB, 
  RET,
END-CODE

: testvpextrb1nxmm8tom8 ( -- )
    ." testing  1 N  XMM8  OU128C [O]  VPEXTRB, "

    9977665588332211      OU128A CCO! // source
    FFFFFFFFFFFFFFFF      OU128C CCO! // pre destination 
    
    0 ['] TESTVPEXTRB1NXMM8TOM8 >BODY CALLPROC DROP

    OU128C CCO@ FFFFFFFFFFFFFF22 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " FFFFFFFFFFFFFF22 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testvpextrb1nxmm8tom8



HEX
CODE TESTVPEXTRB1NXMM5TOR8L
  OU128A [O]  XMM5  MOVDQA,
  OU128B [O]  R8   MOV,
  1 N  XMM5  R8L  VPEXTRB, 
  R8  OU128C [O]  MOV,
  RET,
END-CODE

: testvpextrb1nxmm5tor8l ( -- )
    ." testing  1 N  XMM5  R8L  VPEXTRB, "

    9977665588332211      OU128A CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // pre destination
    0                     OU128C CCO! // pre result 
    
    0 ['] TESTVPEXTRB1NXMM5TOR8L >BODY CALLPROC DROP

    OU128C CCO@ 22 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 22 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testvpextrb1nxmm5tor8l


HEX
CODE TESTVPEXTRB1NXMM5TORCX
  OU128A [O]  XMM5  MOVDQA,
  OU128B [O]  RCX   MOV,
  1 N  XMM5  RCX  VPEXTRB, 
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testvpextrb1nxmm5torcx ( -- )
    ." testing  1 N  XMM5  RCX  VPEXTRB, "

    9977665588332211      OU128A CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // pre destination
    0                     OU128C CCO! // pre result 
    
    0 ['] TESTVPEXTRB1NXMM5TORCX >BODY CALLPROC DROP

    OU128C CCO@ 22 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 22 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testvpextrb1nxmm5torcx


HEX
CODE TESTVPEXTRD1NXMM5TOECX
  OU128A [O]  XMM5  MOVDQA,
  OU128B [O]  RCX   MOV,
  1 N  XMM5  ECX  VPEXTRD, 
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testvpextrd1nxmm5toecx ( -- )
    ." testing  1 N  XMM5  ECX  VPEXTRD, "

    9977665588332211      OU128A CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // pre destination
    0                     OU128C CCO! // pre result 
    
    0 ['] TESTVPEXTRD1NXMM5TOECX >BODY CALLPROC DROP

    OU128C CCO@ 99776655 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 99776655 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testvpextrd1nxmm5toecx


HEX
CODE TESTVPEXTRQ1NXMM5TORCX
  OU128A [O]  XMM5  MOVDQA,
  OU128B [O]  RCX   MOV,
  1 N  XMM5  RCX  VPEXTRQ, 
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testvpextrq1nxmm5torcx ( -- )
    ." testing  1 N  XMM5  RCX  VPEXTRQ, "

    9977665588332211      OU128A CCO! // source lo
    9192939495969798      OU128A 8 + CCO! // source hi
    FFFFFFFFFFFFFFFF      OU128B CCO! // pre destination
    0                     OU128C CCO! // pre result 
    
    0 ['] TESTVPEXTRQ1NXMM5TORCX >BODY CALLPROC DROP

    OU128C CCO@ 9192939495969798 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 9192939495969798 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testvpextrq1nxmm5torcx


HEX
CODE TESTVPEXTRW1NXMM5TOCX
  OU128A [O]  XMM5  MOVDQA,
  OU128B [O]  RCX   MOV,
  1 N  XMM5  CX  VPEXTRW, 
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testvpextrw1nxmm5tocx ( -- )
    ." testing  1 N  XMM5  CX  VPEXTRW, "

    9977665588332211      OU128A CCO! // source lo
    9192939495969798      OU128A 8 + CCO! // source hi
    FFFFFFFFFFFFFFFF      OU128B CCO! // pre destination
    0                     OU128C CCO! // pre result 
    
    0 ['] TESTVPEXTRW1NXMM5TOCX >BODY CALLPROC DROP

    OU128C CCO@ 8833 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 8833 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;

testvpextrw1nxmm5tocx


HEX
CODE TESTVPEXTRW1NXMM5TOM8
  OU128A [O]  XMM5  MOVDQA,
  1 N  XMM5  OU128B [O]  VPEXTRW, 
  RET,
END-CODE

: testvpextrw1nxmm5tom8 ( -- )
    ." testing  1 N  XMM5  M8 VPEXTRW, "

    9977665588332211      OU128A CCO! // source lo
    9192939495969798      OU128A 8 + CCO! // source hi
    FFFFFFFFFFFFFFFF      OU128B CCO! // pre destination
    0                     OU128C CCO!
    0                     OU128D CCO!
    
    0 ['] TESTVPEXTRW1NXMM5TOM8 >BODY CALLPROC DROP

    OU128B CCO@ FFFFFFFFFFFF8833 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " FFFFFFFFFFFF8833 U. 
      ." , got " OU128B CCO@ U.
    THEN
    CR 
;

testvpextrw1nxmm5tom8


HEX
CODE TESTVPEXTRW21NXMM5TOCX
  OU128A [O]  XMM5  MOVDQA,
  OU128B [O]  RCX   MOV,
  1 N  XMM5 CX  VPEXTRW2, // will use two byte vex
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testvpextrw21nxmm5tocx ( -- )
    ." testing  1 N  XMM5  CX  VPEXTRW2, "

    9977665588332211      OU128A CCO! // source lo
    9192939495969798      OU128A 8 + CCO! // source hi
    FFFFFFFFFFFFFFFF      OU128B CCO! // pre destination
    0                     OU128C CCO! // pre result 
    
    0 ['] TESTVPEXTRW21NXMM5TOCX >BODY CALLPROC DROP

    OU128C CCO@ 8833 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 8833 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;


testvpextrw21nxmm5tocx


HEX
CODE TESTVPEXTRW21NXMM5TOCXR
  OU128A [O]  XMM5  MOVDQA,
  OU128B [O]  RCX   MOV,
  1 N  XMM5 CX R VPEXTRW2,  // force three byte vex
  RCX  OU128C [O]  MOV,
  RET,
END-CODE

: testvpextrw21nxmm5tocxr ( -- )
    ." testing  1 N  XMM5  CX R VPEXTRW2, "

    9977665588332211      OU128A CCO! // source lo
    9192939495969798      OU128A 8 + CCO! // source hi
    FFFFFFFFFFFFFFFF      OU128B CCO! // pre destination
    0                     OU128C CCO! // pre result 
    
    0 ['] TESTVPEXTRW21NXMM5TOCXR >BODY CALLPROC DROP

    OU128C CCO@ 8833 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 8833 U. 
      ." , got " OU128C CCO@ U.
    THEN
    CR 
;


testvpextrw21nxmm5tocxr


HEX
CODE TESTVPINSRB1NALXMM5TOXMM3
  OU128A [O]  RAX   MOV,
  OU128B [O]  XMM5  MOVDQA,
  OU128C [O]  XMM3  MOVDQA,
  1 N  AL  XMM5  XMM3  VPINSRB, 
  XMM3  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpinsrb1nalxmm5toxmm6 ( -- )
    ." testing  1 N  AL  XMM5  XMM3  VPINSRB, "

    9977665588332211      OU128A CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128D CCO! // pre result  
    
    0 ['] TESTVPINSRB1NALXMM5TOXMM3 >BODY CALLPROC DROP

    OU128D CCO@ FFFFFFFFFFFF11FF = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " FFFFFFFFFFFF11FF U. 
      ." , got " OU128D CCO@ U.
    THEN
    CR 
;

testvpinsrb1nalxmm5toxmm6


HEX
CODE TESTVPINSRW1NALXMM5TOXMM3
  OU128A [O]  RAX   MOV,
  OU128B [O]  XMM5  MOVDQA,
  OU128C [O]  XMM3  MOVDQA,
  1 N  AL  XMM5  XMM3  VPINSRW, 
  XMM3  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpinsrw1nalxmm5toxmm6 ( -- )
    ." testing  1 N  AL  XMM5  XMM3  VPINSRW, "

    9977665588332211      OU128A CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128D CCO! // pre result  
    
    0 ['] TESTVPINSRW1NALXMM5TOXMM3 >BODY CALLPROC DROP

    OU128D CCO@ FFFFFFFF2211FFFF = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " FFFFFFFF2211FFFF U. 
      ." , got " OU128D CCO@ U.
    THEN
    CR 
;

testvpinsrw1nalxmm5toxmm6


HEX
CODE TESTVPINSRD1NALXMM5TOXMM3
  OU128A [O]  RAX   MOV,
  OU128B [O]  XMM5  MOVDQA,
  OU128C [O]  XMM3  MOVDQA,
  1 N  AL  XMM5  XMM3  VPINSRD, 
  XMM3  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpinsrd1nalxmm5toxmm6 ( -- )
    ." testing  1 N  AL  XMM5  XMM3  VPINSRD, "

    9977665588332211      OU128A CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128D CCO! // pre result  
    
    0 ['] TESTVPINSRD1NALXMM5TOXMM3 >BODY CALLPROC DROP

    OU128D CCO@ 88332211FFFFFFFF = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong result. Expected " 88332211FFFFFFFF U. 
      ." , got " OU128D CCO@ U.
    THEN
    CR 
;

testvpinsrd1nalxmm5toxmm6


HEX
CODE TESTVPINSRQ1NALXMM5TOXMM3
  OU128A [O]  RAX   MOV,
  OU128B [O]  XMM5  MOVDQA,
  OU128C [O]  XMM3  MOVDQA,
  1 N  AL  XMM5  XMM3  VPINSRQ, 
  XMM3  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpinsrq1nalxmm5toxmm6 ( -- )
    ." testing  1 N  AL  XMM5  XMM3  VPINSRQ, "

    9977665588332211      OU128A CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVPINSRQ1NALXMM5TOXMM3 >BODY CALLPROC DROP

    OU128D CCO@ FFFFFFFFFFFFFFFF = IF
     ."   SUCCESS! ok lo result"
    ELSE
      ." FAIL! wrong lo result. Expected " FFFFFFFFFFFFFFFF U. 
      ." , got " OU128D CCO@ U.
    THEN

    OU128D 8 + CCO@ 9977665588332211 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 9977665588332211 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvpinsrq1nalxmm5toxmm6


HEX
CODE TESTVMOVMSKPDXMM1TOCL
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  RCX   MOV,
  XMM1  CL  VMOVMSKPD, 
  RCX  OU128D [O]  MOV,
  RET,
END-CODE

: testvmovmskpdxmm1tocl ( -- )
    ." testing  XMM1  CL  VMOVMSKPD, "

    FPD1.0                OU128A CCO! // source
    FPD-2.0               OU128A 8 + CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVMSKPDXMM1TOCL >BODY CALLPROC DROP

    OU128D CCO@ 2 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong lo result. Expected " 2 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR 
;

testvmovmskpdxmm1tocl



HEX
CODE TESTVMOVMSKPSXMM1TOCL
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  RCX   MOV,
  XMM1  CL  VMOVMSKPS, 
  RCX  OU128D [O]  MOV,
  RET,
END-CODE

: testvmovmskpsxmm1tocl ( -- )
    ." testing  XMM1  CL  VMOVMSKPS, "

    FPS1.0                OU128A      CCO! // source
    FPS-2.0               OU128A 4 +  CCO! // source
    FPS-2.0               OU128A 8 +  CCO! // source
    FPS1.0                OU128A 0C + CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVMSKPSXMM1TOCL >BODY CALLPROC DROP

    OU128D CCO@ 6 = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong lo result. Expected " 6 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR 
;

testvmovmskpsxmm1tocl


HEX
CODE TESTVPMOVMSKBXMM1TOCL
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  RCX   MOV,
  XMM1  CL  VPMOVMSKB, 
  RCX  OU128D [O]  MOV,
  RET,
END-CODE

: testvpmovmskbxmm1tocl ( -- )
    ." testing  XMM1  CL  VPMOVMSKB, "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVPMOVMSKBXMM1TOCL >BODY CALLPROC DROP

    OU128D CCO@ 769D = IF
     ."   SUCCESS! ok result"
    ELSE
      ." FAIL! wrong lo result. Expected " 769D U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR 
;

testvpmovmskbxmm1tocl


HEX
CODE TESTVMOVDQAXMM1TOXMM2
  OU128A [O]  XMM1  MOVDQA,
  OU128C [O]  XMM2  MOVDQA,
  XMM1  XMM2  VMOVDQA, 
  XMM2  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvmovdqaxmm1toxmm2 ( -- )
    ." testing  XMM1  XMM2  VMOVDQA, "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVDQAXMM1TOXMM2 >BODY CALLPROC DROP

    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovdqaxmm1toxmm2

// ' TESTVMOVDQAXMM1TOXMM2 >BODY 30 DUMP

HEX
CODE TESTVMOVDQAXMM1FROMXMM2
  OU128A [O]  XMM2  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  XMM1  XMM2 <- VMOVDQA, 
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvmovdqaxmm1fromxmm2 ( -- )
    ." testing  XMM1  XMM2 <- VMOVDQA, "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVDQAXMM1FROMXMM2 >BODY CALLPROC DROP

    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovdqaxmm1fromxmm2

// ' TESTVMOVDQAXMM1FROMXMM2 >BODY 30 DUMP


HEX
CODE TESTVMOVDQAMTOXMM2
  OU128C [O]  XMM2  MOVDQA,
  OU128A [O]  XMM2  VMOVDQA, 
  XMM2  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvmovdqamtoxmm2 ( -- )
    ." testing  OU128A [O]  XMM2  VMOVDQA, "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVDQAMTOXMM2 >BODY CALLPROC DROP

    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovdqamtoxmm2


HEX
CODE TESTVMOVDQAMFROMXMM2
  OU128A [O]  XMM2  MOVDQA,
  OU128D [O]  XMM2 <- VMOVDQA,
  XMM2  OU128C [O]  MOVDQA,
  RET,
END-CODE

: testvmovdqamfromxmm2 ( -- )
    ." testing  OU128A [O]  XMM2 <- VMOVDQA, "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVDQAMFROMXMM2 >BODY CALLPROC DROP

    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    OU128C CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo XMM2"
    ELSE
      ." FAIL! wrong lo XMM2. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    OU128C 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi XMM2"
    ELSE
      ." FAIL! wrong hi XMM2. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovdqamfromxmm2


HEX
CODE TESTVMOVDQAXMM2TOM
  OU128A [O]  XMM2  MOVDQA,
  XMM2  OU128D [O]  VMOVDQA, 
  RET,
END-CODE

: testvmovdqaxmm2tom ( -- )
    ." testing  XMM2  OU128D [O]  VMOVDQA, "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVDQAXMM2TOM >BODY CALLPROC DROP

    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovdqaxmm2tom


HEX
CODE TESTVMOVDQAXMM2FROMM
  OU128C [O]  XMM2  MOVDQA,
  XMM2  OU128A [O] <- VMOVDQA, 
  XMM2  OU128D [O] MOVDQA,
  RET,
END-CODE

: testvmovdqaxmm2fromm ( -- )
    ." testing  XMM2  OU128D [O] <- VMOVDQA, "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVDQAXMM2FROMM >BODY CALLPROC DROP

    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovdqaxmm2fromm


HEX
CODE TESTVMOVDQAMTOYMM1TOM
  OU128A [O]  YMM1  VMOVDQA,
  YMM1  OU128D [O]  VMOVDQA,
  RET,
END-CODE

: testvmovdqamtoymm1tom ( -- )
    ." testing  M TO YMM1 TO M  VMOVDQA, "

    FF0000FFFFFF00FF      OU128A       CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +   CCO! // source
    1122334488776655      OU128A 10 +  CCO! // source
    1817161514131210      OU128A 18 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128D CCO!       // destination
    FFFFFFFFFFFFFFFF      OU128D 8 + CCO!   // destination
    FFFFFFFFFFFFFFFF      OU128D 10 + CCO!  // destination
    FFFFFFFFFFFFFFFF      OU128D 18 + CCO!  // destination    
    
    0 ['] TESTVMOVDQAMTOYMM1TOM >BODY CALLPROC DROP
    CR
    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."    SUCCESS! ok lo nresult"
    ELSE
      ."   FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN
    CR

    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."    SUCCESS! ok middle lo result"
    ELSE
      ."   FAIL! wrong middle lo result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR 

    OU128D 10 + CCO@ 1122334488776655 = IF
     ."    SUCCESS! ok middle hi result"
    ELSE
      ."   FAIL! wrong middle hi result. Expected " 1122334488776655 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR

    OU128D 18 + CCO@ 1817161514131210 = IF
     ."    SUCCESS! ok hi result"
    ELSE
      ."   FAIL! wrong hi result. Expected " 1817161514131210 U. 
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvmovdqamtoymm1tom


HEX
CODE TESTVMOVDQAMTOYMM9TOM
  OU128A [O]  YMM9  VMOVDQA,
  OU128D [O]  YMM1  VMOVDQA,
  YMM9  OU128D [O]  VMOVDQA,
  RET,
END-CODE

: testvmovdqamtoymm9tom ( -- )
    ." testing  M TO YMM9 TO M VMOVDQA, "

    FF0000FFFFFF00FF      OU128A       CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +   CCO! // source
    1122334488776655      OU128A 10 +  CCO! // source
    1817161514131210      OU128A 18 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128D CCO!       // destination
    FFFFFFFFFFFFFFFF      OU128D 8 + CCO!   // destination
    FFFFFFFFFFFFFFFF      OU128D 10 + CCO!  // destination
    FFFFFFFFFFFFFFFF      OU128D 18 + CCO!  // destination    
    
    0 ['] TESTVMOVDQAMTOYMM9TOM >BODY CALLPROC DROP
    CR
    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."    SUCCESS! ok lo nresult"
    ELSE
      ."   FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN
    CR

    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."    SUCCESS! ok middle lo result"
    ELSE
      ."   FAIL! wrong middle lo result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR 

    OU128D 10 + CCO@ 1122334488776655 = IF
     ."    SUCCESS! ok middle hi result"
    ELSE
      ."   FAIL! wrong middle hi result. Expected " 1122334488776655 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR

    OU128D 18 + CCO@ 1817161514131210 = IF
     ."    SUCCESS! ok hi result"
    ELSE
      ."   FAIL! wrong hi result. Expected " 1817161514131210 U. 
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvmovdqamtoymm9tom


HEX
CODE TESTVMOVDQAXMM2TOSIBM
  OU128A [O]  XMM2  MOVDQA,
  OU128D [O]  RAX  LEA,
  5 N  RCX  MOV,
  XMM2  RAX SCALE1* RCX -5 [R+S*R+N]  VMOVDQA, 
  RET,
END-CODE

: testvmovdqaxmm2tosibm ( -- )
    ." testing  XMM2  RAX SCALE1* RCX 5 [R+S*R+N] VMOVDQA,  "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVDQAXMM2TOSIBM >BODY CALLPROC DROP

    CR
    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovdqaxmm2tosibm


HEX
CODE TESTVMOVDQAXMM2TOSIBMR8R9
  OU128A [O]  XMM2  MOVDQA,
  OU128D [O]  R8  LEA,
  RAX RAX XOR,
  5 N  R9  MOV,
  XMM2  R8 SCALE1* R9 -5 [R+S*R+N]  VMOVDQA, 
  RET,
END-CODE

: testvmovdqaxmm2tosibmr8r9 ( -- )
    ." testing  XMM2  R8 SCALE1* R9 5 [R+S*R+N] VMOVDQA,  "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVDQAXMM2TOSIBMR8R9 >BODY CALLPROC DROP

    CR
    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovdqaxmm2tosibmr8r9


HEX
CODE TESTVMOVDQUXMM2TOM
  OU128A [O]  XMM2  MOVDQA,
  XMM2  OU128D [O]  VMOVDQU, 
  RET,
END-CODE

: testvmovdquxmm2tom ( -- )
    ." testing  XMM2  OU128D [O]  VMOVDQU,   "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVDQUXMM2TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovdquxmm2tom


HEX
CODE TESTVMOVDQUMTOXMM2TOM
  OU128A [O]  XMM2  VMOVDQU,
  XMM2  OU128D [O]  VMOVDQU, 
  RET,
END-CODE

: testvmovdqumtoxmm2tom ( -- )
    ." testing OU128A [O]  XMM2  VMOVDQU, XMM2  OU128D [O]  VMOVDQU,   "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVDQUMTOXMM2TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovdqumtoxmm2tom


HEX
CODE TESTVMOVQXMM2TOM
  OU128A [O]  XMM2  MOVDQA,
  XMM2  OU128D [O]  VMOVQ, 
  RET,
END-CODE

: testvmovqxmm2tom ( -- )
    ." testing  XMM2  OU128D [O]  VMOVQ,   "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVQXMM2TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 0 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 0 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovqxmm2tom


HEX
CODE TESTVMOVQMTOXMM2TOM
  OU128A [O]  XMM2  VMOVQ,
  XMM2  OU128D [O]  VMOVQ, 
  RET,
END-CODE

: testvmovqmtoxmm2tom ( -- )
    ." testing OU128A [O]  XMM2  VMOVQ, XMM2  OU128D [O]  VMOVQ,   "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVQMTOXMM2TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 0 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 0 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovqmtoxmm2tom


HEX
CODE TESTVMOVUPDXMM2TOM
  OU128A [O]  XMM2  MOVDQA,
  XMM2  OU128D [O]  VMOVUPD, 
  RET,
END-CODE

: testvmovupdxmm2tom ( -- )
    ." testing  XMM2  OU128D [O]  VMOVUPD,   "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVUPDXMM2TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovupdxmm2tom


HEX
CODE TESTVMOVUPDMTOXMM2TOM
  OU128A [O]  XMM2  VMOVUPD,
  XMM2  OU128D [O]  VMOVUPD, 
  RET,
END-CODE

: testvmovupdmtoxmm2tom ( -- )
    ." testing OU128A [O]  XMM2  VMOVUPD, XMM2  OU128D [O]  VMOVUPD,   "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVUPDMTOXMM2TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovupdmtoxmm2tom


HEX
CODE TESTVMOVUPSXMM2TOM
  OU128A [O]  XMM2  MOVDQA,
  XMM2  OU128D [O]  VMOVUPS, 
  RET,
END-CODE

: testvmovupsxmm2tom ( -- )
    ." testing  XMM2  OU128D [O]  VMOVUPS,   "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVUPSXMM2TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovupsxmm2tom


HEX
CODE TESTVMOVUPSMTOXMM2TOM
  OU128A [O]  XMM2  VMOVUPS,
  XMM2  OU128D [O]  VMOVUPS, 
  RET,
END-CODE

: testvmovupsmtoxmm2tom ( -- )
    ." testing OU128A [O]  XMM2  VMOVUPS, XMM2  OU128D [O]  VMOVUPS,   "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVUPSMTOXMM2TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovupsmtoxmm2tom


HEX
CODE TESTVMOVAPDXMM2TOM
  OU128A [O]  XMM2  MOVDQA,
  XMM2  OU128D [O]  VMOVAPD, 
  RET,
END-CODE

: testvmovapdxmm2tom ( -- )
    ." testing  XMM2  OU128D [O]  VMOVAPD,   "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVAPDXMM2TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovapdxmm2tom


HEX
CODE TESTVMOVAPDMTOXMM2TOM
  OU128A [O]  XMM2  VMOVAPD,
  XMM2  OU128D [O]  VMOVAPD, 
  RET,
END-CODE

: testvmovapdmtoxmm2tom ( -- )
    ." testing OU128A [O]  XMM2  VMOVAPD, XMM2  OU128D [O]  VMOVAPD,   "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVAPDMTOXMM2TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovapdmtoxmm2tom


HEX
CODE TESTVMOVAPSXMM2TOM
  OU128A [O]  XMM2  MOVDQA,
  XMM2  OU128D [O]  VMOVAPS, 
  RET,
END-CODE

: testvmovapsxmm2tom ( -- )
    ." testing  XMM2  OU128D [O]  VMOVAPS,   "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVAPSXMM2TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovapsxmm2tom


HEX
CODE TESTVMOVAPSMTOXMM2TOM
  OU128A [O]  XMM2  VMOVAPS,
  XMM2  OU128D [O]  VMOVAPS, 
  RET,
END-CODE

: testvmovapsmtoxmm2tom ( -- )
    ." testing OU128A [O]  XMM2  VMOVAPS, XMM2  OU128D [O]  VMOVAPS,   "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVAPSMTOXMM2TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ." FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovapsmtoxmm2tom


HEX
CODE TESTVMOVDEAXTOXMM1
  OU128A [O]  EAX  MOV,
  EAX  XMM1  VMOVD, 
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvmovdeaxtoxmm1 ( -- )
    ." testing EAX  XMM1  VMOVD,"

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVDEAXTOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ FFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " FFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 0 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 0 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovdeaxtoxmm1

// ' TESTVMOVDEAXTOXMM1 >BODY 30 DUMP


HEX
CODE TESTVMOVDXMM1TOEAX
  OU128A [O]  XMM1  MOVDQA,
  RAX RAX XOR,
  XMM1  EAX  VMOVD,
  RAX  OU128D [O]  MOV,
  RET,
END-CODE

: testvmovdxmm1toeax ( -- )
    ." testing XMM1  EAX  VMOVD,"

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVDXMM1TOEAX >BODY CALLPROC DROP

    CR
    OU128D CCO@ FFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " FFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 0 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 0 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovdxmm1toeax


HEX
CODE TESTVMOVQ2RAXTOXMM1
  OU128A [O]  RAX  MOV,
  OU128C [O]  XMM1  MOVDQA,
  RAX  XMM1  VMOVQ2, 
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvmovq2raxtoxmm1 ( -- )
    ." testing RAX  XMM1  VMOVQ2,"

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    FFFFFFFFFFFFFFFF      OU128B CCO! // 2nd source
    FFFFFFFFFFFFFFFF      OU128B 8 + CCO! // 2nd source
    0                     OU128C CCO! // pre destination
    0                     OU128C 8 + CCO! // pre destination
    0                     OU128D CCO! // pre result
    0                     OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVQ2RAXTOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ FF0000FFFFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " FF0000FFFFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 0 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ." FAIL! wrong hi result. Expected " 0 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovq2raxtoxmm1


HEX
CODE TESTVMASKMOVPDMXMM0TOXMM1
  OU128B [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128A [O]  XMM0  XMM1  VMASKMOVPD, 
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvmaskmovpdmxmm0toxmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VMASKMOVPD, "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    0000000000000000      OU128B CCO! // 2nd source
    8000000000000000      OU128B 8 + CCO! // 2nd source
    1213141516171819      OU128C CCO! // pre destination
    2122232425262728      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMASKMOVPDMXMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 0 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 0 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmaskmovpdmxmm0toxmm1


HEX
CODE TESTVMASKMOVPDXMM0XMM1TOM
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  XMM0  XMM1  OU128D [O]  VMASKMOVPD, 
  RET,
END-CODE

: testvmaskmovpdxmm0xmm1tom ( -- )
    ." testing  XMM0  XMM1  OU128B [O]  VMASKMOVPD, "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    0000000000000000      OU128B CCO! // 2nd source
    8000000000000000      OU128B 8 + CCO! // 2nd source
    1213141516171819      OU128C CCO! // pre destination
    2122232425262728      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMASKMOVPDXMM0XMM1TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ 3132333435363738 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 3132333435363738 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmaskmovpdxmm0xmm1tom


HEX
CODE TESTVMASKMOVPSMXMM0TOXMM1
  OU128B [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128A [O]  XMM0  XMM1  VMASKMOVPS, 
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvmaskmovpsmxmm0toxmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VMASKMOVPS, "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    0000000080000000      OU128B CCO! // 2nd source
    8000000000000000      OU128B 8 + CCO! // 2nd source
    1213141516171819      OU128C CCO! // pre destination
    2122232425262728      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMASKMOVPSMXMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ FFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " FFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF00000000 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 00FFFFFF00000000 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmaskmovpsmxmm0toxmm1


HEX
CODE TESTVMASKMOVPSXMM0XMM1TOM
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  XMM0  XMM1  OU128D [O]  VMASKMOVPS, 
  RET,
END-CODE

: testvmaskmovpsxmm0xmm1tom ( -- )
    ." testing  XMM0  XMM1  OU128B [O]  VMASKMOVPS, "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    0000000080000000      OU128B CCO! // 2nd source
    8000000000000000      OU128B 8 + CCO! // 2nd source
    1213141516171819      OU128C CCO! // pre destination
    2122232425262728      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMASKMOVPSXMM0XMM1TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ 31323334FFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 31323334FFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF45464748 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 00FFFFFF45464748 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmaskmovpsxmm0xmm1tom


HEX
CODE TESTVPMASKMOVDMXMM0TOXMM1
  OU128B [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128A [O]  XMM0  XMM1  VPMASKMOVD, 
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpmaskmovdmxmm0toxmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VPMASKMOVD, "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    0000000080000000      OU128B CCO! // 2nd source
    8000000000000000      OU128B 8 + CCO! // 2nd source
    1213141516171819      OU128C CCO! // pre destination
    2122232425262728      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVPMASKMOVDMXMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ FFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " FFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF00000000 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 00FFFFFF00000000 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvpmaskmovdmxmm0toxmm1


HEX
CODE TESTVPMASKMOVDXMM0XMM1TOM
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  XMM0  XMM1  OU128D [O]  VPMASKMOVD, 
  RET,
END-CODE

: testvpmaskmovdxmm0xmm1tom ( -- )
    ." testing  XMM0  XMM1  OU128B [O]  VPMASKMOVD, "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    0000000080000000      OU128B CCO! // 2nd source
    8000000000000000      OU128B 8 + CCO! // 2nd source
    1213141516171819      OU128C CCO! // pre destination
    2122232425262728      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVPMASKMOVDXMM0XMM1TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ 31323334FFFF00FF = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 31323334FFFF00FF U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF45464748 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 00FFFFFF45464748 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvpmaskmovdxmm0xmm1tom


HEX
CODE TESTVPMASKMOVQMXMM0TOXMM1
  OU128B [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128A [O]  XMM0  XMM1  VPMASKMOVQ, 
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpmaskmovqmxmm0toxmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VPMASKMOVQ, "

    FF0000FFFFFF00FF      OU128A      CCO! // source
    00FFFFFF00FFFF00      OU128A 8 +  CCO! // source
    0000000000000000      OU128B CCO! // 2nd source
    8000000000000000      OU128B 8 + CCO! // 2nd source
    1213141516171819      OU128C CCO! // pre destination
    2122232425262728      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVPMASKMOVQMXMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 0 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 0 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 00FFFFFF00FFFF00 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 00FFFFFF00FFFF00 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvpmaskmovqmxmm0toxmm1


HEX
CODE TESTVMASKMOVDQUXMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  OU128D [O]  RDI   LEA,
  XMM1  XMM0  VMASKMOVDQU, // mask source
  RET,
END-CODE

: testvmaskmovdquxmm0toxmm1 ( -- )
    ." testing  XMM0  XMM1  VMASKMOVDQU, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMASKMOVDQUXMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1232331516361838 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1232331516361838 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 2122232445264728 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 2122232445264728 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmaskmovdquxmm0toxmm1


HEX
CODE TESTVMOVNTDQXMM0TOM
  OU128A [O]  XMM0  MOVDQA,
  XMM0  OU128D [O]  VMOVNTDQ,
  RET,
END-CODE

: testvmovntdqxmm0tom ( -- )
    ." testing  XMM0  OU128D [O]  VMOVNTDQ, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVNTDQXMM0TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1213141516171819 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1213141516171819 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 2122232425262728 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 2122232425262728 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovntdqxmm0tom


HEX
CODE TESTVMOVNTDQMFROMXMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128D [O]  <-   XMM0  VMOVNTDQ,
  RET,
END-CODE

: testvmovntdqmfromxmm ( -- )
    ." testing  OU128D [O]  <-   XMM0  VMOVNTDQ, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVNTDQMFROMXMM0 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1213141516171819 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1213141516171819 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 2122232425262728 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 2122232425262728 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovntdqmfromxmm


HEX
CODE TESTVMOVNTPDXMM0TOM
  OU128A [O]  XMM0  MOVDQA,
  XMM0  OU128D [O]  VMOVNTPD,
  RET,
END-CODE

: testvmovntpdxmm0tom ( -- )
    ." testing  XMM0  OU128D [O]  VMOVNTPD, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVNTPDXMM0TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1213141516171819 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1213141516171819 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 2122232425262728 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 2122232425262728 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovntpdxmm0tom


HEX
CODE TESTVMOVNTPSXMM0TOM
  OU128A [O]  XMM0  MOVDQA,
  XMM0  OU128D [O]  VMOVNTPS,
  RET,
END-CODE

: testvmovntpsxmm0tom ( -- )
    ." testing  XMM0  OU128D [O]  VMOVNTPS, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVNTPSXMM0TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1213141516171819 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1213141516171819 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 2122232425262728 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 2122232425262728 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovntpsxmm0tom


HEX
CODE TESTVMOVHPDMXMM0TOXMM1
  OU128B [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128A [O]  XMM0  XMM1  VMOVHPD,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvmovhpdmxmm0toxmm1 ( -- )
    ." testing  OU128A [O]  XMM0  XMM1  VMOVHPD, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVHPDMXMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 8000008080008000 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 8000008080008000 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 1213141516171819 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 1213141516171819 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovhpdmxmm0toxmm1


HEX
CODE TESTVMOVHPD2XMM0TOM
  OU128A [O]  XMM0  MOVDQA,
  XMM0  OU128D [O]  VMOVHPD2,
  RET,
END-CODE

: testvmovhpd2xmm0tom ( -- )
    ." testing  XMM0  OU128A [O]  VMOVHPD2, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVHPD2XMM0TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ 2122232425262728 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 2122232425262728 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 4142434445464748 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 4142434445464748 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovhpd2xmm0tom


HEX
CODE TESTVMOVHPSMXMM0TOXMM1
  OU128B [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128A [O]  XMM0  XMM1  VMOVHPS,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvmovhpsmxmm0toxmm1 ( -- )
    ." testing  OU128A [O]  XMM0  XMM1  VMOVHPS, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVHPSMXMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 8000008080008000 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 8000008080008000 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 1213141516171819 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 1213141516171819 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovhpsmxmm0toxmm1


HEX
CODE TESTVMOVHPS2XMM0TOM
  OU128A [O]  XMM0  MOVDQA,
  XMM0  OU128D [O]  VMOVHPS2,
  RET,
END-CODE

: testvmovhps2xmm0tom ( -- )
    ." testing  XMM0  OU128A [O]  VMOVHPS2, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVHPS2XMM0TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ 2122232425262728 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 2122232425262728 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 4142434445464748 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 4142434445464748 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovhps2xmm0tom



HEX
CODE TESTVMOVLPDMXMM0TOXMM1
  OU128B [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128A [O]  XMM0  XMM1  VMOVLPD,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvmovlpdmxmm0toxmm1 ( -- )
    ." testing  OU128A [O]  XMM0  XMM1  VMOVLPD, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVLPDMXMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1213141516171819 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1213141516171819 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 8080808000800080 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 8080808000800080 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovlpdmxmm0toxmm1


HEX
CODE TESTVMOVLPD2XMM0TOM
  OU128A [O]  XMM0  MOVDQA,
  XMM0  OU128D [O]  VMOVLPD2,
  RET,
END-CODE

: testvmovlpd2xmm0tom ( -- )
    ." testing  XMM0  OU128A [O]  VMOVLPD2, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVLPD2XMM0TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1213141516171819 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1213141516171819 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 4142434445464748 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 4142434445464748 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovlpd2xmm0tom


HEX
CODE TESTVMOVLPSMXMM0TOXMM1
  OU128B [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128A [O]  XMM0  XMM1  VMOVLPS,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvmovlpsmxmm0toxmm1 ( -- )
    ." testing  OU128A [O]  XMM0  XMM1  VMOVLPS, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVLPSMXMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1213141516171819 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1213141516171819 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 8080808000800080 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 8080808000800080 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovlpsmxmm0toxmm1


HEX
CODE TESTVMOVLPS2XMM0TOM
  OU128A [O]  XMM0  MOVDQA,
  XMM0  OU128D [O]  VMOVLPS2,
  RET,
END-CODE

: testvmovlps2xmm0tom ( -- )
    ." testing  XMM0  OU128A [O]  VMOVLPS2, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVLPS2XMM0TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1213141516171819 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1213141516171819 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 4142434445464748 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 4142434445464748 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovlps2xmm0tom


HEX
CODE TESTVMOVSDXMM0XMM1TOXMM2
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  OU128C [O]  XMM2  MOVDQA,
  XMM0  XMM1  XMM2  VMOVSD,
  XMM2  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvmovsdxmm0xmm1toxmm2 ( -- )
    ." testing  XMM0  XMM1  XMM2  VMOVSD, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVSDXMM0XMM1TOXMM2 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1213141516171819 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1213141516171819 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 8080808000800080 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 8080808000800080 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovsdxmm0xmm1toxmm2

// ' TESTVMOVSDXMM0XMM1TOXMM2 >BODY HEX 30 DUMP

HEX
CODE TESTVMOVSDXMM2FROMXMM1XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  OU128C [O]  XMM2  MOVDQA,
  XMM2 <- XMM1  XMM0  VMOVSD,
  XMM2  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvmovsdxmm2fromxmm1xmm2 ( -- )
    ." testing  XMM0  XMM1  XMM2  VMOVSD, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVSDXMM2FROMXMM1XMM0 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1213141516171819 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1213141516171819 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 8080808000800080 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 8080808000800080 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovsdxmm2fromxmm1xmm2

// ' TESTVMOVSDXMM2FROMXMM1XMM0 >BODY HEX 30 DUMP

HEX
CODE TESTVMOVSD2XMM0TOM
  OU128A [O]  XMM0  MOVDQA,
  XMM0  OU128D [O]  VMOVSD2,
  RET,
END-CODE

: testvmovlsd2xmm0tom ( -- )
    ." testing  XMM0  OU128A [O]  VMOVSD2, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVSD2XMM0TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1213141516171819 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1213141516171819 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 4142434445464748 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 4142434445464748 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovlsd2xmm0tom


HEX
CODE TESTVMOVSD2MTOXMM0
  OU128A [O]  XMM0  VMOVSD2,
  XMM0  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvmovlsd2mtoxmm0 ( -- )
    ." testing  OU128A [O]  XMM0  VMOVSD2, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVSD2MTOXMM0 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1213141516171819 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1213141516171819 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 0 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 0 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovlsd2mtoxmm0


HEX
CODE TESTVMOVSSXMM0XMM1TOXMM2
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  OU128C [O]  XMM2  MOVDQA,
  XMM0  XMM1  XMM2  VMOVSS,
  XMM2  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvmovssxmm0xmm1toxmm2 ( -- )
    ." testing  XMM0  XMM1  XMM2  VMOVSS, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVSSXMM0XMM1TOXMM2 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 8000008016171819 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 8000008016171819 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 8080808000800080 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 8080808000800080 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovssxmm0xmm1toxmm2

// ' TESTVMOVSSXMM0XMM1TOXMM2 >BODY HEX 30 DUMP

HEX
CODE TESTVMOVSSXMM2FROMXMM1XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  OU128C [O]  XMM2  MOVDQA,
  XMM2 <- XMM1  XMM0  VMOVSS,
  XMM2  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvmovssxmm2fromxmm1xmm2 ( -- )
    ." testing  XMM0  XMM1  XMM2  VMOVSS, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVSSXMM2FROMXMM1XMM0 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 8000008016171819 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 8000008016171819 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 8080808000800080 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 8080808000800080 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovssxmm2fromxmm1xmm2

// ' TESTVMOVSSXMM2FROMXMM1XMM0 >BODY HEX 30 DUMP

HEX
CODE TESTVMOVSS2XMM0TOM
  OU128A [O]  XMM0  MOVDQA,
  XMM0  OU128D [O]  VMOVSS2,
  RET,
END-CODE

: testvmovlss2xmm0tom ( -- )
    ." testing  XMM0  OU128A [O]  VMOVSS2, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVSS2XMM0TOM >BODY CALLPROC DROP

    CR
    OU128D CCO@ 3132333416171819 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 3132333416171819 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 4142434445464748 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 4142434445464748 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovlss2xmm0tom


HEX
CODE TESTVMOVSS2MTOXMM0
  OU128A [O]  XMM0   VMOVSS2,
  XMM0  OU128D [O]   MOVDQA,
  RET,
END-CODE

: testvmovlss2mtoxmm0 ( -- )
    ." testing  XMM0  OU128A [O]  VMOVSS2, "

    1213141516171819      OU128A      CCO! // source
    2122232425262728      OU128A 8 +  CCO! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVMOVSS2MTOXMM0 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 16171819 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 16171819 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 0 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 0 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvmovlss2mtoxmm0


HEX
CODE TESTVCVTPS2PHN8XMM0TOXMM2
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM2  MOVDQA,
  3 N  XMM0  XMM2  VCVTPS2PH,
  XMM2  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvcvtps2phn8xmm0toxmm2 ( -- )
    ." testing  3 N  XMM0  XMM2  VCVTPS2PH, "

    FPS1.0                OU128A      CCOU32! // source
    FPS2.0                OU128A 4 +  CCOU32! // source
    FPS4.0                OU128A 8 +  CCOU32! // source
    FPS8.0                OU128A 0C + CCOU32! // source
    5152535455565758      OU128A 10 + CCO!    // after source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVCVTPS2PHN8XMM0TOXMM2 >BODY CALLPROC DROP

    CR
    OU128D CCOU16@ FPH1.0 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " FPH1.0 U. 
      ." , got " OU128D CCOU16@ U.
    THEN

    CR
    OU128D 2 + CCOU16@ FPH2.0 = IF
     ."   SUCCESS! ok middle lo result"
    ELSE
      ."  FAIL! wrong middle lo result. Expected " FPH2.0 U. 
      ." , got " OU128D 2 + CCOU16@ U.
    THEN

    CR
    OU128D 4 + CCOU16@ FPH4.0 = IF
     ."   SUCCESS! ok middle hi result"
    ELSE
      ."  FAIL! wrong middle hi result. Expected " FPH4.0 U. 
      ." , got " OU128D 4 + CCOU16@ U.
    THEN

    CR
    OU128D 6 + CCOU16@ FPH8.0 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " FPH8.0 U. 
      ." , got " OU128D 6 + CCOU16@ U.
    THEN

    CR
    OU128D 8 + CCO@ 0 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 0 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvcvtps2phn8xmm0toxmm2


HEX
CODE TESTVCVTPS2PHN8YMM0TOXMM2
  OU128A [O]  YMM0  VMOVDQA,
  OU128C [O]  XMM2  MOVDQA,
  3 N  YMM0  XMM2  VCVTPS2PH,
  XMM2  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvcvtps2phn8ymm0toxmm2 ( -- )
    ." testing  3 N  YMM0  XMM2  VCVTPS2PH, "

    FPS1.0                OU128A      CCOU32! // source
    FPS2.0                OU128A  4 + CCOU32! // source
    FPS4.0                OU128A  8 + CCOU32! // source
    FPS8.0                OU128A 0C + CCOU32! // source
    FPS1.0                OU128A 10 + CCOU32! // source
    FPS2.0                OU128A 14 + CCOU32! // source
    FPS1.0                OU128A 18 + CCOU32! // source
    FPS4.0                OU128A 1C + CCOU32! // source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVCVTPS2PHN8YMM0TOXMM2 >BODY CALLPROC DROP

    CR
    OU128D CCOU16@ FPH1.0 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " FPH1.0 U. 
      ." , got " OU128D CCOU16@ U.
    THEN

    CR
    OU128D 2 + CCOU16@ FPH2.0 = IF
     ."   SUCCESS! ok middle lo result"
    ELSE
      ."  FAIL! wrong middle lo result. Expected " FPH2.0 U. 
      ." , got " OU128D 2 + CCOU16@ U.
    THEN

    CR
    OU128D 4 + CCOU16@ FPH4.0 = IF
     ."   SUCCESS! ok middle hi result"
    ELSE
      ."  FAIL! wrong middle hi result. Expected " FPH4.0 U. 
      ." , got " OU128D 4 + CCOU16@ U.
    THEN

    CR
    OU128D 6 + CCOU16@ FPH8.0 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " FPH8.0 U. 
      ." , got " OU128D 6 + CCOU16@ U.
    THEN

    CR
    OU128D 8 + CCOU16@ FPH1.0 = IF
     ."   SUCCESS! ok upper lo nresult"
    ELSE
      ."  FAIL! wrong upper lo result. Expected " FPH1.0 U. 
      ." , got " OU128D 8 + CCOU16@ U.
    THEN

    CR
    OU128D 0A + CCOU16@ FPH2.0 = IF
     ."   SUCCESS! ok upper middle lo result"
    ELSE
      ."  FAIL! wrong upper middle lo result. Expected " FPH2.0 U. 
      ." , got " OU128D 0A + CCOU16@ U.
    THEN

    CR
    OU128D 0C + CCOU16@ FPH1.0 = IF
     ."   SUCCESS! ok upper middle hi result"
    ELSE
      ."  FAIL! wrong upper middle hi result. Expected " FPH1.0 U. 
      ." , got " OU128D 0C + CCOU16@ U.
    THEN

    CR
    OU128D 0E + CCOU16@ FPH4.0 = IF
     ."   SUCCESS! ok upper hi result"
    ELSE
      ."  FAIL! wrong upper hi result. Expected " FPH4.0 U. 
      ." , got " OU128D 0E + CCOU16@ U.
    THEN

    CR 
;

testvcvtps2phn8ymm0toxmm2


HEX
CODE TESTVCVTPS2PHN8XMM0TOM128
  OU128A [O]  XMM0  MOVDQA,
  3 N  XMM0  OU128D [O]  VCVTPS2PH,
  RET,
END-CODE

: testvcvtps2phn8xmm0tom128 ( -- )
    ." testing  3 N  XMM0  OU128D [O]  VCVTPS2PH, "

    FPS1.0                OU128A      CCOU32! // source
    FPS2.0                OU128A 4 +  CCOU32! // source
    FPS4.0                OU128A 8 +  CCOU32! // source
    FPS8.0                OU128A 0C + CCOU32! // source
    5152535455565758      OU128A 10 + CCO!    // after source
    8000008080008000      OU128B CCO! // 2nd source      // 9A
    8080808000800080      OU128B 8 + CCO! // 2nd source  // F5
    FF0000FFFFFF00FF      OU128C CCO! // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO! // pre destination
    3132333435363738      OU128D CCO! // pre result
    4142434445464748      OU128D 8 + CCO! // pre result  
    
    0 ['] TESTVCVTPS2PHN8XMM0TOM128 >BODY CALLPROC DROP

    CR
    OU128D CCOU16@ FPH1.0 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " FPH1.0 U. 
      ." , got " OU128D CCOU16@ U.
    THEN

    CR
    OU128D 2 + CCOU16@ FPH2.0 = IF
     ."   SUCCESS! ok middle lo result"
    ELSE
      ."  FAIL! wrong middle lo result. Expected " FPH2.0 U. 
      ." , got " OU128D 2 + CCOU16@ U.
    THEN

    CR
    OU128D 4 + CCOU16@ FPH4.0 = IF
     ."   SUCCESS! ok middle hi result"
    ELSE
      ."  FAIL! wrong middle hi result. Expected " FPH4.0 U. 
      ." , got " OU128D 4 + CCOU16@ U.
    THEN

    CR
    OU128D 6 + CCOU16@ FPH8.0 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " FPH8.0 U. 
      ." , got " OU128D 6 + CCOU16@ U.
    THEN

    CR
    OU128D 8 + CCO@ 4142434445464748 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 4142434445464748 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR 
;

testvcvtps2phn8xmm0tom128


HEX
CODE TESTVPSLLDQN8XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  3 N  XMM0  XMM1  VPSLLDQ,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpslldqn8xmm0toxmm1 ( -- )
    ." testing  3 N  XMM0  XMM1  VPSLLDQ, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // 2nd source     
    8080808000800080      OU128B 8 + CCO!  // 2nd source  
    FF0000FFFFFF00FF      OU128C CCO!      // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO!  // pre destination
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSLLDQN8XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 2425262728000000 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 2425262728000000 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 1516171819212223 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 1516171819212223 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpslldqn8xmm0toxmm1



HEX
CODE TESTVPSLLDQN8YMM0TOYMM1
  OU128A [O]  YMM0  VMOVDQA,
  OU128B [O]  YMM1  VMOVDQA,
  3 N  YMM0  YMM1  VPSLLDQ,
  YMM1  OU128D [O] VMOVDQA,
  RET,
END-CODE

: testvpslldqn8ymm0toymm1 ( -- )
    ." testing  3 N  YMM0  YMM1  VPSLLDQ, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // 2nd source     
    8080808000800080      OU128B 8 + CCO!  // 2nd source 
    0                     OU128B 10 + CCO! // 2nd source 
    0                     OU128B 18 + CCO! // 2nd source  
    FF0000FFFFFF00FF      OU128C CCO!      // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO!  // pre destination
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result
    8182283848586878      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSLLDQN8YMM0TOYMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 2425262728000000 = IF
     ."   SUCCESS! ok lo lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 2425262728000000 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 1516171819212223 = IF
     ."   SUCCESS! ok lo hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 1516171819212223 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR
    OU128D 10 + CCO@ 5455565758000000 = IF
     ."   SUCCESS! ok hi lo result"
    ELSE
      ."  FAIL! wrong hi lo result. Expected " 5455565758000000 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    CR
    OU128D 18 + CCO@ 6465666768515253 = IF
     ."   SUCCESS! ok hi hi result"
    ELSE
      ."  FAIL! wrong hi hi result. Expected " 6465666768515253 U. 
      ." , got " OU128D 18 + CCO@ U.
    THEN

    CR 
;

testvpslldqn8ymm0toymm1


HEX
CODE TESTVPSLLQN8XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  4 N  XMM0  XMM1  VPSLLQ,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpsllqn8xmm0toxmm1 ( -- )
    ." testing  4 N  XMM0  XMM1  VPSLLQ, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // 2nd source     
    8080808000800080      OU128B 8 + CCO!  // 2nd source  
    FF0000FFFFFF00FF      OU128C CCO!      // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO!  // pre destination
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSLLQN8XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1222324252627280 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1222324252627280 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 2131415161718190 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 2131415161718190 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpsllqn8xmm0toxmm1



HEX
CODE TESTVPSLLQN8YMM0TOYMM1
  OU128A [O]  YMM0  VMOVDQA,
  OU128B [O]  YMM1  VMOVDQA,
  4 N  YMM0  YMM1  VPSLLQ,
  YMM1  OU128D [O] VMOVDQA,
  RET,
END-CODE

: testvpsllqn8ymm0toymm1 ( -- )
    ." testing  4 N  YMM0  YMM1  VPSLLQ, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // source
    6162636465666768      OU128A 18 + CCO! // source
    8000008080008000      OU128B CCO!      // pre destination     
    8080808000800080      OU128B 8 + CCO!  // pre destination 
    0                     OU128B 10 + CCO! // pre destination 
    0                     OU128B 18 + CCO! // pre destination  
    FF0000FFFFFF00FF      OU128C CCO!      // 
    00FFFFFF00FFFF00      OU128C 8 + CCO!  // 
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result
    8182283848586878      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSLLQN8YMM0TOYMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1222324252627280 = IF
     ."   SUCCESS! ok lo lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1222324252627280 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 2131415161718190 = IF
     ."   SUCCESS! ok lo hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 2131415161718190 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR
    OU128D 10 + CCO@ 1525354555657580 = IF
     ."   SUCCESS! ok hi lo result"
    ELSE
      ."  FAIL! wrong hi lo result. Expected " 1525354555657580 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    CR
    OU128D 18 + CCO@ 1626364656667680 = IF
     ."   SUCCESS! ok hi hi result"
    ELSE
      ."  FAIL! wrong hi hi result. Expected " 1626364656667680 U. 
      ." , got " OU128D 18 + CCO@ U.
    THEN

    CR 
;

testvpsllqn8ymm0toymm1

HEX
CODE TESTVPSLLQXMM2XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  OU128C [O]  XMM2  MOVDQA,
  XMM2  XMM0  XMM1  VPSLLQ,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpsllqxmm2xmm0toxmm1 ( -- )
    ." testing  XMM2  XMM0  XMM1  VPSLLQ, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // pre destination    
    8080808000800080      OU128B 8 + CCO!  // pre destination  
                   4      OU128C CCO!      // count
                   0      OU128C 8 + CCO!  // count
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSLLQXMM2XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1222324252627280 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1222324252627280 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 2131415161718190 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 2131415161718190 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpsllqxmm2xmm0toxmm1


HEX
CODE TESTVPSLLQM128XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  OU128C [O]  XMM0  XMM1  VPSLLQ,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpsllqm128xmm0toxmm1 ( -- )
    ." testing  OU128C [O]  XMM0  XMM1  VPSLLQ, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // pre destination    
    8080808000800080      OU128B 8 + CCO!  // pre destination  
                   4      OU128C CCO!      // count
                   0      OU128C 8 + CCO!  // count
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSLLQM128XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1222324252627280 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1222324252627280 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 2131415161718190 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 2131415161718190 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpsllqm128xmm0toxmm1


HEX
CODE TESTVPSLLQM8YMM0TOYMM1
  OU128A [O]  YMM0  VMOVDQA,
  OU128B [O]  YMM1  VMOVDQA,
  OU128C [O]  RAX  LEA,
  RAX [R]  YMM0  YMM1  VPSLLQ,
  YMM1  OU128D [O] VMOVDQA,
  RET,
END-CODE

: testvpsllqm8ymm0toymm1 ( -- )
    ." testing  OU128C [O]  YMM0  YMM1  VPSLLQ, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // source
    6162636465666768      OU128A 18 + CCO! // source
    8000008080008000      OU128B CCO!      // pre destination     
    8080808000800080      OU128B 8 + CCO!  // pre destination 
    0                     OU128B 10 + CCO! // pre destination 
    0                     OU128B 18 + CCO! // pre destination 
                   4      OU128C CCO!      // count
                   0      OU128C 8 + CCO!  // count
                   1      OU128C 10 + CCO! // after count (this is not used)
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result
    8182283848586878      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSLLQM8YMM0TOYMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1222324252627280 = IF
     ."   SUCCESS! ok lo lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1222324252627280 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 2131415161718190 = IF
     ."   SUCCESS! ok lo hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 2131415161718190 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR
    OU128D 10 + CCO@ 1525354555657580 = IF
     ."   SUCCESS! ok hi lo result"
    ELSE
      ."  FAIL! wrong hi lo result. Expected " 1525354555657580 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    CR
    OU128D 18 + CCO@ 1626364656667680 = IF
     ."   SUCCESS! ok hi hi result"
    ELSE
      ."  FAIL! wrong hi hi result. Expected " 1626364656667680 U. 
      ." , got " OU128D 18 + CCO@ U.
    THEN

    CR 
;

testvpsllqm8ymm0toymm1

HEX
CODE TESTVPSLLQYMM2YMM0TOYMM1
  OU128A [O]  YMM0  VMOVDQA,
  OU128B [O]  YMM1  VMOVDQA,
  OU128C [O]  YMM2  VMOVDQA,
  XMM2  YMM0  YMM1  VPSLLQ,  // only the low 128 bits are used as count
  YMM1  OU128D [O] VMOVDQA,
  RET,
END-CODE

: testvpsllqymm2ymm0toymm1 ( -- )
    ." testing  XMM2  YMM0  YMM1  VPSLLQ, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // source
    6162636465666768      OU128A 18 + CCO! // source
    8000008080008000      OU128B CCO!      // pre destination     
    8080808000800080      OU128B 8 + CCO!  // pre destination 
    0                     OU128B 10 + CCO! // pre destination 
    0                     OU128B 18 + CCO! // pre destination 
                   4      OU128C CCO!      // count
                   0      OU128C 8 + CCO!  // count
                   1      OU128C 10 + CCO! // after count (this is not used)
                   1      OU128C 18 + CCO! // after count (this is not used)
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result
    8182283848586878      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSLLQYMM2YMM0TOYMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1222324252627280 = IF
     ."   SUCCESS! ok lo lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1222324252627280 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 2131415161718190 = IF
     ."   SUCCESS! ok lo hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 2131415161718190 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR
    OU128D 10 + CCO@ 1525354555657580 = IF
     ."   SUCCESS! ok hi lo result"
    ELSE
      ."  FAIL! wrong hi lo result. Expected " 1525354555657580 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    CR
    OU128D 18 + CCO@ 1626364656667680 = IF
     ."   SUCCESS! ok hi hi result"
    ELSE
      ."  FAIL! wrong hi hi result. Expected " 1626364656667680 U. 
      ." , got " OU128D 18 + CCO@ U.
    THEN

    CR 
;

testvpsllqymm2ymm0toymm1

HEX
CODE TESTVPSLLDN8XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  4 N  XMM0  XMM1  VPSLLD,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpslldn8xmm0toxmm1 ( -- )
    ." testing  4 N  XMM0  XMM1  VPSLLD, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // 2nd source     
    8080808000800080      OU128B 8 + CCO!  // 2nd source  
    FF0000FFFFFF00FF      OU128C CCO!      // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO!  // pre destination
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSLLDN8XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCOU32@ 52627280 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 52627280 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 4 + CCOU32@ 12223240 = IF
     ."   SUCCESS! ok middle lo nresult"
    ELSE
      ."  FAIL! wrong middle lo result. Expected " 12223240 U. 
      ." , got " OU128D 4 +  CCO@ U.
    THEN

    CR
    OU128D 8 + CCOU32@ 61718190 = IF
     ."   SUCCESS! ok middle hi result"
    ELSE
      ."  FAIL! wrong middle hi result. Expected " 61718190 U. 
      ." , got " OU128D 8 + CCOU32@ U.
    THEN

    CR
    OU128D 0C + CCOU32@ 21314150 = IF
     ."   SUCCESS! ok middle hi result"
    ELSE
      ."  FAIL! wrong middle hi result. Expected " 21314150 U. 
      ." , got " OU128D 0C + CCOU32@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpslldn8xmm0toxmm1


HEX
CODE TESTVPSLLDXMM2XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  OU128C [O]  XMM2  MOVDQA,
  XMM2  XMM0  XMM1  VPSLLD,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpslldxmm2xmm0toxmm1 ( -- )
    ." testing  XMM2  XMM0  XMM1  VPSLLD, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // pre destination     
    8080808000800080      OU128B 8 + CCO!  // pre destination  
                   4      OU128C CCO!      // count
                   0      OU128C 8 + CCO!  // count
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSLLDXMM2XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCOU32@ 52627280 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 52627280 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 4 + CCOU32@ 12223240 = IF
     ."   SUCCESS! ok middle lo nresult"
    ELSE
      ."  FAIL! wrong middle lo result. Expected " 12223240 U. 
      ." , got " OU128D 4 +  CCO@ U.
    THEN

    CR
    OU128D 8 + CCOU32@ 61718190 = IF
     ."   SUCCESS! ok middle hi result"
    ELSE
      ."  FAIL! wrong middle hi result. Expected " 61718190 U. 
      ." , got " OU128D 8 + CCOU32@ U.
    THEN

    CR
    OU128D 0C + CCOU32@ 21314150 = IF
     ."   SUCCESS! ok middle hi result"
    ELSE
      ."  FAIL! wrong middle hi result. Expected " 21314150 U. 
      ." , got " OU128D 0C + CCOU32@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpslldxmm2xmm0toxmm1


HEX
CODE TESTVPSLLWN8XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  4 N  XMM0  XMM1  VPSLLW,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpsllwn8xmm0toxmm1 ( -- )
    ." testing  4 N  XMM0  XMM1  VPSLLW, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // 2nd source     
    8080808000800080      OU128B 8 + CCO!  // 2nd source  
    FF0000FFFFFF00FF      OU128C CCO!      // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO!  // pre destination
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSLLWN8XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCOU16@ 7280 = IF
     ."   SUCCESS! ok lo result"
    ELSE
      ."  FAIL! wrong lo result. Expected " 7280 U. 
      ." , got " OU128D CCOU16@ U.
    THEN

    CR
    OU128D 2 + CCOU16@ 5260 = IF
     ."   SUCCESS! ok 2nd lo result"
    ELSE
      ."  FAIL! wrong 2nd lo result. Expected " 5260 U. 
      ." , got " OU128D 2 +  CCOU16@ U.
    THEN

    CR
    OU128D 4 + CCOU16@ 3240 = IF
     ."   SUCCESS! ok 3rd lo result"
    ELSE
      ."  FAIL! wrong 3rd lo result. Expected " 3240 U. 
      ." , got " OU128D 8 + CCOU16@ U.
    THEN

    CR
    OU128D 6 + CCOU16@ 1220 = IF
     ."   SUCCESS! ok 4th lo result"
    ELSE
      ."  FAIL! wrong 4th lo result. Expected " 1220 U. 
      ." , got " OU128D 6 + CCOU16@ U.
    THEN

    CR
    OU128D 8 + CCOU16@ 8190 = IF
     ."   SUCCESS! ok 5th lo result"
    ELSE
      ."  FAIL! wrong 5th lo result. Expected " 8190 U. 
      ." , got " OU128D 8 + CCOU16@ U.
    THEN

    CR
    OU128D 0A + CCOU16@ 6170 = IF
     ."   SUCCESS! ok 6th lo result"
    ELSE
      ."  FAIL! wrong 6th lo result. Expected " 6170 U. 
      ." , got " OU128D 0A + CCOU16@ U.
    THEN

    CR
    OU128D 0C + CCOU16@ 4150 = IF
     ."   SUCCESS! ok 7th lo result"
    ELSE
      ."  FAIL! wrong 7th lo result. Expected " 4150 U. 
      ." , got " OU128D 0C + CCOU16@ U.
    THEN

    CR
    OU128D 0E + CCOU16@ 2130 = IF
     ."   SUCCESS! ok 8th lo result"
    ELSE
      ."  FAIL! wrong 8th lo result. Expected " 2130 U. 
      ." , got " OU128D 0E + CCOU16@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpsllwn8xmm0toxmm1


HEX
CODE TESTVPSLLWXMM2XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  OU128C [O]  XMM2  MOVDQA,
  XMM2  XMM0  XMM1  VPSLLW,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpsllwxmm2xmm0toxmm1 ( -- )
    ." testing  XMM2  XMM0  XMM1  VPSLLW, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // pre destination    
    8080808000800080      OU128B 8 + CCO!  // pre destination 
                   4      OU128C CCO!      // count
                   0      OU128C 8 + CCO!  // count
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSLLWXMM2XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCOU16@ 7280 = IF
     ."   SUCCESS! ok lo result"
    ELSE
      ."  FAIL! wrong lo result. Expected " 7280 U. 
      ." , got " OU128D CCOU16@ U.
    THEN

    CR
    OU128D 2 + CCOU16@ 5260 = IF
     ."   SUCCESS! ok 2nd lo result"
    ELSE
      ."  FAIL! wrong 2nd lo result. Expected " 5260 U. 
      ." , got " OU128D 2 +  CCOU16@ U.
    THEN

    CR
    OU128D 4 + CCOU16@ 3240 = IF
     ."   SUCCESS! ok 3rd lo result"
    ELSE
      ."  FAIL! wrong 3rd lo result. Expected " 3240 U. 
      ." , got " OU128D 8 + CCOU16@ U.
    THEN

    CR
    OU128D 6 + CCOU16@ 1220 = IF
     ."   SUCCESS! ok 4th lo result"
    ELSE
      ."  FAIL! wrong 4th lo result. Expected " 1220 U. 
      ." , got " OU128D 6 + CCOU16@ U.
    THEN

    CR
    OU128D 8 + CCOU16@ 8190 = IF
     ."   SUCCESS! ok 5th lo result"
    ELSE
      ."  FAIL! wrong 5th lo result. Expected " 8190 U. 
      ." , got " OU128D 8 + CCOU16@ U.
    THEN

    CR
    OU128D 0A + CCOU16@ 6170 = IF
     ."   SUCCESS! ok 6th lo result"
    ELSE
      ."  FAIL! wrong 6th lo result. Expected " 6170 U. 
      ." , got " OU128D 0A + CCOU16@ U.
    THEN

    CR
    OU128D 0C + CCOU16@ 4150 = IF
     ."   SUCCESS! ok 7th lo result"
    ELSE
      ."  FAIL! wrong 7th lo result. Expected " 4150 U. 
      ." , got " OU128D 0C + CCOU16@ U.
    THEN

    CR
    OU128D 0E + CCOU16@ 2130 = IF
     ."   SUCCESS! ok 8th lo result"
    ELSE
      ."  FAIL! wrong 8th lo result. Expected " 2130 U. 
      ." , got " OU128D 0E + CCOU16@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    CR 
;

testvpsllwxmm2xmm0toxmm1



HEX
CODE TESTVPSRLDQN8XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  3 N  XMM0  XMM1  VPSRLDQ,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE



: testvpsrldqn8xmm0toxmm1 ( -- )
    ." testing  3 N  XMM0  XMM1  VPSRLDQ, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // 2nd source     
    8080808000800080      OU128B 8 + CCO!  // 2nd source  
    FF0000FFFFFF00FF      OU128C CCO!      // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO!  // pre destination
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSRLDQN8XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1718192122232425 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1718192122232425 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 1213141516 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 1213141516 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpsrldqn8xmm0toxmm1



HEX
CODE TESTVPSRLDQN8YMM0TOYMM1
  OU128A [O]  YMM0  VMOVDQA,
  OU128B [O]  YMM1  VMOVDQA,
  3 N  YMM0  YMM1  VPSRLDQ,
  YMM1  OU128D [O] VMOVDQA,
  RET,
END-CODE

: testvpsrldqn8ymm0toymm1 ( -- )
    ." testing  3 N  YMM0  YMM1  VPSRLDQ, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // 2nd source     
    8080808000800080      OU128B 8 + CCO!  // 2nd source 
    0                     OU128B 10 + CCO! // 2nd source 
    0                     OU128B 18 + CCO! // 2nd source  
    FF0000FFFFFF00FF      OU128C CCO!      // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO!  // pre destination
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result
    8182283848586878      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSRLDQN8YMM0TOYMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 1718192122232425 = IF
     ."   SUCCESS! ok lo lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 1718192122232425 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 1213141516 = IF
     ."   SUCCESS! ok lo hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 1213141516 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR
    OU128D 10 + CCO@ 6667685152535455 = IF
     ."   SUCCESS! ok hi lo result"
    ELSE
      ."  FAIL! wrong hi lo result. Expected " 6667685152535455 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    CR
    OU128D 18 + CCO@ 6162636465 = IF
     ."   SUCCESS! ok hi hi result"
    ELSE
      ."  FAIL! wrong hi hi result. Expected " 6162636465 U. 
      ." , got " OU128D 18 + CCO@ U.
    THEN

    CR 
;

testvpsrldqn8ymm0toymm1


HEX
CODE TESTVPSRLQN8XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  4 N  XMM0  XMM1  VPSRLQ,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpsrlqn8xmm0toxmm1 ( -- )
    ." testing  4 N  XMM0  XMM1  VPSRLQ, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // 2nd source     
    8080808000800080      OU128B 8 + CCO!  // 2nd source  
    FF0000FFFFFF00FF      OU128C CCO!      // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO!  // pre destination
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSRLQN8XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 212223242526272 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 212223242526272 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 121314151617181 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 121314151617181 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpsrlqn8xmm0toxmm1



HEX
CODE TESTVPSRLQN8YMM0TOYMM1
  OU128A [O]  YMM0  VMOVDQA,
  OU128B [O]  YMM1  VMOVDQA,
  4 N  YMM0  YMM1  VPSRLQ,
  YMM1  OU128D [O] VMOVDQA,
  RET,
END-CODE

: testvpsrlqn8ymm0toymm1 ( -- )
    ." testing  4 N  YMM0  YMM1  VPSRLQ, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // source
    6162636465666768      OU128A 18 + CCO! // source
    8000008080008000      OU128B CCO!      // pre destination     
    8080808000800080      OU128B 8 + CCO!  // pre destination 
    0                     OU128B 10 + CCO! // pre destination 
    0                     OU128B 18 + CCO! // pre destination  
    FF0000FFFFFF00FF      OU128C CCO!      // 
    00FFFFFF00FFFF00      OU128C 8 + CCO!  // 
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result
    8182283848586878      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSRLQN8YMM0TOYMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 212223242526272 = IF
     ."   SUCCESS! ok lo lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 212223242526272 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 121314151617181 = IF
     ."   SUCCESS! ok lo hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 121314151617181 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR
    OU128D 10 + CCO@ 515253545556575 = IF
     ."   SUCCESS! ok hi lo result"
    ELSE
      ."  FAIL! wrong hi lo result. Expected " 515253545556575 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    CR
    OU128D 18 + CCO@ 616263646566676 = IF
     ."   SUCCESS! ok hi hi result"
    ELSE
      ."  FAIL! wrong hi hi result. Expected " 616263646566676 U. 
      ." , got " OU128D 18 + CCO@ U.
    THEN

    CR 
;

testvpsrlqn8ymm0toymm1

HEX
CODE TESTVPSRLQXMM2XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  OU128C [O]  XMM2  MOVDQA,
  XMM2  XMM0  XMM1  VPSRLQ,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpsrlqxmm2xmm0toxmm1 ( -- )
    ." testing  XMM2  XMM0  XMM1  VPSRLQ, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // pre destination    
    8080808000800080      OU128B 8 + CCO!  // pre destination  
                   4      OU128C CCO!      // count
                   0      OU128C 8 + CCO!  // count
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSRLQXMM2XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 212223242526272 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 212223242526272 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 121314151617181 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 121314151617181 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpsrlqxmm2xmm0toxmm1


HEX
CODE TESTVPSRLQM128XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  OU128C [O]  XMM0  XMM1  VPSRLQ,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpsrlqm128xmm0toxmm1 ( -- )
    ." testing  OU128C [O]  XMM0  XMM1  VPSRLQ, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // pre destination    
    8080808000800080      OU128B 8 + CCO!  // pre destination  
                   4      OU128C CCO!      // count
                   0      OU128C 8 + CCO!  // count
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSRLQM128XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 212223242526272 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 212223242526272 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 121314151617181 = IF
     ."   SUCCESS! ok hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 121314151617181 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpsrlqm128xmm0toxmm1


HEX
CODE TESTVPSRLQM8YMM0TOYMM1
  OU128A [O]  YMM0  VMOVDQA,
  OU128B [O]  YMM1  VMOVDQA,
  OU128C [O]  RAX  LEA,
  RAX [R]  YMM0  YMM1  VPSRLQ,
  YMM1  OU128D [O] VMOVDQA,
  RET,
END-CODE

: testvpsrlqm8ymm0toymm1 ( -- )
    ." testing  OU128C [O]  YMM0  YMM1  VPSRLQ, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // source
    6162636465666768      OU128A 18 + CCO! // source
    8000008080008000      OU128B CCO!      // pre destination     
    8080808000800080      OU128B 8 + CCO!  // pre destination 
    0                     OU128B 10 + CCO! // pre destination 
    0                     OU128B 18 + CCO! // pre destination 
                   4      OU128C CCO!      // count
                   0      OU128C 8 + CCO!  // count
                   1      OU128C 10 + CCO! // after count (this is not used)
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result
    8182283848586878      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSRLQM8YMM0TOYMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 212223242526272 = IF
     ."   SUCCESS! ok lo lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 212223242526272 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 121314151617181 = IF
     ."   SUCCESS! ok lo hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 121314151617181 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR
    OU128D 10 + CCO@ 515253545556575 = IF
     ."   SUCCESS! ok hi lo result"
    ELSE
      ."  FAIL! wrong hi lo result. Expected " 515253545556575 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    CR
    OU128D 18 + CCO@ 616263646566676 = IF
     ."   SUCCESS! ok hi hi result"
    ELSE
      ."  FAIL! wrong hi hi result. Expected " 616263646566676 U. 
      ." , got " OU128D 18 + CCO@ U.
    THEN

    CR 
;

testvpsrlqm8ymm0toymm1

HEX
CODE TESTVPSRLQYMM2YMM0TOYMM1
  OU128A [O]  YMM0  VMOVDQA,
  OU128B [O]  YMM1  VMOVDQA,
  OU128C [O]  YMM2  VMOVDQA,
  XMM2  YMM0  YMM1  VPSRLQ,  // only the low 128 bits are used as count
  YMM1  OU128D [O] VMOVDQA,
  RET,
END-CODE

: testvpsrlqymm2ymm0toymm1 ( -- )
    ." testing  XMM2  YMM0  YMM1  VPSRLQ, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // source
    6162636465666768      OU128A 18 + CCO! // source
    8000008080008000      OU128B CCO!      // pre destination     
    8080808000800080      OU128B 8 + CCO!  // pre destination 
    0                     OU128B 10 + CCO! // pre destination 
    0                     OU128B 18 + CCO! // pre destination 
                   4      OU128C CCO!      // count
                   0      OU128C 8 + CCO!  // count
                   1      OU128C 10 + CCO! // after count (this is not used)
                   1      OU128C 18 + CCO! // after count (this is not used)
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result
    8182283848586878      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSRLQYMM2YMM0TOYMM1 >BODY CALLPROC DROP

    CR
    OU128D CCO@ 212223242526272 = IF
     ."   SUCCESS! ok lo lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 212223242526272 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 8 + CCO@ 121314151617181 = IF
     ."   SUCCESS! ok lo hi result"
    ELSE
      ."  FAIL! wrong hi result. Expected " 121314151617181 U. 
      ." , got " OU128D 8 + CCO@ U.
    THEN

    CR
    OU128D 10 + CCO@ 515253545556575 = IF
     ."   SUCCESS! ok hi lo result"
    ELSE
      ."  FAIL! wrong hi lo result. Expected " 515253545556575 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    CR
    OU128D 18 + CCO@ 616263646566676 = IF
     ."   SUCCESS! ok hi hi result"
    ELSE
      ."  FAIL! wrong hi hi result. Expected " 616263646566676 U. 
      ." , got " OU128D 18 + CCO@ U.
    THEN

    CR 
;

testvpsrlqymm2ymm0toymm1

HEX
CODE TESTVPSRLDN8XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  4 N  XMM0  XMM1  VPSRLD,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpsrldn8xmm0toxmm1 ( -- )
    ." testing  4 N  XMM0  XMM1  VPSRLD, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // 2nd source     
    8080808000800080      OU128B 8 + CCO!  // 2nd source  
    FF0000FFFFFF00FF      OU128C CCO!      // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO!  // pre destination
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSRLDN8XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCOU32@ 2526272 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 2526272 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 4 + CCOU32@ 2122232 = IF
     ."   SUCCESS! ok middle lo nresult"
    ELSE
      ."  FAIL! wrong middle lo result. Expected " 2122232 U. 
      ." , got " OU128D 4 +  CCO@ U.
    THEN

    CR
    OU128D 8 + CCOU32@ 1617181 = IF
     ."   SUCCESS! ok middle hi result"
    ELSE
      ."  FAIL! wrong middle hi result. Expected " 1617181 U. 
      ." , got " OU128D 8 + CCOU32@ U.
    THEN

    CR
    OU128D 0C + CCOU32@ 1213141 = IF
     ."   SUCCESS! ok middle hi result"
    ELSE
      ."  FAIL! wrong middle hi result. Expected " 1213141 U. 
      ." , got " OU128D 0C + CCOU32@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpsrldn8xmm0toxmm1


HEX
CODE TESTVPSRLDXMM2XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  OU128C [O]  XMM2  MOVDQA,
  XMM2  XMM0  XMM1  VPSRLD,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpsrldxmm2xmm0toxmm1 ( -- )
    ." testing  XMM2  XMM0  XMM1  VPSRLD, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // pre destination     
    8080808000800080      OU128B 8 + CCO!  // pre destination  
                   4      OU128C CCO!      // count
                   0      OU128C 8 + CCO!  // count
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSRLDXMM2XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCOU32@ 2526272 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 2526272 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 4 + CCOU32@ 2122232 = IF
     ."   SUCCESS! ok middle lo nresult"
    ELSE
      ."  FAIL! wrong middle lo result. Expected " 2122232 U. 
      ." , got " OU128D 4 +  CCO@ U.
    THEN

    CR
    OU128D 8 + CCOU32@ 1617181 = IF
     ."   SUCCESS! ok middle hi result"
    ELSE
      ."  FAIL! wrong middle hi result. Expected " 1617181 U. 
      ." , got " OU128D 8 + CCOU32@ U.
    THEN

    CR
    OU128D 0C + CCOU32@ 1213141 = IF
     ."   SUCCESS! ok middle hi result"
    ELSE
      ."  FAIL! wrong middle hi result. Expected " 1213141 U. 
      ." , got " OU128D 0C + CCOU32@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpsrldxmm2xmm0toxmm1


HEX
CODE TESTVPSRLWN8XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  4 N  XMM0  XMM1  VPSRLW,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpsrlwn8xmm0toxmm1 ( -- )
    ." testing  4 N  XMM0  XMM1  VPSRLW, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // 2nd source     
    8080808000800080      OU128B 8 + CCO!  // 2nd source  
    FF0000FFFFFF00FF      OU128C CCO!      // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO!  // pre destination
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSRLWN8XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCOU16@ 272 = IF
     ."   SUCCESS! ok lo result"
    ELSE
      ."  FAIL! wrong lo result. Expected " 272 U. 
      ." , got " OU128D CCOU16@ U.
    THEN

    CR
    OU128D 2 + CCOU16@ 252 = IF
     ."   SUCCESS! ok 2nd lo result"
    ELSE
      ."  FAIL! wrong 2nd lo result. Expected " 252 U. 
      ." , got " OU128D 2 +  CCOU16@ U.
    THEN

    CR
    OU128D 4 + CCOU16@ 232 = IF
     ."   SUCCESS! ok 3rd lo result"
    ELSE
      ."  FAIL! wrong 3rd lo result. Expected " 232 U. 
      ." , got " OU128D 8 + CCOU16@ U.
    THEN

    CR
    OU128D 6 + CCOU16@ 212 = IF
     ."   SUCCESS! ok 4th lo result"
    ELSE
      ."  FAIL! wrong 4th lo result. Expected " 212 U. 
      ." , got " OU128D 6 + CCOU16@ U.
    THEN

    CR
    OU128D 8 + CCOU16@ 181 = IF
     ."   SUCCESS! ok 5th lo result"
    ELSE
      ."  FAIL! wrong 5th lo result. Expected " 181 U. 
      ." , got " OU128D 8 + CCOU16@ U.
    THEN

    CR
    OU128D 0A + CCOU16@ 161 = IF
     ."   SUCCESS! ok 6th lo result"
    ELSE
      ."  FAIL! wrong 6th lo result. Expected " 161 U. 
      ." , got " OU128D 0A + CCOU16@ U.
    THEN

    CR
    OU128D 0C + CCOU16@ 141 = IF
     ."   SUCCESS! ok 7th lo result"
    ELSE
      ."  FAIL! wrong 7th lo result. Expected " 141 U. 
      ." , got " OU128D 0C + CCOU16@ U.
    THEN

    CR
    OU128D 0E + CCOU16@ 121 = IF
     ."   SUCCESS! ok 8th lo result"
    ELSE
      ."  FAIL! wrong 8th lo result. Expected " 121 U. 
      ." , got " OU128D 0E + CCOU16@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpsrlwn8xmm0toxmm1


HEX
CODE TESTVPSRLWXMM2XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  OU128C [O]  XMM2  MOVDQA,
  XMM2  XMM0  XMM1  VPSRLW,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpsrlwxmm2xmm0toxmm1 ( -- )
    ." testing  XMM2  XMM0  XMM1  VPSRLW, "

    2122232425262728      OU128A      CCO! // source
    1213141516171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // pre destination    
    8080808000800080      OU128B 8 + CCO!  // pre destination 
                   4      OU128C CCO!      // count
                   0      OU128C 8 + CCO!  // count
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSRLWXMM2XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCOU16@ 272 = IF
     ."   SUCCESS! ok lo result"
    ELSE
      ."  FAIL! wrong lo result. Expected " 272 U. 
      ." , got " OU128D CCOU16@ U.
    THEN

    CR
    OU128D 2 + CCOU16@ 252 = IF
     ."   SUCCESS! ok 2nd lo result"
    ELSE
      ."  FAIL! wrong 2nd lo result. Expected " 252 U. 
      ." , got " OU128D 2 +  CCOU16@ U.
    THEN

    CR
    OU128D 4 + CCOU16@ 232 = IF
     ."   SUCCESS! ok 3rd lo result"
    ELSE
      ."  FAIL! wrong 3rd lo result. Expected " 232 U. 
      ." , got " OU128D 8 + CCOU16@ U.
    THEN

    CR
    OU128D 6 + CCOU16@ 212 = IF
     ."   SUCCESS! ok 4th lo result"
    ELSE
      ."  FAIL! wrong 4th lo result. Expected " 212 U. 
      ." , got " OU128D 6 + CCOU16@ U.
    THEN

    CR
    OU128D 8 + CCOU16@ 181 = IF
     ."   SUCCESS! ok 5th lo result"
    ELSE
      ."  FAIL! wrong 5th lo result. Expected " 181 U. 
      ." , got " OU128D 8 + CCOU16@ U.
    THEN

    CR
    OU128D 0A + CCOU16@ 161 = IF
     ."   SUCCESS! ok 6th lo result"
    ELSE
      ."  FAIL! wrong 6th lo result. Expected " 161 U. 
      ." , got " OU128D 0A + CCOU16@ U.
    THEN

    CR
    OU128D 0C + CCOU16@ 141 = IF
     ."   SUCCESS! ok 7th lo result"
    ELSE
      ."  FAIL! wrong 7th lo result. Expected " 141 U. 
      ." , got " OU128D 0C + CCOU16@ U.
    THEN

    CR
    OU128D 0E + CCOU16@ 121 = IF
     ."   SUCCESS! ok 8th lo result"
    ELSE
      ."  FAIL! wrong 8th lo result. Expected " 121 U. 
      ." , got " OU128D 0E + CCOU16@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpsrlwxmm2xmm0toxmm1


HEX
CODE TESTVPSRADN8XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  4 N  XMM0  XMM1  VPSRAD,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpsradn8xmm0toxmm1 ( -- )
    ." testing  4 N  XMM0  XMM1  VPSRAD, "

    2122232425262728      OU128A      CCO! // source
    1213141586171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // 2nd source     
    8080808000800080      OU128B 8 + CCO!  // 2nd source  
    FF0000FFFFFF00FF      OU128C CCO!      // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO!  // pre destination
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSRADN8XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCOU32@ 2526272 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 2526272 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 4 + CCOU32@ 2122232 = IF
     ."   SUCCESS! ok middle lo nresult"
    ELSE
      ."  FAIL! wrong middle lo result. Expected " 2122232 U. 
      ." , got " OU128D 4 +  CCO@ U.
    THEN

    CR
    OU128D 8 + CCOU32@ F8617181 = IF
     ."   SUCCESS! ok middle hi result"
    ELSE
      ."  FAIL! wrong middle hi result. Expected " F8617181 U. 
      ." , got " OU128D 8 + CCOU32@ U.
    THEN

    CR
    OU128D 0C + CCOU32@ 1213141 = IF
     ."   SUCCESS! ok middle hi result"
    ELSE
      ."  FAIL! wrong middle hi result. Expected " 1213141 U. 
      ." , got " OU128D 0C + CCOU32@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpsradn8xmm0toxmm1


HEX
CODE TESTVPSRADXMM2XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  OU128C [O]  XMM2  MOVDQA,
  XMM2  XMM0  XMM1  VPSRAD,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpsradxmm2xmm0toxmm1 ( -- )
    ." testing  XMM2  XMM0  XMM1  VPSRAD, "

    2122232425262728      OU128A      CCO! // source
    1213141586171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // pre destination     
    8080808000800080      OU128B 8 + CCO!  // pre destination  
                   4      OU128C CCO!      // count
                   0      OU128C 8 + CCO!  // count
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSRADXMM2XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCOU32@ 2526272 = IF
     ."   SUCCESS! ok lo nresult"
    ELSE
      ."  FAIL! wrong lo result. Expected " 2526272 U. 
      ." , got " OU128D CCO@ U.
    THEN

    CR
    OU128D 4 + CCOU32@ 2122232 = IF
     ."   SUCCESS! ok middle lo nresult"
    ELSE
      ."  FAIL! wrong middle lo result. Expected " 2122232 U. 
      ." , got " OU128D 4 +  CCO@ U.
    THEN

    CR
    OU128D 8 + CCOU32@ F8617181 = IF
     ."   SUCCESS! ok middle hi result"
    ELSE
      ."  FAIL! wrong middle hi result. Expected " F8617181 U. 
      ." , got " OU128D 8 + CCOU32@ U.
    THEN

    CR
    OU128D 0C + CCOU32@ 1213141 = IF
     ."   SUCCESS! ok middle hi result"
    ELSE
      ."  FAIL! wrong middle hi result. Expected " 1213141 U. 
      ." , got " OU128D 0C + CCOU32@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpsradxmm2xmm0toxmm1


HEX
CODE TESTVPSRAWN8XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  4 N  XMM0  XMM1  VPSRAW,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpsrawn8xmm0toxmm1 ( -- )
    ." testing  4 N  XMM0  XMM1  VPSRAW, "

    2122232425262728      OU128A      CCO! // source
    1213141586171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // 2nd source     
    8080808000800080      OU128B 8 + CCO!  // 2nd source  
    FF0000FFFFFF00FF      OU128C CCO!      // pre destination
    00FFFFFF00FFFF00      OU128C 8 + CCO!  // pre destination
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSRAWN8XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCOU16@ 272 = IF
     ."   SUCCESS! ok lo result"
    ELSE
      ."  FAIL! wrong lo result. Expected " 272 U. 
      ." , got " OU128D CCOU16@ U.
    THEN

    CR
    OU128D 2 + CCOU16@ 252 = IF
     ."   SUCCESS! ok 2nd lo result"
    ELSE
      ."  FAIL! wrong 2nd lo result. Expected " 252 U. 
      ." , got " OU128D 2 +  CCOU16@ U.
    THEN

    CR
    OU128D 4 + CCOU16@ 232 = IF
     ."   SUCCESS! ok 3rd lo result"
    ELSE
      ."  FAIL! wrong 3rd lo result. Expected " 232 U. 
      ." , got " OU128D 8 + CCOU16@ U.
    THEN

    CR
    OU128D 6 + CCOU16@ 212 = IF
     ."   SUCCESS! ok 4th lo result"
    ELSE
      ."  FAIL! wrong 4th lo result. Expected " 212 U. 
      ." , got " OU128D 6 + CCOU16@ U.
    THEN

    CR
    OU128D 8 + CCOU16@ 181 = IF
     ."   SUCCESS! ok 5th lo result"
    ELSE
      ."  FAIL! wrong 5th lo result. Expected " 181 U. 
      ." , got " OU128D 8 + CCOU16@ U.
    THEN

    CR
    OU128D 0A + CCOU16@ F861 = IF
     ."   SUCCESS! ok 6th lo result"
    ELSE
      ."  FAIL! wrong 6th lo result. Expected " F861 U. 
      ." , got " OU128D 0A + CCOU16@ U.
    THEN

    CR
    OU128D 0C + CCOU16@ 141 = IF
     ."   SUCCESS! ok 7th lo result"
    ELSE
      ."  FAIL! wrong 7th lo result. Expected " 141 U. 
      ." , got " OU128D 0C + CCOU16@ U.
    THEN

    CR
    OU128D 0E + CCOU16@ 121 = IF
     ."   SUCCESS! ok 8th lo result"
    ELSE
      ."  FAIL! wrong 8th lo result. Expected " 121 U. 
      ." , got " OU128D 0E + CCOU16@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpsrawn8xmm0toxmm1


HEX
CODE TESTVPSRAWXMM2XMM0TOXMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  OU128C [O]  XMM2  MOVDQA,
  XMM2  XMM0  XMM1  VPSRAW,
  XMM1  OU128D [O]  MOVDQA,
  RET,
END-CODE

: testvpsrawxmm2xmm0toxmm1 ( -- )
    ." testing  XMM2  XMM0  XMM1  VPSRAW, "

    2122232425262728      OU128A      CCO! // source
    1213141586171819      OU128A 8 +  CCO! // source
    5152535455565758      OU128A 10 + CCO! // after source
    6162636465666768      OU128A 18 + CCO! // after source
    8000008080008000      OU128B CCO!      // pre destination    
    8080808000800080      OU128B 8 + CCO!  // pre destination 
                   4      OU128C CCO!      // count
                   0      OU128C 8 + CCO!  // count
    3132333435363738      OU128D CCO!      // pre result
    4142434445464748      OU128D 8 + CCO!  // pre result
    7172737475767779      OU128D 10 + CCO! // pre result  
    8182838485868788      OU128D 18 + CCO! // pre result  
    
    0 ['] TESTVPSRAWXMM2XMM0TOXMM1 >BODY CALLPROC DROP

    CR
    OU128D CCOU16@ 272 = IF
     ."   SUCCESS! ok lo result"
    ELSE
      ."  FAIL! wrong lo result. Expected " 272 U. 
      ." , got " OU128D CCOU16@ U.
    THEN

    CR
    OU128D 2 + CCOU16@ 252 = IF
     ."   SUCCESS! ok 2nd lo result"
    ELSE
      ."  FAIL! wrong 2nd lo result. Expected " 252 U. 
      ." , got " OU128D 2 +  CCOU16@ U.
    THEN

    CR
    OU128D 4 + CCOU16@ 232 = IF
     ."   SUCCESS! ok 3rd lo result"
    ELSE
      ."  FAIL! wrong 3rd lo result. Expected " 232 U. 
      ." , got " OU128D 8 + CCOU16@ U.
    THEN

    CR
    OU128D 6 + CCOU16@ 212 = IF
     ."   SUCCESS! ok 4th lo result"
    ELSE
      ."  FAIL! wrong 4th lo result. Expected " 212 U. 
      ." , got " OU128D 6 + CCOU16@ U.
    THEN

    CR
    OU128D 8 + CCOU16@ 181 = IF
     ."   SUCCESS! ok 5th lo result"
    ELSE
      ."  FAIL! wrong 5th lo result. Expected " 181 U. 
      ." , got " OU128D 8 + CCOU16@ U.
    THEN

    CR
    OU128D 0A + CCOU16@ F861 = IF
     ."   SUCCESS! ok 6th lo result"
    ELSE
      ."  FAIL! wrong 6th lo result. Expected " F861 U. 
      ." , got " OU128D 0A + CCOU16@ U.
    THEN

    CR
    OU128D 0C + CCOU16@ 141 = IF
     ."   SUCCESS! ok 7th lo result"
    ELSE
      ."  FAIL! wrong 7th lo result. Expected " 141 U. 
      ." , got " OU128D 0C + CCOU16@ U.
    THEN

    CR
    OU128D 0E + CCOU16@ 121 = IF
     ."   SUCCESS! ok 8th lo result"
    ELSE
      ."  FAIL! wrong 8th lo result. Expected " 121 U. 
      ." , got " OU128D 0E + CCOU16@ U.
    THEN

    CR
    OU128D 10 + CCO@ 7172737475767779 = IF
     ."   SUCCESS! ok after hi result"
    ELSE
      ."  FAIL! wrong after hi result. Expected " 7172737475767779 U. 
      ." , got " OU128D 10 + CCO@ U.
    THEN

    

    CR 
;

testvpsrawxmm2xmm0toxmm1



HEX
CODE TESTVADDPDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VADDPD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvaddpdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VADDPD, "
    FPD1.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD2.0 OU128B CCO!  FPD3.0 OU128B 8 + CCO!
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVADDPDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD3.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD5.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD5.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvaddpdm128xmm0->xmm1


HEX
CODE TESTVADDPDM128XMM9->XMM10    
  OU128A [O]  XMM9  MOVDQA,
  OU128B [O]  XMM9  XMM10  VADDPD,   
  XMM10  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvaddpdm128xmm9->xmm10 ( -- )
    ." testing OU128B [O]  XMM9  XMM10  VADDPD, "
    FPD1.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD2.0 OU128B CCO!  FPD3.0 OU128B 8 + CCO!
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVADDPDM128XMM9->XMM10  >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD3.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD5.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD5.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvaddpdm128xmm9->xmm10


HEX
CODE TESTVADDSDM64XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VADDSD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvaddsdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VADDSD, "
    FPD1.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD2.0 OU128B CCO!  FPD3.0 OU128B 8 + CCO!
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVADDSDM64XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD3.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD2.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD2.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvaddsdm128xmm0->xmm1 


HEX
CODE TESTVADDPSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VADDPS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvaddpsm128xmm0->xmm1 ( -- )
    ." testing  OU128B [O]  XMM0  XMM1  VADDPS, "
    FPS1.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!   FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32!  
    FPS1.0 OU128B CCOU32!  FPS1.0 OU128B 4 + CCOU32!   FPS1.0 OU128B 8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVADDPSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS2.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS2.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS3.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS3.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS4.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS4.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS5.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS5.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvaddpsm128xmm0->xmm1


HEX
CODE TESTVADDSSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VADDSS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvaddssm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VADDSS, "
    FPS1.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!   FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32!  
    FPS1.0 OU128B CCOU32!  FPS1.0 OU128B 4 + CCOU32!   FPS1.0 OU128B 8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVADDSSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS2.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS2.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS2.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS2.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS3.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS3.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS4.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS4.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvaddssm128xmm0->xmm1


HEX
CODE TESTVADDSUBPDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VADDSUBPD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvaddsubpdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VADDSUBPD, "
    FPD2.0 OU128A CCO!  FPD3.0 OU128A 8 + CCO!  
    FPD1.0 OU128B CCO!  FPD2.0 OU128B 8 + CCO!
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVADDSUBPDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD1.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD1.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD5.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD5.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvaddsubpdm128xmm0->xmm1


HEX
CODE TESTVADDSUBPSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VADDSUBPS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvaddsubpsm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VADDSUBPS, "
    FPS2.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!   FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32!  
    FPS1.0 OU128B CCOU32!  FPS1.0 OU128B 4 + CCOU32!   FPS1.0 OU128B 8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVADDSUBPSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS1.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS1.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS3.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS3.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS2.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS2.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS5.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS5.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvaddsubpsm128xmm0->xmm1


HEX
CODE TESTVANDPDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VANDPD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvandpdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VANDPD, "
    FPS1.0 OU128A CCO!  FPS2.0 OU128A 8 + CCO!  
    FPS2.0 OU128B CCO!  FPS3.0 OU128B 8 + CCO!
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVANDPDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPS1.0 FPS2.0 AND = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPS1.0 FPS2.0 AND U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPS2.0 FPS3.0 AND = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPS2.0 FPS3.0 AND U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvandpdm128xmm0->xmm1


HEX
CODE TESTVANDNPDXMM1XMM0->XMM2
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  XMM1 XMM0 XMM2  VANDNPD,
  XMM2  OU128C [O]  MOVDQA,
  RET,  
END-CODE


  
: testvandnpdxmm1xmm0->xmm2 ( -- )
    ." testing XMM1 XMM0 XMM2  VANDNPD, "
    // FPD1.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO! 
    FFFFFFFF00000000 OU128A CCO!  FF00FF00FF00FF00 OU128A 8 + CCO! 
    // FPD2.0 OU128B CCO!  FPD3.0 OU128B 8 + CCO!
    FFFF0000FFFF0000 OU128B CCO!  F0F0F0F0F0F0F0F0 OU128B 8 + CCO! 
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVANDNPDXMM1XMM0->XMM2 >BODY CALLPROC
    DROP  
    // OU128C CCO@ FPD1.0 FPD2.0 AND INVERT = IF
    OU128C CCO@ FFFF0000 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " ( FPD1.0 FPD2.0 AND INVERT ) FFFF0000 U.  
      ." , got " OU128C CCO@ U.
    THEN
    // OU128C 8 + CCO@ FPD2.0 FPD3.0 AND INVERT = IF
    OU128C 8 + CCO@ 00F000F000F000F0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " ( FPD2.0 FPD3.0 AND INVERT ) 00F000F000F000F0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvandnpdxmm1xmm0->xmm2



HEX
CODE TESTVANDNPSXMM1XMM0->XMM2
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM1  MOVDQA,
  XMM1 XMM0 XMM2 VANDNPS,
  XMM2  OU128C [O]  MOVDQA,
  RET,  
END-CODE


  
: testvandnpsxmm1xmm0->xmm2 ( -- )
    ." testing XMM1 XMM0 XMM2 VANDNPS, "
    // FPD1.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO! 
    FFFFFFFF00000000 OU128A CCO!  FF00FF00FF00FF00 OU128A 8 + CCO! 
    // FPD2.0 OU128B CCO!  FPD3.0 OU128B 8 + CCO!
    FFFF0000FFFF0000 OU128B CCO!  F0F0F0F0F0F0F0F0 OU128B 8 + CCO! 
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVANDNPSXMM1XMM0->XMM2 >BODY CALLPROC
    DROP  
    // OU128C CCO@ FPD1.0 FPD2.0 AND INVERT = IF
    OU128C CCO@ FFFF0000 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " ( FPD1.0 FPD2.0 AND INVERT ) FFFF0000 U.  
      ." , got " OU128C CCO@ U.
    THEN
    // OU128C 8 + CCO@ FPD2.0 FPD3.0 AND INVERT = IF
    OU128C 8 + CCO@ 00F000F000F000F0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " ( FPD2.0 FPD3.0 AND INVERT ) 00F000F000F000F0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvandnpsxmm1xmm0->xmm2


HEX
CODE TESTVANDPSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VANDPS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvandpsm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VANDPS, "
    FPS1.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!   FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32!  
    FPS1.0 OU128B CCOU32!  FPS1.0 OU128B 4 + CCOU32!   FPS1.0 OU128B 8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVANDPSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS1.0 FPS1.0 AND = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS1.0 FPS1.0 AND U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS2.0 FPS1.0 AND = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS2.0 FPS1.0 AND U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS3.0 FPS1.0 AND = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS3.0 FPS1.0 AND U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS1.0 FPS4.0 AND = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS1.0 FPS4.0 AND U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvandpsm128xmm0->xmm1


HEX
CODE TESTVBLENDPD0NM128XMM9->XMM10
  OU128A [O]  XMM9  MOVDQA,
  0 N  OU128B [O]  XMM9  XMM10  VBLENDPD,   
  XMM10  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvblendpd0nm128xmm9->xmm10 ( -- )
    ." testing 0 N  OU128B [O]  XMM9  XMM10  VBLENDPD, "
    FPD1.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD3.0 OU128B CCO!  FPD4.0 OU128B 8 + CCO!
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVBLENDPD0NM128XMM9->XMM10 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD1.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD1.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD2.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD2.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvblendpd0nm128xmm9->xmm10


HEX
CODE TESTVBLENDPD1NM128XMM0->XMM1 
  OU128A [O]  XMM0  MOVDQA,
  1 N  OU128B [O]  XMM0  XMM1  VBLENDPD,   
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvblendpd1nm128xmm0->xmm1 ( -- )
    ." testing 1 N  OU128B [O]  XMM0  XMM1  VBLENDPD, "
    FPD1.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD3.0 OU128B CCO!  FPD4.0 OU128B 8 + CCO!
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVBLENDPD1NM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD3.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD2.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD2.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvblendpd1nm128xmm0->xmm1


HEX
CODE TESTVBLENDPS1NM128XMM0->XMM1 
  OU128A [O]  XMM0  MOVDQA,
  1 N  OU128B [O]  XMM0  XMM1  VBLENDPS,   
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvblendps1nm128xmm0->xmm1 ( -- )
    ." testing 1 N  OU128B [O]  XMM0  XMM1  VBLENDPS, "
    FPS1.0 OU128A     CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS5.0 OU128A 8 + CCOU32!  FPS8.0 OU128A 0C + CCOU32!  
    FPS3.0 OU128B     CCOU32!  FPS4.0 OU128B  4 + CCOU32!
    FPS6.0 OU128B 8 + CCOU32!  FPS9.0 OU128B 0C + CCOU32!
         0 OU128C CCO!              0 OU128C 8 + CCO!
    0 ['] TESTVBLENDPS1NM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128C CCOU32@ FPS3.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS3.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    CR
    OU128C 4 + CCOU32@ FPS2.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS2.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    CR
    OU128C 8 + CCOU32@ FPS5.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS5.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    CR
    OU128C 0C + CCOU32@ FPS8.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS8.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
;

testvblendps1nm128xmm0->xmm1


HEX
CODE TESTVAESENCM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VAESENC,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvaesencm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VAESENC, "
         0 OU128A CCO!          0 OU128A 8 + CCO!
         0 OU128B CCO!          0 OU128B 8 + CCO!     
         0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVAESENCM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 6363636363636363 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  6363636363636363 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 6363636363636363 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 6363636363636363 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvaesencm128xmm0->xmm1


HEX
CODE TESTVAESDECM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VAESDEC,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvaesdecm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  VAESDEC, "
6363636363636363 OU128A CCO!  6363636363636363 OU128A 8 + CCO!
               0 OU128B CCO!                 0 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVAESDECM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvaesdecm128xmm0->xmm1


HEX
CODE TESTVAESENCLASTM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VAESENCLAST,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvaesenclastm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VAESENCLAST, "
         0 OU128A CCO!          0 OU128A 8 + CCO!
         0 OU128B CCO!          0 OU128B 8 + CCO!     
         0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVAESENCLASTM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 6363636363636363 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  6363636363636363 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 6363636363636363 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 6363636363636363 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvaesenclastm128xmm0->xmm1


HEX
CODE TESTVAESDECLASTM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VAESDECLAST,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvaesdeclastm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VAESDECLAST, "
6363636363636363 OU128A CCO!  6363636363636363 OU128A 8 + CCO!
               0 OU128B CCO!                 0 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVAESDECLASTM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvaesdeclastm128xmm0->xmm1


HEX
CODE TESTVCMPPD0NM128XMM0->XMM1 
  OU128A [O]  XMM0  MOVDQA,
  0 N  OU128B [O]  XMM0  XMM1  VCMPPD,   
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcmppd0nm128xmm0->xmm1 ( -- )
    ." testing 0 N  OU128B [O]  XMM0  XMM1  VCMPPD, "
    FPD1.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD1.0 OU128B CCO!  FPD4.0 OU128B 8 + CCO!
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVCMPPD0NM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FFFFFFFFFFFFFFFF = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FFFFFFFFFFFFFFFF U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ 0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " 0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvcmppd0nm128xmm0->xmm1


HEX
CODE TESTVCMPPS0NM128XMM0->XMM1 
  OU128A [O]  XMM0  MOVDQA,
  0 N  OU128B [O]  XMM0  XMM1  VCMPPS,   
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcmpps0nm128xmm0->xmm1 ( -- )
    ." testing 0 N  OU128B [O]  XMM0  VCMPPS, "
    FPS1.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!  FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32! 
    FPS1.0 OU128B CCOU32!  FPS4.0 OU128B 4 + CCOU32!  FPS3.0 OU128B 8 + CCOU32!  FPS6.0 OU128B 0C + CCOU32! 
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVCMPPS0NM128XMM0->XMM1  >BODY CALLPROC
    DROP  
     OU128C CCOU32@ FFFFFFFF = IF
     ." 1st quarter SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st quarter " FFFFFFFF U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ 0 = IF
     ." 2nd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd quarter " 0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    OU128C 8 + CCOU32@ FFFFFFFF = IF
     ." 3rd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd quarter " FFFFFFFF U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    OU128C 0C + CCOU32@ 0 = IF
     ." 4th quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th quarter " 0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
;

testvcmpps0nm128xmm0->xmm1


HEX
CODE TESTVCMPSD0NM128XMM0->XMM1 
  OU128A [O]  XMM0  MOVDQA,
  0 N  OU128B [O]  XMM0  XMM1  VCMPSD,   
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcmpsd0nm128xmm0->xmm1 ( -- )
    ." testing 0 N  OU128B [O]  XMM0  XMM1  VCMPSD, "
    FPD1.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD1.0 OU128B CCO!  FPD3.0 OU128B 8 + CCO!
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVCMPSD0NM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FFFFFFFFFFFFFFFF = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FFFFFFFFFFFFFFFF U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD2.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD2.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvcmpsd0nm128xmm0->xmm1


HEX
CODE TESTVCMPSS0NM128XMM0->XMM1 
  OU128A [O]  XMM0  MOVDQA,
  0 N  OU128B [O]  XMM0  XMM1  VCMPSS,   
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcmpss0nm128xmm0->xmm1 ( -- )
    ." testing 0 N  OU128B [O]  XMM0  XMM1  VCMPSS, "
    FPS1.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!  FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32! 
    FPS1.0 OU128B CCOU32!  FPS4.0 OU128B 4 + CCOU32!  FPS3.0 OU128B 8 + CCOU32!  FPS6.0 OU128B 0C + CCOU32! 
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVCMPSS0NM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCOU32@ FFFFFFFF = IF
     ." 1st quarter SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st quarter " FFFFFFFF U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ FPS2.0 = IF
     ." 2nd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd quarter " FPS2.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    OU128C 8 + CCOU32@ FPS3.0 = IF
     ." 3rd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd quarter " FPS3.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    OU128C 0C + CCOU32@ FPS4.0 = IF
     ." 4th quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th quarter " FPS4.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
;

testvcmpss0nm128xmm0->xmm1



HEX
CODE TESTVCOMISDM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VCOMISD,
  EFLAGS->AH,
  RAX   OU128D [O]  MOV,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcomisdm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VCOMISD, with 3.0 3.0 "
    FPD3.0 OU128A CCO!  FPD1.0 OU128A 8 + CCO!  
    FPD3.0 OU128B CCO!  FPD2.0 OU128B 8 + CCO!
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVCOMISDM128->XMM0 >BODY CALLPROC
    DROP  
    OU128C CCO@  FPD3.0  = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD1.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD1.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    OU128D CCO@  4100 AND  4000 = IF  // bit 8 = carry flag, bit 14 = zero flag
      ."  got correct flags SUCCESS! "
    ELSE
      ." FAIL! Expected for flags " 4000 U.
      ." , got " OU128D CCO@  4000 AND U.
    THEN   
    CR
    
    ." testing OM128 [O]  XMM0  VCOMISD, with 3.0 4.0 "
    FPD3.0 OU128A CCO!  FPD1.0 OU128A 8 + CCO!  
    FPD2.0 OU128B CCO!  FPD2.0 OU128B 8 + CCO!
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVCOMISDM128->XMM0 >BODY CALLPROC
    DROP  
    OU128C CCO@  FPD3.0  = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD1.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD1.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    OU128D CCO@  0100 AND  00 = IF  // bit 8 = carry flag, bit 14 = zero flag
      ."  got correct flags SUCCESS! "
    ELSE
      ." FAIL! Expected for flags " 0000 U.
      ." , got " OU128D CCO@  0000 AND U.
    THEN   
    CR
;

testvcomisdm128->xmm0


HEX
CODE TESTVCOMISSM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VCOMISS,
  EFLAGS->AH,
  RAX   OU128D [O]  MOV,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcomissm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VCOMISS, with 3.0 3.0 "
    FPS3.0 OU128A CCOU32!  FPS1.0 OU128A 4 + CCOU32!  
    FPS3.0 OU128B CCOU32!  FPS2.0 OU128B 4 + CCOU32!
         0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVCOMISSM128->XMM0 >BODY CALLPROC
    DROP  
    OU128C CCOU32@  FPS3.0  = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPS2.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ FPS1.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPS1.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    OU128D CCO@  4100 AND  4000 = IF  // bit 8 = carry flag, bit 14 = zero flag
      ."  got correct flags SUCCESS! "
    ELSE
      ." FAIL! Expected for flags " 4000 U.
      ." , got " OU128D CCO@  4000 AND U.
    THEN   
    CR
    
    ." testing OM128 [O]  XMM0  VCOMISS, with 3.0 4.0 "
    FPS3.0 OU128A CCOU32!  FPS1.0 OU128A 4 + CCOU32!  
    FPS2.0 OU128B CCOU32!  FPS2.0 OU128B 4 + CCOU32!
         0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVCOMISSM128->XMM0 >BODY CALLPROC
    DROP  
    OU128C CCOU32@  FPS3.0  = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPS3.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ FPS1.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPS1.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    OU128D CCO@  0100 AND  00 = IF  // bit 8 = carry flag, bit 14 = zero flag
      ."  got correct flags SUCCESS! "
    ELSE
      ." FAIL! Expected for flags " 0000 U.
      ." , got " OU128D CCO@  0000 AND U.
    THEN   
    CR
;

testvcomissm128->xmm0


HEX
CODE TESTVCVTDQ2PDM128->XMM0
  OU128B [O]  XMM0  VCVTDQ2PD,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcvtdq2pdm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VCVTDQ2PD, "  
    2 OU128B CCOU32!  3 OU128B 4 + CCOU32!
    0 OU128C CCO!  0 OU128C 8 + CCO!
    0 ['] TESTVCVTDQ2PDM128->XMM0 >BODY CALLPROC
    DROP  
    OU128C CCO@ FPD2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD2.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD3.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD3.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvcvtdq2pdm128->xmm0


HEX
CODE TESTVCVTDQ2PSM128->XMM0
  OU128B [O]  XMM0  VCVTDQ2PS,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcvtdq2psm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VCVTDQ2PS, "  
    2 OU128B CCOU32!  3 OU128B 4 + CCOU32!  5 OU128B 8 + CCOU32!  8 OU128B 0C + CCOU32!
    0 OU128C CCO!  0 OU128C 8 + CCO!
    0 ['] TESTVCVTDQ2PSM128->XMM0 >BODY CALLPROC
    DROP  
    OU128C CCOU32@ FPS2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPS2.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 4 + CCOU32@ FPS3.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPS3.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    OU128C 8 + CCOU32@ FPS5.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPS5.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    OU128C 0C + CCOU32@ FPS8.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPS8.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
;

testvcvtdq2psm128->xmm0


HEX
CODE TESTVCVTPD2DQM128->XMM0
  OU128B [O]  XMM0  VCVTPD2DQ,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcvtpd2dqm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VCVTPD2DQ, "  
    FPD4.0 OU128B CCO!  FPD3.0 OU128B 8 + CCO!
    0 OU128C CCO!  0 OU128C 8 + CCO!
    0 ['] TESTVCVTPD2DQM128->XMM0 >BODY CALLPROC
    DROP  
    OU128C CCOU32@ 4 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " 4 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ 3 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " 3 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    CR
;

testvcvtpd2dqm128->xmm0


HEX
CODE TESTVCVTPD2PSM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VCVTPD2PS,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcvtpd2psm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VCVTPD2PS, "  
    FPD2.0 OU128B CCO!  FPD3.0 OU128B 8 + CCO!
    0 OU128C CCO!  0 OU128C 8 + CCO!
    0 ['] TESTVCVTPD2PSM128->XMM0 >BODY CALLPROC
    DROP  
    OU128C CCOU32@ FPS2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPS2.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ FPS3.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPS3.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    CR
;

testvcvtpd2psm128->xmm0


HEX
CODE TESTVCVTPS2DQM128->XMM0
  OU128B [O]  XMM0  VCVTPS2DQ,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcvtps2dqm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VCVTPS2DQ, "  
    FPS2.0 OU128B     CCOU32!  FPS3.0 OU128B 04 + CCOU32!  
    FPS6.0 OU128B 8 + CCOU32!  FPS8.0 OU128B 0C + CCOU32!
    0 OU128C CCO!  0 OU128C 8 + CCO!
    0 ['] TESTVCVTPS2DQM128->XMM0 >BODY CALLPROC
    DROP  
    OU128C CCOU32@ 2 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " 2 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ 3 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " 3 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    OU128C 8 + CCOU32@ 6 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " 6 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    OU128C 0C + CCOU32@ 8 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " 8 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
;

testvcvtps2dqm128->xmm0


HEX
CODE TESTVCVTPS2PDM128->XMM0
  OU128B [O]  XMM0  VCVTPS2PD,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcvtps2pdm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VCVTPS2PD, "  
    FPS2.0 OU128B     CCOU32!  FPS3.0 OU128B 04 + CCOU32!  
    FPS6.0 OU128B 8 + CCOU32!  FPS8.0 OU128B 0C + CCOU32!
    0 OU128C CCO!  0 OU128C 8 + CCO!
    0 ['] TESTVCVTPS2PDM128->XMM0 >BODY CALLPROC
    DROP  
    OU128C CCO@ FPD2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD2.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD3.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD3.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvcvtps2pdm128->xmm0


HEX
CODE TESTVCVTSD2SIXMM0->EAX
  OU128B [O]  XMM0  MOVDQA,
  RAX RAX XOR, RAX DEC,
  XMM0  EAX  VCVTSD2SI,
  RAX  OU128C [O]  MOV,
  RET,  
END-CODE
  
: testvcvtsd2sixmm0->eax ( -- )
    ." testing  XMM0  EAX  VCVTSD2SI, "  
    FPD3.0 OU128B CCO!  FPD6.0 OU128B 8 + CCO!
        -1 OU128C CCO!     -1 OU128C 8 + CCO!
    0 ['] TESTVCVTSD2SIXMM0->EAX >BODY CALLPROC
    DROP  
    OU128C CCOU32@ 3 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " 3 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ 0 = IF // seems like top half is always set to 0
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " 0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    FPD-2.0 OU128B CCO!  FPD6.0 OU128B 8 + CCO!
          0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVCVTSD2SIXMM0->EAX >BODY CALLPROC
    DROP  
    OU128C CCOU32@ FFFFFFFE = IF
     ." 2nd test lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for 2nd test lo half " FFFFFFFE U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ 0 = IF
     ." 2nd test hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd test hi half " 0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN 

    CR
;

testvcvtsd2sixmm0->eax


HEX
CODE TESTVCVTSS2SIXMM0->EAX
  OU128B [O]  XMM0  MOVDQA,
  RAX RAX XOR,  RAX DEC,
  XMM0  EAX  VCVTSS2SI,
  RAX  OU128C [O]  MOV,
  RET,  
END-CODE
  
: testvcvtss2sixmm0->eax ( -- )
    ." testing  XMM0  EAX  VCVTSS2SI, "  
    FPS3.0 OU128B CCOU32!  FPS6.0 OU128B 4 + CCOU32!
        -1 OU128C CCO!     -1 OU128C 8 + CCO!
    0 ['] TESTVCVTSS2SIXMM0->EAX >BODY CALLPROC
    DROP  
    OU128C CCOU32@ 3 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " 3 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ 0 = IF  // seems like top half is always set to 0
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " 0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    FPS-2.0 OU128B CCOU32!  FPS6.0 OU128B 4 + CCOU32!
          0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVCVTSS2SIXMM0->EAX >BODY CALLPROC
    DROP  
    OU128C CCOU32@ FFFFFFFE = IF
     ." 2nd test lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for 2nd test lo half " FFFFFFFE U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ 0 = IF
     ." 2nd test hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd test hi half " 0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    CR
;

testvcvtss2sixmm0->eax


HEX
CODE TESTVCVTSS2SIXMM0->RAX
  OU128B [O]  XMM0  MOVDQA,
  RAX RAX XOR,   RAX DEC,
  XMM0  RAX  VCVTSS2SI,
  RAX  OU128C [O]  MOV,
  RET,  
END-CODE
  
: testvcvtss2sixmm0->rax ( -- )
    ." testing  XMM0  RAX  VCVTSS2SI, "  
    FPS3.0 OU128B CCOU32!  FPS6.0 OU128B 4 + CCOU32!
        -1 OU128C CCO!     -1 OU128C 8 + CCO!
    0 ['] TESTVCVTSS2SIXMM0->RAX >BODY CALLPROC
    DROP  
    OU128C CCO@ 3 = IF
     ." SUCCESS! "
    ELSE
      ." FAIL! Expected " 3 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
;

testvcvtss2sixmm0->rax


HEX
CODE TESTVCVTSI2SDEAXXMM0->XMM1
  OU128C [O]  XMM0  MOVDQA,  // to clear xmm0... the hard way :-)
  OU128B [O]  RAX  MOV, // assumes little endian
  EAX  XMM0  XMM1  VCVTSI2SD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcvtsi2sdeaxxmm0->xmm1 ( -- )
    ." testing  EAX  XMM0  VCVTSI2SD, "  
    -2 OU128B CCOU32!  0 OU128B 4 + CCOU32!
     0 OU128C CCO!     0 OU128C 8 + CCO!
    0 ['] TESTVCVTSI2SDEAXXMM0->XMM1 >BODY CALLPROC
    DROP  
    OU128C CCO@ FPD-2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." lo half FAIL! Expected " FPD-2.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ 0 = IF
     ."  hi half SUCCESS! "
    ELSE
      ."  hi half FAIL! Expected " 0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvcvtsi2sdeaxxmm0->xmm1



HEX
CODE TESTVCVTSI2SDRAXXMM0->XMM1
  OU128C [O]  XMM0  MOVDQA,  // to clear xmm0... the hard way :-)
  OU128B [O]  RAX  MOV, 
  RAX  XMM0  XMM1  VCVTSI2SD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcvtsi2sdraxxmm0->xmm1 ( -- )
    ." testing  RAX  XMM0  VCVTSI2SD, "  
    -2 OU128B CCO!  0 OU128B 8 + CCO!
     0 OU128C CCO!  0 OU128C 8 + CCO!
    0 ['] TESTVCVTSI2SDRAXXMM0->XMM1 >BODY CALLPROC
    DROP  
    OU128C CCO@ FPD-2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." lo half FAIL! Expected " FPD-2.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ 0 = IF
     ."  hi half SUCCESS! "
    ELSE
      ."  hi half FAIL! Expected " 0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvcvtsi2sdraxxmm0->xmm1


HEX
CODE TESTVCVTSI2SSRAXXMM0->XMM1
  OU128C [O]  XMM0  MOVDQA,  // to clear xmm0... the hard way :-)
  OU128B [O]  RAX  MOV, 
  RAX  XMM0  XMM1  VCVTSI2SS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcvtsi2ssraxxmm0->xmm1 ( -- )
    ." testing  RAX  XMM0  VCVTSI2SS, "  
    -2 OU128B CCO!  0 OU128B 8 + CCO!
     0 OU128C CCO!  0 OU128C 8 + CCO!
    0 ['] TESTVCVTSI2SSRAXXMM0->XMM1 >BODY CALLPROC
    DROP  
    OU128C CCOU32@ FPS-2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." lo half FAIL! Expected " FPS-2.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ 0 = IF
     ."  hi half SUCCESS! "
    ELSE
      ."  hi half FAIL! Expected " 0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    CR
;

testvcvtsi2ssraxxmm0->xmm1


HEX
CODE TESTVCVTSD2SSM128XMM0->XMM1
  OU128B [O]  XMM0  XMM1  VCVTSD2SS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcvtsd2ssm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VCVTSD2SS, "  
    FPD2.0 OU128B CCO!  FPD3.0 OU128B 8 + CCO!  
    0 OU128C CCO!  0 OU128C 8 + CCO!
    0 ['] TESTVCVTSD2SSM128XMM0->XMM1 >BODY CALLPROC
    DROP  
    OU128C CCOU32@ FPS2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPS2.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ 0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " 0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    CR
;

testvcvtsd2ssm128xmm0->xmm1


HEX
CODE TESTVCVTSS2SDM128XMM0->XMM1
  OU128B [O]  XMM0  XMM1  VCVTSS2SD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcvtss2sdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VCVTSS2SD, "  
    FPS2.0 OU128B CCOU32!  FPS3.0 OU128B 4 + CCOU32!  
    0 OU128C CCO!  0 OU128C 8 + CCO!
    0 ['] TESTVCVTSS2SDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
    OU128C CCO@ FPD2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD2.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ 0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " 0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvcvtss2sdm128xmm0->xmm1


HEX
CODE TESTVCVTTPD2DQM128->XMM0
  OU128B [O]  XMM0  VCVTTPD2DQ,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcvttpd2dqm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VCVTTPD2DQ, "  
    FPD1.5 OU128B CCO!  FPD3.0 OU128B 8 + CCO!
    0 OU128C CCO!  0 OU128C 8 + CCO!
    0 ['] TESTVCVTTPD2DQM128->XMM0 >BODY CALLPROC
    DROP  
    OU128C CCOU32@ 1 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " 1 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ 3 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " 3 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    CR
;

testvcvttpd2dqm128->xmm0



HEX
CODE TESTVCVTTPS2DQM128->XMM0
  OU128B [O]  XMM0  VCVTTPS2DQ,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcvttps2dqm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VCVTTPS2DQ, "  
    FPS1.5 OU128B     CCOU32!  FPS3.0 OU128B 04 + CCOU32!  
    FPS6.0 OU128B 8 + CCOU32!  FPS8.0 OU128B 0C + CCOU32!
    0 OU128C CCO!  0 OU128C 8 + CCO!
    0 ['] TESTVCVTTPS2DQM128->XMM0 >BODY CALLPROC
    DROP  
    OU128C CCOU32@ 1 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " 1 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ 3 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " 3 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    OU128C 8 + CCOU32@ 6 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " 6 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    OU128C 0C + CCOU32@ 8 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " 8 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
;

testvcvttps2dqm128->xmm0



HEX
CODE TESTVCVTTSD2SIXMM0->RAX
  OU128B [O]  XMM0  MOVDQA,
  RAX RAX XOR,  RAX DEC,
  XMM0  RAX  VCVTTSD2SI,
  RAX  OU128C [O]  MOV,
  RET,  
END-CODE
  
: testvcvttsd2sixmm0->rax ( -- )
    ." testing  XMM0  RAX  VCVTTSD2SI, "  
    FPD1.5 OU128B CCO!  FPD6.0 OU128B 8 + CCO!
        -1 OU128C CCO!      -1 OU128C 8 + CCO!
    0 ['] TESTVCVTTSD2SIXMM0->RAX >BODY CALLPROC
    DROP  
    OU128C CCO@ 1 = IF
     ." SUCCESS! "
    ELSE
      ." FAIL! Expected " 1 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
;

testvcvttsd2sixmm0->rax


HEX
CODE TESTVCVTTSS2SIXMM0->RAX
  OU128B [O]  XMM0  MOVDQA,
  RAX RAX XOR,   RAX DEC,
  XMM0  RAX  VCVTTSS2SI,
  RAX  OU128C [O]  MOV,
  RET,  
END-CODE
  
: testvcvttss2sixmm0->rax ( -- )
    ." testing  XMM0  RAX  VCVTTSS2SI, "  
    FPS1.5 OU128B CCOU32!  FPS6.0 OU128B 4 + CCOU32!
        -1 OU128C CCO!     -1 OU128C 8 + CCO!
    0 ['] TESTVCVTTSS2SIXMM0->RAX >BODY CALLPROC
    DROP  
    OU128C CCO@ 1 = IF
     ." SUCCESS! "
    ELSE
      ." FAIL! Expected " 1 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
;

testvcvttss2sixmm0->rax


HEX
CODE TESTVDIVPDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VDIVPD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvdivpdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VDIVPD, "
    FPD4.0 OU128A CCO!  FPD8.0 OU128A 8 + CCO!  
    FPD2.0 OU128B CCO!  FPD2.0 OU128B 8 + CCO!
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVDIVPDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD2.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD4.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD4.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvdivpdm128xmm0->xmm1


HEX
CODE TESTVDIVPDM128YMM0->YMM1
  OU128A [O]  YMM0  VMOVDQA,
  OU128B [O]  YMM0  YMM1  VDIVPD,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvdivpdm128ymm0->ymm1 ( -- )
    ." testing OM128 [O]  YMM0  YMM1  VDIVPD, "
    FPD4.0 OU128A CCO!       FPD8.0 OU128A 8 + CCO! 
    FPD2.0 OU128A 10 + CCO!  FPD6.0 OU128A 18 + CCO!
    FPD2.0 OU128B CCO!       FPD2.0 OU128B 8 + CCO!
    FPD2.0 OU128B 10 + CCO!  FPD2.0 OU128B 18 + CCO!
            0 OU128C CCO!          0 OU128C 8 + CCO!
            0 OU128C 10 + CCO!     0 OU128C 18 + CCO!
    0 ['] TESTVDIVPDM128YMM0->YMM1 >BODY CALLPROC DROP 
 
    CR
    OU128C CCO@ FPD2.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD2.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128C 8 + CCO@ FPD4.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD4.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
    OU128C 10 + CCO@ FPD1.0 = IF
     ."  upper lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for upper lo half " FPD1.0 U.  
      ." , got " OU128C 10 + CCO@ U.
    THEN
    CR
    OU128C 18 + CCO@ FPD3.0 = IF
     ."  upper hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for upper hi half " FPD3.0 U.  
      ." , got " OU128C 18 + CCO@ U.
    THEN
    CR
;

testvdivpdm128ymm0->ymm1


HEX
CODE TESTVDIVPSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VDIVPS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvdivpsm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VDIVPS, "
    FPS8.0 OU128A CCOU32!  FPS8.0 OU128A 4 + CCOU32!   FPS4.0 OU128A 8 + CCOU32!  FPS6.0 OU128A 0C + CCOU32!  
    FPS2.0 OU128B CCOU32!  FPS4.0 OU128B 4 + CCOU32!   FPS4.0 OU128B 8 + CCOU32!  FPS3.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVDIVPSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS4.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS4.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS2.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS2.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS1.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS1.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS2.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS2.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvdivpsm128xmm0->xmm1


HEX
CODE TESTVDIVSDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VDIVSD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvdivsdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1 VDIVSD, "
    FPD4.0 OU128A CCO!  FPD8.0 OU128A 8 + CCO!  
    FPD2.0 OU128B CCO!  FPD2.0 OU128B 8 + CCO!
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVDIVSDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD2.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD8.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD8.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvdivsdm128xmm0->xmm1


HEX
CODE TESTVDIVSSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VDIVSS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvdivssm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VDIVSS, "
    FPS8.0 OU128A CCOU32!  FPS8.0 OU128A 4 + CCOU32!   FPS4.0 OU128A 8 + CCOU32!  FPS6.0 OU128A 0C + CCOU32!  
    FPS2.0 OU128B CCOU32!  FPS4.0 OU128B 4 + CCOU32!   FPS4.0 OU128B 8 + CCOU32!  FPS3.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVDIVSSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS4.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS4.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS8.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS8.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS4.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS4.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS6.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS6.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvdivssm128xmm0->xmm1


HEX
CODE TESTVDPPD0NM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQU,
  0 N  OU128B [O]  XMM0  XMM1  VDPPD,
  XMM1  OU128C [O]  MOVDQU,
  RET,  
END-CODE
  
: testvdppd0nm128xmm0->xmm1 ( -- )
    ." testing 0 N  OM64 [O]  XMM0  XMM1  VDPPD, "
FPD2.0 OU128A CCO!  FPD3.0 OU128A 8 + CCO!
FPD4.0 OU128B CCO!  FPD1.0 OU128B 8 + CCO!      
    -1 OU128C CCO!      -1 OU128C 8 + CCO!
    0 ['] TESTVDPPD0NM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0 = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " 0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvdppd0nm128xmm0->xmm1


HEX
CODE TESTVDPPD11NM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQU,
  11 N  OU128B [O]  XMM0  XMM1  VDPPD,
  XMM1  OU128C [O]  MOVDQU,
  RET,  
END-CODE
  
: testvdppd11nm128xmm0->xmm1 ( -- )
    ." testing 11 N  OM64 [O]  XMM0  XMM1  VDPPD, "
FPD2.0 OU128A CCO!  FPD3.0 OU128A 8 + CCO!
FPD4.0 OU128B CCO!  FPD1.0 OU128B 8 + CCO!      
    -1 OU128C CCO!      -1 OU128C 8 + CCO!
    0 ['] TESTVDPPD11NM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FPD8.0 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  FPD8.0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0 = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " 0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvdppd11nm128xmm0->xmm1


HEX
CODE TESTVDPPD33NM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQU,
  33 N  OU128B [O]  XMM0  XMM1  VDPPD,
  XMM1  OU128C [O]  MOVDQU,
  RET,  
END-CODE
  
: testvdppd33nm128xmm0->xmm1 ( -- )
    ." testing 33 N  OM128 [O]  XMM0  XMM1  VDPPD, "
FPD2.0 OU128A CCO!  FPD1.0 OU128A 8 + CCO!
FPD3.0 OU128B CCO!  FPD2.0 OU128B 8 + CCO!      
    -1 OU128C CCO!      -1 OU128C 8 + CCO!
    0 ['] TESTVDPPD33NM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FPD8.0 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  FPD8.0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FPD8.0 = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " FPD8.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvdppd33nm128xmm0->xmm1


HEX
CODE TESTVDPPS0NM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQU,
  0 N  OU128B [O]  XMM0  XMM1  VDPPS,
  XMM1  OU128C [O]  MOVDQU,
  RET,  
END-CODE
  
: testvdpps0nm128xmm0->xmm1 ( -- )
    ." testing 0 N  OM128 [O]  XMM0  XMM1  VDPPS, "
FPD2.0 OU128A CCO!  FPD3.0 OU128A 8 + CCO!
FPD4.0 OU128B CCO!  FPD1.0 OU128B 8 + CCO!      
    -1 OU128C CCO!      -1 OU128C 8 + CCO!
    0 ['] TESTVDPPS0NM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0 = IF
      ." 1st u32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u32 "  0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 4 + CCO@ 0 = IF
      ." 2nd u32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u32 " 0 U.  
      ." , got " OU128C 4 + CCO@ U.
    THEN

    CR
;

testvdpps0nm128xmm0->xmm1


HEX
CODE TESTVDPPS11NM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQU,
  11 N  OU128B [O]  XMM0  XMM1  VDPPS,
  XMM1  OU128C [O]  MOVDQU,
  RET,  
END-CODE
  
: testvdpps11nm128xmm0->xmm1 ( -- )
    ." testing 11 N  OM128 [O]  XMM0  XMM1  VDPPS, "
FPS2.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!
FPS4.0 OU128B CCOU32!  FPS1.0 OU128B 4 + CCOU32!      
    -1 OU128C CCO!         -1 OU128C 8 + CCO!
    0 ['] TESTVDPPS11NM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS8.0 = IF
      ." 1st u32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u32 "  FPD8.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ 0 = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u32 " 0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    CR
;

testvdpps11nm128xmm0->xmm1


HEX
CODE TESTVDPPS33NM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQU,
  33 N  OU128B [O]  XMM0  XMM1  VDPPS,
  XMM1  OU128C [O]  MOVDQU,
  RET,  
END-CODE
  
: testvdpps33nm128xmm0->xmm1 ( -- )
    ." testing 33 N  OM64 [O]  XMM0  XMM1  VDPPS, "
FPS2.0 OU128A CCOU32!  FPS1.0 OU128A 4 + CCOU32!
FPS3.0 OU128B CCOU32!  FPS2.0 OU128B 4 + CCOU32!      
    -1 OU128C CCO!      -1 OU128C 8 + CCO!
    0 ['] TESTVDPPS33NM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS8.0 = IF
      ." 1st u32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u32 "  FPS8.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS8.0 = IF
      ." 2nd u32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u32 " FPS8.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    CR
;

testvdpps33nm128xmm0->xmm1


HEX
CODE TESTVHADDPDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VHADDPD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvhaddpdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VHADDPD, "
    FPD1.0 OU128A CCO!  FPD3.0 OU128A 8 + CCO!  
    FPD2.0 OU128B CCO!  FPD4.0 OU128B 8 + CCO!
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVHADDPDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD4.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD4.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@  FPD6.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD6.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvhaddpdm128xmm0->xmm1


HEX
CODE TESTVHADDPSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VHADDPS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvhaddpsm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VHADDPS, "
    FPS2.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!   FPS3.0 OU128A 8 + CCOU32!  FPS5.0 OU128A 0C + CCOU32!  
    FPS1.0 OU128B CCOU32!  FPS1.0 OU128B 4 + CCOU32!   FPS1.0 OU128B 8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVHADDPSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS4.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS4.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS8.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS8.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS2.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS2.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS3.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS3.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvhaddpsm128xmm0->xmm1


HEX
CODE TESTVHSUBPDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VHSUBPD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testhvhsubpdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VHSUBPD, "
    FPD3.0 OU128A CCO!  FPD1.0 OU128A 8 + CCO!  
    FPD5.0 OU128B CCO!  FPD2.0 OU128B 8 + CCO!
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVHSUBPDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD2.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD3.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD3.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testhvhsubpdm128xmm0->xmm1


HEX
CODE TESTVHSUBPSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VHSUBPS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvhsubpsm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VHSUBPS, "
    FPS3.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!   FPS5.0 OU128A 8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32!  
    FPS4.0 OU128B CCOU32!  FPS1.0 OU128B 4 + CCOU32!   FPS5.0 OU128B 8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVHSUBPSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS1.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS1.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS2.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS2.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS3.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS3.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS4.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS4.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvhsubpsm128xmm0->xmm1


HEX
CODE TESTVINSERTPSC4NXMM1XMM0->XMM2
  OU128B [O]  XMM0  MOVDQA,
  OU128A [O]  XMM1  MOVDQA,
  C4 N  XMM1  XMM0  XMM2  VINSERTPS,  // moves src 4th to dest 1st and clears dest 3rd
  XMM2  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvinsertpsc4nxmm1xmm0->xmm2 ( -- )
    ." testing C4 N  XMM1  XMM0  VINSERTPS, "
    FPS1.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!   FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32!  
    FPS5.0 OU128B CCOU32!  FPS6.0 OU128B 4 + CCOU32!   FPS8.0 OU128B 8 + CCOU32!  FPS9.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVINSERTPSC4NXMM1XMM0->XMM2 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS4.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS4.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS6.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS6.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ 0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " 0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS9.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS9.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvinsertpsc4nxmm1xmm0->xmm2

HEX
CODE TESTVMASKMOVDQUXMM1XMM0->[RDI]
  VARY N  RDI  MOV,
  OU128B [O]  XMM1  MOVDQA,
  OU128A [O]  XMM0  MOVDQA,
  XMM1  XMM0  VMASKMOVDQU,   //  mask source MASKMOVDQU,
  RET,  
END-CODE
  
: testvmaskmovdquxmm1xmm0->[rdi] ( -- )
    ." testing  XMM1  XMM0  VMASKMOVDQU, "
    0102030405060708 OU128A CCO!  1112131415161718 OU128A 8 + CCO!
    8000800000800080 OU128B CCO!  8000808000000080 OU128B 8 + CCO!     
    0 VARY !                      0 VARY 8 + !
    0 ['] TESTVMASKMOVDQUXMM1XMM0->[RDI] >BODY CALLPROC
    DROP  

    VARY @ 0100030000060008 = IF
      ." 1st U64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st U64 "  0100030000060008 U.  
      ." , got " VARY @ U.
    THEN

    VARY 8 + @ 1100131400000018 = IF
      ." 2nd U64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd U64 " 1100131400000018 U.  
      ." , got " VARY 8 + @ U.
    THEN

    CR
;

testvmaskmovdquxmm1xmm0->[rdi]


HEX
CODE TESTVMAXPDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VMAXPD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvmaxpdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VMAXPD, "
    FPD4.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD2.0 OU128B CCO!  FPD8.0 OU128B 8 + CCO!
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVMAXPDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD4.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD4.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD8.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD8.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvmaxpdm128xmm0->xmm1


HEX
CODE TESTVMAXPSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VMAXPS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvmaxpsm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VMAXPS, "
    FPS8.0 OU128A CCOU32!  FPS8.0 OU128A 4 + CCOU32!   FPS4.0 OU128A 8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32!  
    FPS2.0 OU128B CCOU32!  FPS4.0 OU128B 4 + CCOU32!   FPS4.0 OU128B 8 + CCOU32!  FPS6.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVMAXPSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS8.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS8.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS8.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS8.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS4.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS4.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS6.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS6.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvmaxpsm128xmm0->xmm1


HEX
CODE TESTVMAXSDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VMAXSD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvmaxsdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VMAXSD, "
    FPD4.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD2.0 OU128B CCO!  FPD8.0 OU128B 8 + CCO!
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVMAXSDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD4.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD4.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD2.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD2.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvmaxsdm128xmm0->xmm1


HEX
CODE TESTVMAXSSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VMAXSS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvmaxssm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VMAXSS, "
    FPS8.0 OU128A CCOU32!  FPS8.0 OU128A 4 + CCOU32!   FPS4.0 OU128A 8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32!  
    FPS2.0 OU128B CCOU32!  FPS4.0 OU128B 4 + CCOU32!   FPS4.0 OU128B 8 + CCOU32!  FPS6.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVMAXSSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS8.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS8.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS8.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS8.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS4.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS4.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS3.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS3.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvmaxssm128xmm0->xmm1


HEX
CODE TESTVMINPDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VMINPD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvminpdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VMINPD, "
    FPD4.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD2.0 OU128B CCO!  FPD8.0 OU128B 8 + CCO!
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVMINPDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD2.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD2.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD2.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvminpdm128xmm0->xmm1


HEX
CODE TESTVMINPSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VMINPS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvminpsm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VMINPS, "
    FPS8.0 OU128A CCOU32!  FPS8.0 OU128A 4 + CCOU32!   FPS4.0 OU128A 8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32!  
    FPS2.0 OU128B CCOU32!  FPS4.0 OU128B 4 + CCOU32!   FPS4.0 OU128B 8 + CCOU32!  FPS6.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVMINPSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS2.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS2.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS4.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS4.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS4.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS4.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS3.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS3.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvminpsm128xmm0->xmm1


HEX
CODE TESTVMINSDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VMINSD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvminsdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VMINSD, "
    FPD4.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD2.0 OU128B CCO!  FPD8.0 OU128B 8 + CCO!
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVMINSDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD2.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD2.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD2.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvminsdm128xmm0->xmm1


HEX
CODE TESTVMINSSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VMINSS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvminssm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VMINSS, "
    FPS8.0 OU128A CCOU32!  FPS8.0 OU128A 4 + CCOU32!   FPS4.0 OU128A 8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32!  
    FPS2.0 OU128B CCOU32!  FPS4.0 OU128B 4 + CCOU32!   FPS4.0 OU128B 8 + CCOU32!  FPS6.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVMINSSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS2.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS2.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS8.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS8.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS4.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS4.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS3.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS3.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvminssm128xmm0->xmm1  


HEX
CODE TESTVMOVDDUPM128->XMM0
  OU128B [O]  XMM0  VMOVDDUP,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvmovddupm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VMOVDDUP, "
    FPD3.0 OU128B CCO!     FPD2.0 OU128B 8 + CCO!     
         0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVMOVDDUPM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ FPD3.0 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FPD3.0 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FPD3.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvmovddupm128->xmm0


HEX
CODE TESTVMOVHLPSXMM0XMM1->XMM2
  OU128B [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  XMM0  XMM1  XMM2  VMOVHLPS,
  XMM2  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvmovhlpsxmm0xmm1->xmm2 ( -- )
    ." testing  XMM0  XMM1  XMM2  VMOVHLPS, "
    FPS3.0 OU128B     CCOU32!   FPS2.0 OU128B 04 + CCOU32!  
    FPS1.0 OU128B 8 + CCOU32!   FPS4.0 OU128B 0C + CCOU32!        
         0 OU128C CCO!               0 OU128C 8 + CCO!
    0 ['] TESTVMOVHLPSXMM0XMM1->XMM2 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS1.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS1.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS4.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 "  FPS4.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ 0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 "  0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ 0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 "  0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvmovhlpsxmm0xmm1->xmm2


HEX
CODE TESTVMOVLHPSXMM1XMM0->XMM2
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  MOVDQA,
  XMM1  XMM0  XMM2  VMOVLHPS,  
  XMM2  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvmovlhpsxmm1xmm0->xmm2 ( -- )
    ." testing XMM1  XMM0  XMM2  VMOVLHPS, "
    FPS1.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!   FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32!  
    FPS5.0 OU128B CCOU32!  FPS6.0 OU128B 4 + CCOU32!   FPS8.0 OU128B 8 + CCOU32!  FPS9.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVMOVLHPSXMM1XMM0->XMM2 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS5.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS5.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS6.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS6.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS1.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS1.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS2.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS2.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvmovlhpsxmm1xmm0->xmm2


HEX
CODE TESTVMOVNTDQAM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VMOVNTDQA,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvmovntdqam128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VMOVNTDQA, "
    FPD2.0 OU128A CCO! FPD5.0 OU128A 8 + CCO!  
    FPD1.0 OU128B CCO! FPD3.0 OU128B 8 + CCO!
         0 OU128C CCO!      0 OU128C 8 + CCO!
    0 ['] TESTVMOVNTDQAM128->XMM0 >BODY CALLPROC
    DROP  
    OU128C CCO@ FPD1.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD1.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD3.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD3.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvmovntdqam128->xmm0


HEX
CODE TESTVMOVSHDUPM128->XMM0
  OU128B [O]  XMM0  MOVDQA,
  OU128A [O]  XMM0  VMOVSHDUP,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvmovshdupm128->xmm0 ( -- )
    ." testing  OM128 [O]  XMM0  VMOVSHDUP, "
    FPS1.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!   FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32!  
    FPS5.0 OU128B CCOU32!  FPS6.0 OU128B 4 + CCOU32!   FPS8.0 OU128B 8 + CCOU32!  FPS9.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVMOVSHDUPM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS2.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS2.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS2.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS2.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS4.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS4.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS4.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS4.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvmovshdupm128->xmm0


HEX
CODE TESTVMOVSLDUPM128->XMM0
  OU128B [O]  XMM0  MOVDQA,
  OU128A [O]  XMM0  VMOVSLDUP,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvmovsldupm128->xmm0 ( -- )
    ." testing  OM128 [O]  XMM0  VMOVSLDUP, "
    FPS1.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!   FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32!  
    FPS5.0 OU128B CCOU32!  FPS6.0 OU128B 4 + CCOU32!   FPS8.0 OU128B 8 + CCOU32!  FPS9.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVMOVSLDUPM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS1.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS1.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS1.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS1.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS3.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS3.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS3.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS3.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvmovsldupm128->xmm0


HEX
CODE TESTVMPSADBW0NM128XMM0->XMM1 
  OU128A [O]  XMM0  MOVDQA,
  0 N  OU128B [O]  XMM0  XMM1  VMPSADBW,   // I wonder what this instruction is used for?
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvmpsadbw0nm128xmm0->xmm1 ( -- )
    ." testing 0 N OM128 [O]  XMM0  XMM1  VMPSADBW, "
    0807060504030201 OU128A CCO!  0202020201010101 OU128A 8 + CCO!  
    0806040203010301 OU128B CCO!  0100010000010001 OU128B 8 + CCO!
                   0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVMPSADBW0NM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ 000E000A00060004 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " 000E000A00060004 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ 000B000D00120012 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " 000B000D00120012 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvmpsadbw0nm128xmm0->xmm1


HEX
CODE TESTVMULPDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VMULPD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvmulpdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VMULPD, "
    FPD4.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD2.0 OU128B CCO!  FPD2.0 OU128B 8 + CCO!
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVMULPDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD8.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD8.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD4.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD4.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvmulpdm128xmm0->xmm1


HEX
CODE TESTVMULPSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VMULPS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvmulpsm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VMULPS, "
    FPS1.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!   FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32!  
    FPS2.0 OU128B CCOU32!  FPS4.0 OU128B 4 + CCOU32!   FPS2.0 OU128B 8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVMULPSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS2.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS2.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS8.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS8.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS6.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS6.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS4.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS4.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvmulpsm128xmm0->xmm1


HEX
CODE TESTVMULSDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VMULSD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvmulsdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VMULSD, "
    FPD4.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD2.0 OU128B CCO!  FPD3.0 OU128B 8 + CCO!
            0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVMULSDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD8.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD8.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD2.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD2.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvmulsdm128xmm0->xmm1


HEX
CODE TESTVMULSSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VMULSS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvmulssm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VMULSS, "
    FPS4.0 OU128A CCOU32!  FPS8.0 OU128A 4 + CCOU32!   FPS4.0 OU128A 8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32!  
    FPS2.0 OU128B CCOU32!  FPS4.0 OU128B 4 + CCOU32!   FPS4.0 OU128B 8 + CCOU32!  FPS6.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVMULSSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS8.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS8.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS8.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS8.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS4.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS4.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS3.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS3.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvmulssm128xmm0->xmm1


HEX
CODE TESTVORPDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VORPD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvorpdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VORPD, "
    FF00FF00FF00FF00 OU128A CCO!  FFFF0000FFFF0000 OU128A 8 + CCO!  
    FFFFFFFF00000000 OU128B CCO!  F00F0FF0F00F0FF0 OU128B 8 + CCO!
                     0 OU128C CCO!               0 OU128C 8 + CCO!
    0 ['] TESTVORPDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FFFFFFFFFF00FF00 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FFFFFFFFFF00FF00 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FFFF0FF0FFFF0FF0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FFFF0FF0FFFF0FF0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvorpdm128xmm0->xmm1


HEX
CODE TESTVORPSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1 VORPS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvorpsm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VORPS, "
    FPS1.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!   FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32!  
    FPS1.0 OU128B CCOU32!  FPS1.0 OU128B 4 + CCOU32!   FPS1.0 OU128B 8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVORPSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS1.0 FPS1.0 OR = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS1.0 FPS1.0 OR U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS2.0 FPS1.0 OR = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS2.0 FPS1.0 OR U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS3.0 FPS1.0 OR = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS3.0 FPS1.0 OR U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS1.0 FPS4.0 OR = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS1.0 FPS4.0 OR U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvorpsm128xmm0->xmm1


HEX
CODE TESTVPABSBM128->XMM0
  OU128B [O]  XMM0  VPABSB,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpabsbm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VPABSB, "
FFFE0203040506FD OU128B CCO!  FFFFFEFE04050607 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPABSBM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0102020304050603 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  0102020304050603 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0101020204050607 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0101020204050607 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpabsbm128->xmm0


HEX
CODE TESTVPABSWM128->XMM0
  OU128B [O]  XMM0  VPABSW,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpabswm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VPABSW, "
FFFE0203040506FD OU128B CCO!  FFFFFFFE04050607 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPABSWM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 00020203040506FD = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  00020203040506FD U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0001000204050607 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0001000204050607 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpabswm128->xmm0


HEX
CODE TESTVPABSDM128->XMM0
  OU128B [O]  XMM0  VPABSD,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpabsdm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VPABSD, "
FFFFFFFE040506FD OU128B CCO!  FFFFFFFF04050607 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPABSDM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 00000002040506FD = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  00000002040506FD U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0000000104050607 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0000000104050607 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpabsdm128->xmm0


HEX
CODE TESTVPACKSSWBM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPACKSSWB,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpacksswbm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPACKSSWB, "
007F0080FF80FF7F OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FFFBFFFE0005007D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPACKSSWBM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FDFC00087F7F8080 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FDFC00087F7F8080 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FAFF0907FBFE057D = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FAFF0907FBFE057D U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpacksswbm128xmm0->xmm1


HEX
CODE TESTVPACKSSDWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPACKSSDW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpackssdwm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPACKSSDW, "
00008000FFFF7FFF OU128A CCO!  FFFFFFFC00000008 OU128A 8 + CCO! 
FFFFFFFE0000007D OU128B CCO!  FFFFFFFF00000007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPACKSSDWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FFFC00087FFF8000 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FFFC00087FFF8000 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFF0007FFFE007D = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFF0007FFFE007D U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpackssdwm128xmm0->xmm1



HEX
CODE TESTVPACKUSDWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPACKUSDW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpackusdwm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPACKUSDW, "
00008000FFFF7FFF OU128A CCO!  FFFFFFFC00000008 OU128A 8 + CCO! 
FFFFFFFE0000007D OU128B CCO!  FFFFFFFF00000007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPACKUSDWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0000000880000000 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  0000000880000000 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 000000070000007D = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 000000070000007D U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpackusdwm128xmm0->xmm1



HEX
CODE TESTVPACKUSWBM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPACKUSWB,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpackuswbm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPACKUSWB, "
007F0080FF80FF7F OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FFFBFFFE0005007D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPACKUSWBM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 000000087F800000 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  000000087F800000 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 000009070000057D = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 000009070000057D U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpackuswbm128xmm0->xmm1


HEX
CODE TESTVPADDBM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPADDB,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpaddbm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPADDB, "
007F0080FF80FF7F OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FFFBFFFE0005007D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPADDBM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FF7AFF7EFF85FFFC = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FF7AFF7EFF85FFFC U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FEF7FEFB0009000F = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FEF7FEFB0009000F U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpaddbm128xmm0->xmm1


HEX
CODE TESTVPADDWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPADDW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpaddwm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPADDW, "
007F0080FF80FF7F OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FFFBFFFE0005007D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPADDWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 007A007EFF85FFFC = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  007A007EFF85FFFC U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFF7FFFB0009000F = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFF7FFFB0009000F U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpaddwm128xmm0->xmm1



HEX
CODE TESTVPADDDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPADDD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpadddm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPADDD, "
00000080FF80FF7F OU128A CCO!  FFFFFFFC00000008 OU128A 8 + CCO! 
FFFFFFFE0005007D OU128B CCO!  FFFFFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPADDDM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0000007EFF85FFFC = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  0000007EFF85FFFC U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFFFFFB0009000F = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFFFFFB0009000F U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpadddm128xmm0->xmm1


HEX
CODE TESTVPADDQM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPADDQ,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpaddqm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPADDQ, "
FFFFFFFFFFFFFF7F OU128A CCO!  8000000000000000 OU128A 8 + CCO! 
FFFFFFFFFFFFFFFC OU128B CCO!  8000000000000001 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPADDQM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FFFFFFFFFFFFFF7B = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FFFFFFFFFFFFFF7B U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 1 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 1 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpaddqm128xmm0->xmm1


HEX
CODE TESTVPADDSBM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPADDSB,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpaddsbm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPADDSB, "
007F0080FF80FF7F OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FFFBFFFE0005007D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPADDSBM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FF7AFF80FF85FF7F = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FF7AFF80FF85FF7F U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FEF7FEFB0009000F = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FEF7FEFB0009000F U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpaddsbm128xmm0->xmm1


HEX
CODE TESTVPADDSWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPADDSW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpaddswm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPADDSW, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FFFBFFFE0005008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPADDSWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 007A007EFF857FFF = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  007A007EFF857FFF U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFF7FFFB0009000F = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFF7FFFB0009000F U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpaddswm128xmm0->xmm1


HEX
CODE TESTVPADDUSBM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPADDUSB,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpaddusbm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPADDUSB, "
007F0080FF80FF7F OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FFFBFFFE0005007D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPADDUSBM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FFFFFFFFFF85FFFC = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FFFFFFFFFF85FFFC U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFFFFFF0009000F = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFFFFFF0009000F U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpaddusbm128xmm0->xmm1



HEX
CODE TESTVPADDUSWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPADDUSW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpadduswm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPADDUSW, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FFFBFFFE0005008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPADDUSWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FFFFFFFFFF85800D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FFFFFFFFFF85800D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFFFFFF0009000F = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFFFFFF0009000F U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpadduswm128xmm0->xmm1


HEX
CODE TESTVPALIGNRM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  1 N  OU128B [O]  XMM0  XMM1  VPALIGNR,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpalignrm128xmm0->xmm1 ( -- )
    ." testing 1 N  OM128 [O]  XMM0  XMM1  VPALIGNR, "
007F0080FF80FF7F OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FFFBFFFE0005007D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPALIGNRM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 07FFFBFFFE000500 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  07FFFBFFFE000500 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 7FFFFAFFFF000900 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 7FFFFAFFFF000900 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpalignrm128xmm0->xmm1



HEX
CODE TESTVPANDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPAND,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpandm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPAND, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FFFBFFFE0005008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPANDM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 007B008000000080 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  007B008000000080 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFF8FFFC00000000 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFF8FFFC00000000 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpandm128xmm0->xmm1



HEX
CODE TESTVPANDNM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPANDN,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpandnm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPANDN, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FFFBFFFE0005008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPANDNM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 007F0080FF807F80 INVERT FFFBFFFE0005008D AND = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  007F0080FF807F80 INVERT FFFBFFFE0005008D AND U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFDFFFC00000008 INVERT FFFAFFFF00090007 AND  = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFDFFFC00000008 INVERT FFFAFFFF00090007 AND U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpandnm128xmm0->xmm1


HEX
CODE TESTVPAVGBM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPAVGB,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpavgbm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPAVGB, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FFFBFFFE0005008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPAVGBM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 80BD80BF80434087 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  80BD80BF80434087 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFCFFFE00050008 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFCFFFE00050008 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpavgbm128xmm0->xmm1



HEX
CODE TESTVPAVGWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPAVGW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpavgwm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPAVGW, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FFFBFFFE0005008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPAVGWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 803D803F7FC34007 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  803D803F7FC34007 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFCFFFE00050008 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFCFFFE00050008 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpavgwm128xmm0->xmm1



HEX
CODE TESTVPBLENDVBM128XMM0XMM1->XMM2
  OU128C [O]  XMM0  MOVDQA,
  OU128A [O]  XMM1  MOVDQA,
  0 N  OU128B [O]  XMM1  XMM2  VPBLENDVB,  // 0 N picks XMM0 as the mask register
  XMM2  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpblendvbm128xmm0xmm1->xmm2 ( -- )
    ." testing XMM0  OM128 [O]  XMM1  XMM2  VPBLENDVB, "
007F0080FF807F80 OU128A CCO!  FEFDFFFC03000508 OU128A 8 + CCO! 
FFFBFFFE0005008D OU128B CCO!  FFFAFDFF01090207 OU128B 8 + CCO!     
8080008080008000 OU128C CCO!  8000800000800080 OU128C 8 + CCO!
    0 ['] TESTVPBLENDVBM128XMM0XMM1->XMM2 >BODY CALLPROC
    DROP  

    OU128C CCO@ FFFB00FE00800080 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FFFB00FE00800080 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFDFDFC03090507 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFDFDFC03090507 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpblendvbm128xmm0xmm1->xmm2


HEX
CODE TESTVPBLENDWM128XMM1->XMM0
  OU128A [O]  XMM1  MOVDQA,
  A5 N  OU128B [O]  XMM1  XMM0  VPBLENDW,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpblendwm128xmm1->xmm0 ( -- )
    ." testing A5 N  OM128 [O]  XMM1  XMM0  VPBLENDW, "
007F0080FF807F80 OU128A CCO!  FEFDFFFC03000508 OU128A 8 + CCO! 
FFFBFFFE0005008D OU128B CCO!  FFFAFDFF01090207 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPBLENDWM128XMM1->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 007FFFFEFF80008D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  007FFFFEFF80008D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFAFFFC01090508 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFAFFFC01090508 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpblendwm128xmm1->xmm0


HEX
CODE TESTVPCLMULQDQM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  11 N  OU128B [O]  XMM0  XMM1  VPCLMULQDQ,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpclmulqdqm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPCLMULQDQ, "
2 OU128A CCO!  05 OU128A 8 + CCO! 
4 OU128B CCO!  03 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPCLMULQDQM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0F = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  0F U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpclmulqdqm128xmm0->xmm1


HEX
CODE TESTVPCMPEQBM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPCMPEQB,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpcmpeqbm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPCMPEQB, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FF7FFFFE0080008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPCMPEQBM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 00FF000000FF0000 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  00FF000000FF0000 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FF00FF00FF00FF00 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FF00FF00FF00FF00 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpcmpeqbm128xmm0->xmm1



HEX
CODE TESTVPCMPEQWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPCMPEQW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpcmpeqwm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPCMPEQW, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FF7F008000057F80 OU128B CCO!  FFFAFFFC00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPCMPEQWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0000FFFF0000FFFF = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  0000FFFF0000FFFF U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0000FFFF00000000 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0000FFFF00000000 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpcmpeqwm128xmm0->xmm1



HEX
CODE TESTVPCMPEQDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPCMPEQD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpcmpeqdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPCMPEQD, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FF7F0080FF807F80 OU128B CCO!  FFFDFFFC00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPCMPEQDM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 00000000FFFFFFFF = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  00000000FFFFFFFF U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFFFFFF00000000 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFFFFFF00000000 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpcmpeqdm128xmm0->xmm1



HEX
CODE TESTVPCMPEQQM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPCMPEQQ,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpcmpeqqm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPCMPEQQ, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FF7F0080FF807F80 OU128B CCO!  FFFDFFFC00000008 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPCMPEQQM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFFFFFFFFFFFFFF = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFFFFFFFFFFFFFF U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpcmpeqqm128xmm0->xmm1


HEX
CODE TESTVPCMPESTRIN8M128->XMM0
  RCX RCX XOR,
  OU128A [O]  XMM0  MOVDQA,
  10 N  RAX  MOV,
  10 N  RDX  MOV,
  8 N  OU128B [O]  XMM0  VPCMPESTRI,  // unsigned byte string compare
  RCX  OU128C [O]  MOV,  // RCX should equal index of first matching byte
  RET,  
END-CODE
  
: testvpcmpestrin8m128->xmm0 ( -- ) 
    ." testing  N8  OM128 [O]  XMM0  VPCMPESTRI, "
    0102030405060808 OU128A CCO!    1122334455557788 OU128A 8 + CCO!   
    0009010207020406 OU128B CCO!    1122334455557889 OU128B 8 + CCO!       
                   0 OU128C CCO!                   0 OU128C 8 + CCO!
    0 ['] TESTVPCMPESTRIN8M128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0A = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  0A U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
;


testvpcmpestrin8m128->xmm0


HEX
CODE TESTVPCMPESTRMN8M128->XMM0
  RCX RCX XOR,
  OU128A [O]  XMM0  MOVDQA,
  10 N  RAX  MOV,
  10 N  RDX  MOV,
  8 N  OU128B [O]  XMM0  VPCMPESTRM,  // unsigned byte string compare
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpcmpestrmn8m128->xmm0 ( -- ) 
    ." testing  N8  OM128 [O]  XMM0  VPCMPESTRM, "
    0102030405060808 OU128A CCO!    1122334455557788 OU128A 8 + CCO!   
    0009010207020406 OU128B CCO!    1122334455557889 OU128B 8 + CCO!       
                   0 OU128C CCO!                   0 OU128C 8 + CCO!
    0 ['] TESTVPCMPESTRMN8M128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ FC00 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  FC00 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
;


testvpcmpestrmn8m128->xmm0


HEX
CODE TESTVPCMPISTRIN8M128->XMM0
  RCX RCX XOR,
  OU128A [O]  XMM0  MOVDQA,
  8 N  OU128B [O]  XMM0  VPCMPISTRI,  // unsigned byte string compare
  RCX  OU128C [O]  MOV,  // RCX should equal index of first matching byte
  RET,  
END-CODE
  
: testvpcmpistrin8m128->xmm0 ( -- ) 
    ." testing  N8  OM128 [O]  XMM0  VPCMPISTRI, "
    0102030405060808 OU128A CCO!    1122334455557788 OU128A 8 + CCO!   
    0009010207020406 OU128B CCO!    1122334455557889 OU128B 8 + CCO!       
                   0 OU128C CCO!                   0 OU128C 8 + CCO!
    0 ['] TESTVPCMPISTRIN8M128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 10 = IF  // nothing will match after and including the null
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  10 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
;


testvpcmpistrin8m128->xmm0


HEX
CODE TESTVPCMPISTRMN8M128->XMM0
  RCX RCX XOR,
  OU128A [O]  XMM0  MOVDQA,
  8 N  OU128B [O]  XMM0  VPCMPISTRM,  // unsigned byte string compare
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpcmpistrmn8m128->xmm0 ( -- ) 
    ." testing  N8  OM128 [O]  XMM0  VPCMPISTRM, "
    0102030407060808 OU128A CCO!    1122334455557788 OU128A 8 + CCO!   
    0009010207020806 OU128B CCO!    1122334455557889 OU128B 8 + CCO!       
                   0 OU128C CCO!                   0 OU128C 8 + CCO!
    0 ['] TESTVPCMPISTRMN8M128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0A = IF  // nothing will match after and including the null
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  0A U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
;


testvpcmpistrmn8m128->xmm0

HEX
CODE TESTVPCMPGTBM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPCMPGTB,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpcmpgtbm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPCMPGTB, "
FF7F0083FF847F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FE7FFF8000800201 OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPCMPGTBM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FF00FFFF00FFFF00 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FF00FFFF00FFFF00 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 00FF0000000000FF = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 00FF0000000000FF U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpcmpgtbm128xmm0->xmm1


HEX
CODE TESTVPCMPGTWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPCMPGTW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpcmpgtwm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPCMPGTW, "
7FFFFF80FF807F8E OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FFFEFF7F0080008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPCMPGTWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FFFFFFFF0000FFFF = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FFFFFFFF0000FFFF U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFF0000FFFFFFFF = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFF0000FFFFFFFF U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpcmpgtwm128xmm0->xmm1



HEX
CODE TESTVPCMPGTDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPCMPGTD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpcmpgtdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPCMPGTD, "
0000000100000005 OU128A CCO!  FFFFFFFF00000008 OU128A 8 + CCO! 
FFFFFFFF7FFFFFFF OU128B CCO!  0000000200000007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPCMPGTDM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FFFFFFFF00000000 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FFFFFFFF00000000 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 00000000FFFFFFFF = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 00000000FFFFFFFF U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpcmpgtdm128xmm0->xmm1



HEX
CODE TESTVPCMPGTQM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPCMPGTQ,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpcmpgtqm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPCMPGTQ, "
0000000100000005 OU128A CCO!  FFFFFFFF00000008 OU128A 8 + CCO! 
FFFFFFFF7FFFFFFF OU128B CCO!  0000000200000007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPCMPGTQM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FFFFFFFFFFFFFFFF = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FFFFFFFFFFFFFFFF U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpcmpgtqm128xmm0->xmm1


HEX
CODE TESTVPHADDWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPHADDW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvphaddwm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPHADDW, "
000EFF8000900005 OU128A CCO!  FFFCFFFC01000008 OU128A 8 + CCO! 
007FFF7F00800003 OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPHADDWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FFF80108FF8E0095 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FFF80108FF8E0095 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFF90010FFFE0083 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFF90010FFFE0083 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvphaddwm128xmm0->xmm1



HEX
CODE TESTVPHADDSWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPHADDSW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvphaddswm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPHADDSW, "
000EFF8000900005 OU128A CCO!  FFFCFFFC01000008 OU128A 8 + CCO! 
00017FFF00800003 OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPHADDSWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FFF80108FF8E0095 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FFF80108FF8E0095 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFF900107FFF0083 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFF900107FFF0083 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvphaddswm128xmm0->xmm1



HEX
CODE TESTVPHADDDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPHADDD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvphadddm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPHADDD, "
000EFF8000000005 OU128A CCO!  FFFCFFFC00000008 OU128A 8 + CCO! 
007FFF7F00000003 OU128B CCO!  FFFAFFFF00000007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPHADDDM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FFFD0004000EFF85 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FFFD0004000EFF85 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFB0006007FFF82 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFB0006007FFF82 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvphadddm128xmm0->xmm1



HEX
CODE TESTVPHSUBWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPHSUBW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvphsubwm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPHSUBW, "
000EFF8000050090 OU128A CCO!  FFFCFFFC00080100 OU128A 8 + CCO! 
007FFF7F00800003 OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPHSUBWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 000000F8FF72008B = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  000000F8FF72008B U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0005FFFEFF00FF83 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0005FFFEFF00FF83 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvphsubwm128xmm0->xmm1



HEX
CODE TESTVPHSUBSWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPHSUBSW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvphsubswm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPHSUBSW, "
000EFF80FFFF7FFF OU128A CCO!  FFFCFFFC00080100 OU128A 8 + CCO! 
007FFF7F00800003 OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPHSUBSWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 000000F8FF727FFF = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  000000F8FF727FFF U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0005FFFEFF00FF83 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0005FFFEFF00FF83 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvphsubswm128xmm0->xmm1



HEX
CODE TESTVPHSUBDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPHSUBD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvphsubdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPHSUBD, "
0000000100000005 OU128A CCO!  FFFFFFFF00000008 OU128A 8 + CCO! 
FFFFFFFF7FFFFFFF OU128B CCO!  0000000270000007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPHSUBDM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0000000900000004 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  0000000900000004 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 7000000580000000 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 7000000580000000 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvphsubdm128xmm0->xmm1


HEX
CODE TESTVPHMINPOSUWM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VPHMINPOSUW,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvphminposuwm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VPHMINPOSUW, "
000EFF80FFFF7FFF OU128A CCO!  FFFCFFFC00080100 OU128A 8 + CCO! 
007F0003FF7F0080 OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPHMINPOSUWM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 20003 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  20003 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvphminposuwm128->xmm0


HEX
CODE TESTVPMADDUBSWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMADDUBSW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmaddubswm128xmm0->xmm1 ( -- ) 
    ." testing  M128  XMM0  XMM1  VPMADDUBSW, "
0102030405060708 OU128A CCO!   090A0B0C0D0E0F10 OU128A 8 + CCO!
FF01FE02FD03FF00 OU128B CCO!   FF01FE02FD03FF00 OU128B 8 + CCO!
               0 OU128C CCO!                  0 OU128C 8 + CCO!
    0 ['] TESTVPMADDUBSWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 000100020003FFF9 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  000100020003FFF9 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 000100020003FFF1 = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " 000100020003FFF1 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;


testvpmaddubswm128xmm0->xmm1


HEX
CODE TESTVPMADDWDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMADDWD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmaddwdm128xmm0->xmm1 ( -- ) 
    ." testing  M128  XMM0  XMM1  VPMADDWD, "
0002000400060008 OU128A CCO!   000A000C000E0010 OU128A 8 + CCO!  
FFFF0002FFFD0003 OU128B CCO!   00010002FFFD0000 OU128B 8 + CCO!
               0 OU128C CCO!                  0 OU128C 8 + CCO!
    0 ['] TESTVPMADDWDM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0000000600000006 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  0000000600000006 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 00000022FFFFFFD6 = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " 00000022FFFFFFD6 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;


testvpmaddwdm128xmm0->xmm1


HEX
CODE TESTVPMAXSBM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMAXSB,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmaxsbm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPMAXSB, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FF7FFFFE0080008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMAXSBM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 007F00FE00807F8D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  007F00FE00807F8D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFDFFFF00090008 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFDFFFF00090008 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmaxsbm128xmm0->xmm1


HEX
CODE TESTVPMAXSWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMAXSW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmaxswm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPMAXSW, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE0080008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMAXSWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 007F008000807F80 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  007F008000807F80 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFDFFFF01000008 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFDFFFF01000008 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmaxswm128xmm0->xmm1



HEX
CODE TESTVPMAXSDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMAXSD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmaxsdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPMAXSD, "
007F008000807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE0081008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMAXSDM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 007F00800081008D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  007F00800081008D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFDFFFC01000008 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFDFFFC01000008 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmaxsdm128xmm0->xmm1



HEX
CODE TESTVPMINSBM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMINSB,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpminsbm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPMINSB, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FF7FFFFE0080008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMINSBM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FF7FFF80FF800080 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FF7FFF80FF800080 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFAFFFC00000007 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFAFFFC00000007 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpminsbm128xmm0->xmm1


HEX
CODE TESTVPMINSWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMINSW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpminswm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPMINSW, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE0080008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMINSWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FF7FFFFEFF80008D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FF7FFFFEFF80008D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFAFFFC00090007 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFAFFFC00090007 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpminswm128xmm0->xmm1



HEX
CODE TESTVPMINSDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMINSD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpminsdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPMINSD, "
007F008000807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE0081008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMINSDM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FF7FFFFE00807F80 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FF7FFFFE00807F80 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFAFFFF00090007 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFAFFFF00090007 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpminsdm128xmm0->xmm1


HEX
CODE TESTVPMAXUBM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMAXUB,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmaxubm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPMAXUB, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FF7FFFFE0080008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMAXUBM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FF7FFFFEFF807F8D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FF7FFFFEFF807F8D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFDFFFF00090008 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFDFFFF00090008 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmaxubm128xmm0->xmm1


HEX
CODE TESTVPMAXUWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMAXUW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmaxuwm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPMAXUW, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE0080008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMAXUWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FF7FFFFEFF807F80 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FF7FFFFEFF807F80 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFDFFFF01000008 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFDFFFF01000008 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmaxuwm128xmm0->xmm1



HEX
CODE TESTVPMAXUDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMAXUD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmaxudm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPMAXUD, "
007F008000807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE0081008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMAXUDM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FF7FFFFE0081008D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FF7FFFFE0081008D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFDFFFC01000008 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFDFFFC01000008 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmaxudm128xmm0->xmm1



HEX
CODE TESTVPMINUBM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMINUB,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpminubm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPMINUB, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FF7FFFFE0080008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMINUBM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 007F008000800080 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  007F008000800080 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFAFFFC00000007 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFAFFFC00000007 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpminubm128xmm0->xmm1


HEX
CODE TESTVPMINUWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMINUW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpminuwm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPMINUW, "
007F0080FF807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE0080008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMINUWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 007F00800080008D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  007F00800080008D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFAFFFC00090007 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFAFFFC00090007 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpminuwm128xmm0->xmm1



HEX
CODE TESTVPMINUDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMINUD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpminudm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPMINUD, "
007F008000807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE0081008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMINUDM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 007F008000807F80 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  007F008000807F80 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFAFFFF00090007 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFAFFFF00090007 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpminudm128xmm0->xmm1


HEX
CODE TESTVPMOVSXBWM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VPMOVSXBW,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmovsxbwm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VPMOVSXBW, "
007F008000807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE0081008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMOVSXBWM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0000FF810000FF8D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  0000FF810000FF8D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFF007FFFFFFFFE = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFF007FFFFFFFFE U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmovsxbwm128->xmm0



HEX
CODE TESTVPMOVSXBDM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VPMOVSXBD,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmovsxbdm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VPMOVSXBD, "
007F008000807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE0081008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMOVSXBDM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 00000000FFFFFF8D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  00000000FFFFFF8D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 00000000FFFFFF81 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 00000000FFFFFF81 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmovsxbdm128->xmm0


HEX
CODE TESTVPMOVSXBQM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VPMOVSXBQ,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmovsxbqm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VPMOVSXBQ, "
007F008000807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE0081018D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMOVSXBQM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ FFFFFFFFFFFFFF8D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FFFFFFFFFFFFFF8D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 1 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 1 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmovsxbqm128->xmm0


HEX
CODE TESTVPMOVSXWDM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VPMOVSXWD,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmovsxwdm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VPMOVSXWD, "
007F008000807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE0081008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMOVSXWDM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 000000810000008D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  000000810000008D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFFFF7FFFFFFFFE = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFFFF7FFFFFFFFE U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmovsxwdm128->xmm0


HEX
CODE TESTVPMOVSXWQM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VPMOVSXWQ,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmovsxwqm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VPMOVSXWQ, "
007F008000807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE8081018D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMOVSXWQM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 000000000000018D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  000000000000018D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFFFFFFFFFF8081 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFFFFFFFFFF8081 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmovsxwqm128->xmm0


HEX
CODE TESTVPMOVSXDQM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VPMOVSXDQ,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmovsxdqm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VPMOVSXDQ, "
007F008000807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE8081018D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMOVSXDQM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ FFFFFFFF8081018D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FFFFFFFF8081018D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFFFFFFFF7FFFFE = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFFFFFFFF7FFFFE U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmovsxdqm128->xmm0



HEX
CODE TESTVPMOVZXBWM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VPMOVZXBW,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmovzxbwm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VPMOVZXBW, "
007F008000807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE0081008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMOVZXBWM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 000000810000008D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  000000810000008D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 00FF007F00FF00FE = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 00FF007F00FF00FE U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmovzxbwm128->xmm0



HEX
CODE TESTVPMOVZXBDM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VPMOVZXBD,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmovzxbdm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VPMOVZXBD, "
007F008000807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE0081008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMOVZXBDM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 000000000000008D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  000000000000008D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0000000000000081 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0000000000000081 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmovzxbdm128->xmm0


HEX
CODE TESTVPMOVZXBQM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VPMOVZXBQ,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmovzxbqm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VPMOVZXBQ, "
007F008000807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE0081018D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMOVZXBQM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 000000000000008D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  000000000000008D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 1 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 1 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmovzxbqm128->xmm0


HEX
CODE TESTVPMOVZXWDM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VPMOVZXWD,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmovzxwdm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VPMOVZXWD, "
007F008000807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE0081008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMOVZXWDM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 000000810000008D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  000000810000008D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0000FF7F0000FFFE = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0000FF7F0000FFFE U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmovzxwdm128->xmm0


HEX
CODE TESTVPMOVZXWQM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VPMOVZXWQ,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmovzxwqm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VPMOVSXWQ, "
007F008000807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE8081018D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMOVZXWQM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 000000000000018D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  000000000000018D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0000000000008081 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0000000000008081 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmovzxwqm128->xmm0


HEX
CODE TESTVPMOVZXDQM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VPMOVZXDQ,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmovzxdqm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VPMOVZXDQ, "
007F008000807F80 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FF7FFFFE8081018D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMOVZXDQM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 000000008081018D = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  000000008081018D U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 00000000FF7FFFFE = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 00000000FF7FFFFE U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmovzxdqm128->xmm0


HEX
CODE TESTVPMULDQM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMULDQ,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmuldqm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPMULDQ, "
0000000700000003 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
0000000900000005 OU128B CCO!  FFFAFFFF00000007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMULDQM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0F = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  0F U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 38 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 38 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmuldqm128xmm0->xmm1


HEX
CODE TESTVPMULHRSWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMULHRSW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmulhrswm128xmm0->xmm1 ( -- ) 
    ." testing OM128 [O]  XMM0  XMM1  VPMULHRSW, "
0400030002000100 OU128A CCO!  0300020001000000 OU128A 8 + CCO! 
0500040003000200 OU128B CCO!  0100020001000100 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMULHRSWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 00280018000C0004 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  00280018000C0004 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0006000800020000 = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " 0006000800020000 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmulhrswm128xmm0->xmm1



HEX
CODE TESTVPMULHUWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMULHUW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmulhuwm128xmm0->xmm1 ( -- )  // need to change test to show this is different result from signed
    ." testing OM128 [O]  XMM0  XMM1  VPMULHUW, "
0400030002000100 OU128A CCO!  0300020001000000 OU128A 8 + CCO!  
0500040003000200 OU128B CCO!  0100020001000100 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMULHUWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0014000C00060002 = IF  
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  0014000C00060002 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0003000400010000 = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " 0003000400010000 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmulhuwm128xmm0->xmm1



HEX
CODE TESTVPMULHWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMULHW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmulhwm128xmm0->xmm1 ( -- ) 
    ." testing OM128 [O]  XMM0  XMM1  VPMULHW, "
040003000200FEFF OU128A CCO!  0300020001000000 OU128A 8 + CCO! 
050004000300FDFF OU128B CCO!  0100020001000100 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMULHWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0014000C00060002 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  0014000C00060002 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0003000400010000 = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " 0003000400010000 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmulhwm128xmm0->xmm1



HEX
CODE TESTVPMULLDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMULLD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmulldm128xmm0->xmm1 ( -- ) 
    ." testing OM128 [O]  XMM0  XMM1  VPMULLD, "
00000003FFFFFFFE OU128A CCO!  0000000300000001 OU128A 8 + CCO! 
00000004FFFFFFFD OU128B CCO!  0000000100000001 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMULLDM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0000000C00000006 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  0000000C00000006 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0000000300000001 = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " 0000000300000001 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmulldm128xmm0->xmm1


HEX
CODE TESTVPMULLWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMULLW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmullwm128xmm0->xmm1 ( -- ) 
    ." testing OM128 [O]  XMM0  XMM1  VPMULLW, "
00020003FFFFFFFE OU128A CCO!  0001000300050001 OU128A 8 + CCO! 
00040004FFFFFFFD OU128B CCO!  0002000100010001 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMULLWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0008000C00010006 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  0008000C00010006 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0002000300050001 = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " 0002000300050001 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmullwm128xmm0->xmm1


HEX
CODE TESTVPMULUDQM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPMULUDQ,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpmuludqm128xmm0->xmm1 ( -- ) 
    ." testing OM128 [O]  XMM0  XMM1  VPMULUDQ, "
0000000300000002 OU128A CCO!  0000000200000003 OU128A 8 + CCO! 
0000000400000003 OU128B CCO!  0000000200000005 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPMULUDQM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0000000000000006 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  0000000000000006 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 000000000000000F = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " 000000000000000F U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpmuludqm128xmm0->xmm1

HEX
CODE TESTVPORM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPOR,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvporm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPOR, "
8000000100000005 OU128A CCO!  FFFFFFFE80000000 OU128A 8 + CCO! 
00F0000000000F05 OU128B CCO!  800000007FFFFFFF OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPORM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 80F0000100000F05 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  80F0000100000F05 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFFFFFEFFFFFFFF = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " FFFFFFFEFFFFFFFF U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvporm128xmm0->xmm1


HEX
CODE TESTVPSADBWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPSADBW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpsadbwm128xmm0->xmm1 ( -- ) 
    ." testing  M128  XMM0  XMM1  VPSADBW, "
    1133224466558879 OU128A CCO!   1234567813141516 OU128A 8 + CCO!
    1234234567568977 OU128B CCO!   1234567813141517 OU128B 8 + CCO!         
    0 OU128C CCO!   0 OU128C 8 + CCO!
    0 ['] TESTVPSADBWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 9  = IF
      ." 1st U64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st U64 " 9  U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 1 = IF
      ." 2nd U64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd U64 " 1 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpsadbwm128xmm0->xmm1


HEX
CODE TESTVPSHUFBM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPSHUFB,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpshufbm128xmm0->xmm1 ( -- ) 
    ." testing OM128 [O]  XMM0  XMM1  VPSHUFB, "
3736353433323130 OU128A CCO!  3F3E3D3C3B3A3938 OU128A 8 + CCO! 
800E0F01020E0403 OU128B CCO!  050609080B0C0A05 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPSHUFBM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 003E3F31323E3433 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  003E3F31323E3433 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 353639383B3C3A35 = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " 353639383B3C3A35 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpshufbm128xmm0->xmm1



HEX
CODE TESTVPSHUFDM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  F6 N  OU128B [O]  XMM0  VPSHUFD, // 3 3 1 2
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpshufdm128->xmm0 ( -- ) 
    ." testing OM128 [O]  XMM0  VPSHUFD, "
3736353433323130 OU128A CCO!  3F3E3D3C3B3A3938 OU128A 8 + CCO! 
800E0F01020E0403 OU128B CCO!  050609080B0C0A05 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPSHUFDM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 800E0F010B0C0A05 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  800E0F010B0C0A05 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0506090805060908 = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " 0506090805060908 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpshufdm128->xmm0



HEX
CODE TESTVPSHUFHWM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  F6 N  OU128B [O]  XMM0  VPSHUFHW, // 3 3 1 2
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpshufhwm128->xmm0 ( -- ) 
    ." testing OM128 [O]  XMM0  VPSHUFHW, "
3736353433323130 OU128A CCO!  3F3E3D3C3B3A3938 OU128A 8 + CCO! 
800E0F01020E0403 OU128B CCO!  050609080B0C0A05 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPSHUFHWM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 800E0F01020E0403 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  800E0F01020E0403 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 050605060B0C0908 = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " 050605060B0C0908 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpshufhwm128->xmm0


HEX
CODE TESTVPSHUFLWM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  F6 N  OU128B [O]  XMM0  VPSHUFLW, // 3 3 1 2
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpshuflwm128->xmm0 ( -- ) 
    ." testing OM128 [O]  XMM0  VPSHUFLW, "
3736353433323130 OU128A CCO!  3F3E3D3C3B3A3938 OU128A 8 + CCO! 
800E0F01020E0403 OU128B CCO!  050609080B0C0A05 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPSHUFLWM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 800E800E020E0F01 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  800E800E020E0F01 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 050609080B0C0A05 = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " 050609080B0C0A05 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpshuflwm128->xmm0


HEX
CODE TESTVPSIGNBM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPSIGNB,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpsignbm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPSIGNB, "
FF7F0083FF847F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FE7FFF8000800291 OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPSIGNBM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 017F007D007C7F80 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  017F007D007C7F80 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0103010400000008 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0103010400000008 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpsignbm128xmm0->xmm1



HEX
CODE TESTVPSIGNWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPSIGNW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpsignwm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPSIGNW, "
7FFFFF80FF808000 OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FFFEFF7F0080FFFF OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPSIGNWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 80010080FF808000 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  80010080FF808000 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0003000401000008 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0003000401000008 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpsignwm128xmm0->xmm1



HEX
CODE TESTVPSIGNDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPSIGND,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpsigndm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPSIGND, "
8000000100000005 OU128A CCO!  FFFFFFFE80000000 OU128A 8 + CCO! 
FFFFFFFF7FFFFFFF OU128B CCO!  0000000280000007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPSIGNDM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 7FFFFFFF00000005 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  7FFFFFFF00000005 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FFFFFFFE80000000 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FFFFFFFE80000000 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpsigndm128xmm0->xmm1


HEX
CODE TESTVPSUBBM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPSUBB,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpsubbm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPSUBB, "
FF7F0083FF847F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FE7FFF800080028D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPSUBBM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 01000103FF047DF3 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  01000103FF047DF3 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 000300FD00F70001 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 000300FD00F70001 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpsubbm128xmm0->xmm1



HEX
CODE TESTVPSUBWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPSUBW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpsubwm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPSUBW, "
FF7FFF80FF807F8E OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
007FFF7F0080008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPSUBWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FF000001FF007F01 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FF000001FF007F01 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0003FFFD00F70001 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0003FFFD00F70001 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpsubwm128xmm0->xmm1



HEX
CODE TESTVPSUBDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPSUBD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpsubdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPSUBD, "
1000000000827F8E OU128A CCO!  FFFDFFFC010A0008 OU128A 8 + CCO! 
100000010081008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPSUBDM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FFFFFFFF00017F01 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FFFFFFFF00017F01 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0002FFFD01010001 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0002FFFD01010001 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpsubdm128xmm0->xmm1



HEX
CODE TESTVPSUBQM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPSUBQ,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpsubqm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPSUBQ, "
1000000000827F8E OU128A CCO!  FFFDFFFC010A0008 OU128A 8 + CCO! 
100000000091008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPSUBQM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FFFFFFFFFFF17F01 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FFFFFFFFFFF17F01 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0002FFFD01010001 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0002FFFD01010001 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpsubqm128xmm0->xmm1


HEX
CODE TESTVPSUBSBM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPSUBSB,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpsubsbm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPSUBSB, "
FF7F0083FF847F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FE7FFF8000800201 OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPSUBSBM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 01000103FF047D80 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  01000103FF047D80 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 000300FD00F70001 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 000300FD00F70001 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpsubsbm128xmm0->xmm1


HEX
CODE TESTVPSUBSWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPSUBSW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpsubswm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPSUBSW, "
7FFFFF80FF807F8E OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FFFEFF7F0080008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPSUBSWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 7FFF0001FF007F01 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  7FFF0001FF007F01 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0003FFFD00F70001 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0003FFFD00F70001 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpsubswm128xmm0->xmm1


HEX
CODE TESTVPSUBUSBM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPSUBUSB,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpsubusbm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPSUBUSB, "
FF7F0083FF847F80 OU128A CCO!  FFFDFFFC00000008 OU128A 8 + CCO! 
FE7FFF8000800201 OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPSUBUSBM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 01000003FF047D7F = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  01000003FF047D7F U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0003000000000001 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0003000000000001 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpsubusbm128xmm0->xmm1


HEX
CODE TESTVPSUBUSWM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPSUBUSW,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpsubuswm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPSUBUSW, "
7FFFFF80FF807F8E OU128A CCO!  FFFDFFFC01000008 OU128A 8 + CCO! 
FFFEFF7F0080008D OU128B CCO!  FFFAFFFF00090007 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPSUBUSWM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 00000001FF007F01 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  00000001FF007F01 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0003000000F70001 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0003000000F70001 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpsubuswm128xmm0->xmm1


HEX
CODE TESTVPTESTM128->XMM0
  XMM1 XMM1 PXOR,
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VPTEST,
  ZS IF,
    OU128C [O]  XMM1  PADDB,
    OU128C [O]  XMM1  PADDB,
  THEN,
  OU128A [O]  XMM0  VPTEST,
  NZ IF,
    OU128C [O]  XMM1  PADDB,
    OU128C [O]  XMM1  PADDB,
  THEN,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvptestm128->xmm0 ( -- ) 
    ." testing  M128  XMM0  VPTEST, "
0002000400060008 OU128A CCO!   000A000C000E0010 OU128A 8 + CCO!  
F000F000F000F000 OU128B CCO!   F000F000F000F000 OU128B 8 + CCO!
               1 OU128C CCO!                  0 OU128C 8 + CCO!
    0 ['] TESTVPTESTM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 4 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  4 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0 = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " 0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;


testvptestm128->xmm0


HEX
CODE TESTVPUNPCKHBWM128XMM1->XMM2
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM1  XMM2  VPUNPCKHBW,  
  XMM2  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpunpckhbwm128xmm1->xmm2 ( -- ) 
    ." testing  M128  XMM1  XMM2  PUNPCKHBW, "
    0102040503060908 OU128A CCO!   1112131415171816 OU128A 8 + CCO!
    2221232426252827 OU128B CCO!   3132353439383736 OU128B 8 + CCO!         
    0 OU128C CCO!   0 OU128C 8 + CCO!
    0 ['] TESTVPUNPCKHBWM128XMM1->XMM2 >BODY CALLPROC
    DROP  

    OU128C CCO@ 3915381737183616 = IF
      ." 1st U64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st U64 "  3915381737183616 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 3111321235133414 = IF
      ." 2nd U64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd U64 " 3111321235133414 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpunpckhbwm128xmm1->xmm2


HEX
CODE TESTVPUNPCKHWDM128XMM1->XMM2
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM1  XMM2  VPUNPCKHWD,  
  XMM2  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpunpckhwdm128xmm1->xmm2 ( -- ) 
    ." testing  M128  XMM1  XMM2  VPUNPCKHWD, "
    0102040503060908 OU128A CCO!   1112131415171816 OU128A 8 + CCO!
    2221232426252827 OU128B CCO!   3132353439383736 OU128B 8 + CCO!         
    0 OU128C CCO!   0 OU128C 8 + CCO!
    0 ['] TESTVPUNPCKHWDM128XMM1->XMM2 >BODY CALLPROC
    DROP  

    OU128C CCO@ 3938151737361816 = IF
      ." 1st U64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st U64 "  3938151737361816 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 3132111235341314 = IF
      ." 2nd U64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd U64 " 3132111235341314 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpunpckhwdm128xmm1->xmm2


HEX
CODE TESTVPUNPCKHDQM128XMM1->XMM2
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM1  XMM2  VPUNPCKHDQ,  
  XMM2  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpunpckhdqm128xmm1->xmm2 ( -- ) 
    ." testing  M128  XMM1  XMM2  VPUNPCKHDQ, "
    0102040503060908 OU128A CCO!   1112131415171816 OU128A 8 + CCO!
    2221232426252827 OU128B CCO!   3132353439383736 OU128B 8 + CCO!         
    0 OU128C CCO!   0 OU128C 8 + CCO!
    0 ['] TESTVPUNPCKHDQM128XMM1->XMM2 >BODY CALLPROC
    DROP  

    OU128C CCO@  3938373615171816 = IF
      ." 1st U64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st U64 " 3938373615171816 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 3132353411121314 = IF
      ." 2nd U64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd U64 " 3132353411121314 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpunpckhdqm128xmm1->xmm2


HEX
CODE TESTVPUNPCKHQDQM128XMM1->XMM2
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM1  XMM2  VPUNPCKHQDQ,  
  XMM2  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpunpckhqdqm128xmm1->xmm2 ( -- ) 
    ." testing  M128  XMM1  XMM2  VPUNPCKHQDQ, "
    0102040503060908 OU128A CCO!   1112131415171816 OU128A 8 + CCO!
    2221232426252827 OU128B CCO!   3132353439383736 OU128B 8 + CCO!         
    0 OU128C CCO!   0 OU128C 8 + CCO!
    0 ['] TESTVPUNPCKHQDQM128XMM1->XMM2 >BODY CALLPROC
    DROP  

    OU128C CCO@  1112131415171816 = IF
      ." 1st U64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st U64 " 1112131415171816 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 3132353439383736 = IF
      ." 2nd U64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd U64 " 3132353439383736 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpunpckhqdqm128xmm1->xmm2



HEX
CODE TESTVPUNPCKLBWM128XMM1->XMM2
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM1  XMM2  VPUNPCKLBW,  
  XMM2  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpunpcklbwm128xmm1->xmm2 ( -- ) 
    ." testing  M128  XMM1  XMM2  VPUNPCKLBW, "
    0102040503060908 OU128A CCO!   1112131415171816 OU128A 8 + CCO!
    2221232426252827 OU128B CCO!   3132353439383736 OU128B 8 + CCO!         
    0 OU128C CCO!   0 OU128C 8 + CCO!
    0 ['] TESTVPUNPCKLBWM128XMM1->XMM2 >BODY CALLPROC
    DROP  

    OU128C CCO@  2603250628092708 = IF
      ." 1st U64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st U64 "  2603250628092708 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 2201210223042405 = IF
      ." 2nd U64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd U64 " 2201210223042405 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpunpcklbwm128xmm1->xmm2



HEX
CODE TESTVPUNPCKLWDM128XMM1->XMM2
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM1  XMM2  VPUNPCKLWD,  
  XMM2  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpunpcklwdm128xmm1->xmm2 ( -- ) 
    ." testing  M128  XMM1  XMM2  VPUNPCKLWD, "
    0102040503060908 OU128A CCO!   1112131415171816 OU128A 8 + CCO!
    2221232426252827 OU128B CCO!   3132353439383736 OU128B 8 + CCO!         
    0 OU128C CCO!   0 OU128C 8 + CCO!
    0 ['] TESTVPUNPCKLWDM128XMM1->XMM2 >BODY CALLPROC
    DROP  

    OU128C CCO@ 2625030628270908 = IF
      ." 1st U64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st U64 " 2625030628270908 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 2221010223240405 = IF
      ." 2nd U64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd U64 " 2221010223240405 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpunpcklwdm128xmm1->xmm2



HEX
CODE TESTVPUNPCKLDQM128XMM1->XMM2
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM1  XMM2  VPUNPCKLDQ,  
  XMM2  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpunpckldqm128xmm1->xmm2 ( -- ) 
    ." testing  M128  XMM1  XMM2  VPUNPCKLDQ, "
    0102040503060908 OU128A CCO!   1112131415171816 OU128A 8 + CCO!
    2221232426252827 OU128B CCO!   3132353439383736 OU128B 8 + CCO!         
    0 OU128C CCO!   0 OU128C 8 + CCO!
    0 ['] TESTVPUNPCKLDQM128XMM1->XMM2 >BODY CALLPROC
    DROP  

    OU128C CCO@  2625282703060908 = IF
      ." 1st U64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st U64 " 2625282703060908 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 2221232401020405 = IF
      ." 2nd U64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd U64 " 2221232401020405 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpunpckldqm128xmm1->xmm2


HEX
CODE TESTVPUNPCKLQDQM128XMM1->XMM2
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM1  XMM2  VPUNPCKLQDQ,  
  XMM2  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpunpcklqdqm128xmm1->xmm2 ( -- ) 
    ." testing  M128  XMM1  XMM2  VPUNPCKLQDQ, "
    0102040503060908 OU128A CCO!   1112131415171816 OU128A 8 + CCO!
    2221232426252827 OU128B CCO!   3132353439383736 OU128B 8 + CCO!         
    0 OU128C CCO!   0 OU128C 8 + CCO!
    0 ['] TESTVPUNPCKLQDQM128XMM1->XMM2 >BODY CALLPROC
    DROP  

    OU128C CCO@  0102040503060908 = IF
      ." 1st U64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st U64 " 0102040503060908 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 2221232426252827 = IF
      ." 2nd U64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd U64 " 2221232426252827 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpunpcklqdqm128xmm1->xmm2


HEX
CODE TESTVPXORM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VPXOR,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvpxorm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VPXOR, "
8000000100000005 OU128A CCO!  FFFFFFFE80000000 OU128A 8 + CCO! 
00F0000000000F05 OU128B CCO!  800000007FFFFFFF OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVPXORM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ 80F0000100000F00 = IF
      ." 1st u64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u64 "  80F0000100000F00 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 7FFFFFFEFFFFFFFF = IF
      ." 2nd u64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd u64 " 7FFFFFFEFFFFFFFF U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpxorm128xmm0->xmm1


HEX
CODE TESTVRCPPSM128->XMM0
  OU128B [O]  XMM0  VRCPPS, 
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvrcppsm128->xmm0 ( -- ) 
    ." testing OM128 [O]  XMM0  VRCPPS, "
    FPS4.0 OU128B CCOU32!  FPS1.0 OU128B 4 + CCOU32!  FPS2.0 OU128B 8 + CCOU32!   FPS0.125 OU128B 0C + CCOU32!     
         0 OU128C CCO!                                     0 OU128C 8 + CCO!
    0 ['] TESTVRCPPSM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS0.25 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u32 "  FPS0.25 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS1.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS1.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS0.5 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS0.5 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS8.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS8.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

// This instruction returns approximate reciprocals, not the exact reciprocals
//  I checked the values by eye... but did not build them into this test because
//  I wasn't sure if they would be the same across all processors
// testvrcppsm128->xmm0  


HEX
CODE TESTVRCPSSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VRCPSS, 
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvrcpssm128xmm0->xmm1 ( -- ) 
    ." testing OM128 [O]  XMM0  XMM1  VRCPSS, "
    FPS3.0 OU128A CCOU32!  FPS5.0 OU128A 4 + CCOU32!  FPS9.0 OU128A 8 + CCOU32!   FPS0.5 OU128A 0C + CCOU32!
    FPS4.0 OU128B CCOU32!  FPS1.0 OU128B 4 + CCOU32!  FPS2.0 OU128B 8 + CCOU32!   FPS0.125 OU128B 0C + CCOU32!     
         0 OU128C CCO!                                     0 OU128C 8 + CCO!
    0 ['] TESTVRCPSSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS0.25 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u32 "  FPS0.25 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS5.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS5.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS9.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS9.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS0.5 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS0.5 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

// This instruction returns an approximate reciprocal, not an exact reciprocal
//  I checked the value by eye... but did not build it into this test because
//  I wasn't sure if it would be the same across all processors
// testvrcpssm128xmm0->xmm1 


HEX
CODE TESTVRSQRTPSM128->XMM1
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM1  VRSQRTPS,  
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvrsqrtpsm128->xmm1 ( -- ) 
    ." testing M128  XMM1  VRSQRTPS, "
    123456789ABCDEF7 OU128A CCO!                   1122334455667788 OU128A 8 + CCO!
              FPS4.0 OU128B CCOU32!   FPS1.0 OU128B 4 + CCOU32!   FPS0.25 OU128B 8 + CCOU32!   FPS4.0 OU128B 0C + CCOU32!        
                   0 OU128C CCO!                                  0 OU128C 8 + CCO!
    0 ['] TESTVRSQRTPSM128->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS0.5 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS0.5 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS1.0 = IF
      ." 2nd fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 2nd fp32 "  FPS1.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS2.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS2.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS0.5 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS0.5 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;


// testvrsqrtpsm128->xmm1
// since result is approximate the test doesn't work, I checked the result by eye


HEX
CODE TESTVRSQRTPSXMM0->XMM1
  OU128B [O]  XMM0  MOVDQA,
  XMM0  XMM1  VRSQRTPS,  
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvrsqrtpsxmm0->xmm1 ( -- ) 
    ." testing XMM0  XMM1  VRSQRTPS, "
    123456789ABCDEF7 OU128A CCO!                   1122334455667788 OU128A 8 + CCO!
              FPS4.0 OU128B CCOU32!   FPS1.0 OU128B 4 + CCOU32!   FPS0.25 OU128B 8 + CCOU32!   FPS4.0 OU128B 0C + CCOU32!        
                   0 OU128C CCO!                                  0 OU128C 8 + CCO!
    0 ['] TESTVRSQRTPSXMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS0.5 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS0.5 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS1.0 = IF
      ." 2nd fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 2nd fp32 "  FPS1.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS2.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS2.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS0.5 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS0.5 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;


// testvrsqrtpsxmm0->xmm1
// since result is approximate the test doesn't work, I checked the result by eye


HEX
CODE TESTVRSQRTSSM128XMM1->XMM2
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM1  XMM2  VRSQRTSS,  
  XMM2  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvrsqrtssm128xmm1->xmm2 ( -- ) 
    ." testing M128  XMM1  XMM2  VRSQRTSS, "
    123456789ABCDEF7 OU128A CCO!                   1122334455667788 OU128A 8 + CCO!
              FPS4.0 OU128B CCOU32!   FPS1.0 OU128B 4 + CCOU32!   FPS0.25 OU128B 8 + CCOU32!   FPS4.0 OU128B 0C + CCOU32!        
                   0 OU128C CCO!                                  0 OU128C 8 + CCO!
    0 ['] TESTVRSQRTSSM128XMM1->XMM2 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS0.5 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS0.5 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ 12345678 = IF
      ." 2nd fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 2nd fp32 "  12345678 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ 55667788 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " 55667788 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ 11223344 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  11223344 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;


// testvrsqrtssm128xmm1->xmm2
// since result is approximate the test doesn't work, I checked the result by eye


HEX
CODE TESVTRSQRTSSXMM0XMM1->XMM2
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  MOVDQA,
  XMM0  XMM1  XMM2  VRSQRTSS,  
  XMM2  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvrsqrtssxmm0xmm1->xmm2 ( -- ) 
    ." testing XMM0  XMM1  XMM2  VRSQRTSS, "
    123456789ABCDEF7 OU128A CCO!                   1122334455667788 OU128A 8 + CCO!
              FPS4.0 OU128B CCOU32!   FPS1.0 OU128B 4 + CCOU32!   FPS0.25 OU128B 8 + CCOU32!   FPS4.0 OU128B 0C + CCOU32!        
                   0 OU128C CCO!                                  0 OU128C 8 + CCO!
    0 ['] TESVTRSQRTSSXMM0XMM1->XMM2 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS0.5 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS0.5 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ 12345678 = IF
      ." 2nd fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 2nd fp32 "  12345678 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ 55667788 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " 55667788 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ 11223344 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  11223344 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

// testvrsqrtssxmm0xmm1->xmm2
// since result is approximate the test doesn't work, I checked the result by eye



HEX
CODE TESTVSHUFPDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  01 N  OU128B [O]  XMM0  XMM1  VSHUFPD, // 1 0 
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvshufpdm128xmm0->xmm1 ( -- ) 
    ." testing OM128 [O]  XMM0  XMM1  VSHUFPD, "
FPD1.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO! 
FPD3.0 OU128B CCO!  FPD4.0 OU128B 8 + CCO!     
     0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVSHUFPDM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCO@ FPD2.0 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  FPD2.0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ FPD3.0 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " FPD3.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvshufpdm128xmm0->xmm1


HEX
CODE TESTVSHUFPSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  47 N  OU128B [O]  XMM0  XMM1  VSHUFPS, // src 1 0 dest 1 3 (01 00 01 11)
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvshufpsm128xmm0->xmm1 ( -- ) 
    ." testing OM128 [O]  XMM0  XMM1  VSHUFPS, "
FPS1.0 OU128A CCOU32!  FPS5.0 OU128A 4 + CCOU32!  FPS2.0 OU128A 8 + CCOU32!   FPS3.0 OU128A 0C + CCOU32!
FPS4.0 OU128B CCOU32!  FPS9.0 OU128B 4 + CCOU32!  FPS6.0 OU128B 8 + CCOU32!   FPS8.0 OU128B 0C + CCOU32!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVSHUFPSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS3.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st u32 "  FPS3.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS5.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS5.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS4.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS4.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS9.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS9.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvshufpsm128xmm0->xmm1


HEX
CODE TESTSQRTPDM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  SQRTPD,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testsqrtpdm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VSQRTPD, "
    FPD1.0 OU128A CCO! FPD2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B CCO! FPD9.0 OU128B 8 + CCO!
         0 OU128C CCO!      0 OU128C 8 + CCO!
    0 ['] TESTSQRTPDM128->XMM0 >BODY CALLPROC
    DROP  
    OU128C CCO@ FPD2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD2.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD3.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD3.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testsqrtpdm128->xmm0


HEX
CODE TESTVSQRTPDM128->XMM9    // XMM9 uses REX
  OU128A [O]  XMM9  MOVDQA,
  OU128B [O]  XMM9  VSQRTPD,   
  XMM9  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvsqrtpdm128->xmm9 ( -- )
    ." testing OM128 [O]  XMM9  VSQRTPD, "
    FPD1.0 OU128A CCO!  FPD5.0 OU128A 8 + CCO!  
    FPD9.0 OU128B CCO!  FPD4.0 OU128B 8 + CCO!
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVSQRTPDM128->XMM9 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD3.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD2.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD2.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvsqrtpdm128->xmm9


HEX
CODE TESTVSQRTSDM64XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VSQRTSD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvsqrtsdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VSQRTSD, "
    FPD1.0 OU128A CCO!  FPD5.0 OU128A 8 + CCO!  
    FPD4.0 OU128B CCO!  FPD9.0 OU128B 8 + CCO!
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVSQRTSDM64XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD2.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD5.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD5.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvsqrtsdm128xmm0->xmm1


HEX
CODE TESTVSQRTPSM128->XMM0
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VSQRTPS,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvsqrtpsm128->xmm0 ( -- )
    ." testing OM128 [O]  XMM0  VSQRTPS, "
    FPS3.0 OU128A CCOU32!  FPS3.0 OU128A 4 + CCOU32!   FPS2.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32!  
    FPS1.0 OU128B CCOU32!  FPS4.0 OU128B 4 + CCOU32!   FPS9.0 OU128B 8 + CCOU32!  FPS4.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVSQRTPSM128->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS1.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS1.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS2.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS2.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS3.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS3.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS2.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS2.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvsqrtpsm128->xmm0


HEX
CODE TESTVSQRTSSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VSQRTSS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvsqrtssm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VSQRTSS, "
    FPS1.0 OU128A CCOU32!  FPS5.0 OU128A 4 + CCOU32!   FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32!  
    FPS4.0 OU128B CCOU32!  FPS1.0 OU128B 4 + CCOU32!   FPS1.0 OU128B 8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVSQRTSSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS2.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS2.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS5.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS5.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS3.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS3.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS4.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS4.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvsqrtssm128xmm0->xmm1


HEX
CODE TESTVSUBPDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VSUBPD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvsubpdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VSUBPD, "
    FPD5.0 OU128A CCO! FPD4.0 OU128A 8 + CCO!  
    FPD3.0 OU128B CCO! FPD1.0 OU128B 8 + CCO!
         0 OU128C CCO!      0 OU128C 8 + CCO!
    0 ['] TESTVSUBPDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
    OU128C CCO@ FPD2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD2.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD3.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD3.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvsubpdm128xmm0->xmm1


HEX
CODE TESTVSUBPDM128XMM9->XMM10    
  OU128A [O]  XMM9  MOVDQA,
  OU128B [O]  XMM9  XMM10  VSUBPD,   
  XMM10  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvsubpdm128xmm9->xmm10 ( -- )
    ." testing OM128 [O]  XMM9  XMM10  VSUBPD, "
    FPD5.0 OU128A CCO!  FPD6.0 OU128A 8 + CCO!  
    FPD2.0 OU128B CCO!  FPD4.0 OU128B 8 + CCO!
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVSUBPDM128XMM9->XMM10 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD3.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD2.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD2.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvsubpdm128xmm9->xmm10


HEX
CODE TESTVSUBSDM64XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VSUBSD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvsubsdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VSUBSD, "
    FPD5.0 OU128A CCO!  FPD5.0 OU128A 8 + CCO!  
    FPD3.0 OU128B CCO!  FPD9.0 OU128B 8 + CCO!
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVSUBSDM64XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD2.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD2.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD5.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD5.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvsubsdm128xmm0->xmm1


HEX
CODE TESTVSUBPSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VSUBPS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvsubpsm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VSUBPS, "
    FPS3.0 OU128A CCOU32!  FPS5.0 OU128A 4 + CCOU32!   FPS5.0 OU128A 8 + CCOU32!  FPS6.0 OU128A 0C + CCOU32!  
    FPS2.0 OU128B CCOU32!  FPS3.0 OU128B 4 + CCOU32!   FPS2.0 OU128B 8 + CCOU32!  FPS4.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVSUBPSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS1.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS1.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS2.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS2.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS3.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS3.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS2.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS2.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvsubpsm128xmm0->xmm1


HEX
CODE TESTVSUBSSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VSUBSS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvsubssm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VSUBSS, "
    FPS3.0 OU128A CCOU32!  FPS5.0 OU128A 4 + CCOU32!   FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32!  
    FPS1.0 OU128B CCOU32!  FPS1.0 OU128B 4 + CCOU32!   FPS1.0 OU128B 8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVSUBSSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS2.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS2.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS5.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS5.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS3.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS3.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS4.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS4.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvsubssm128xmm0->xmm1


HEX
CODE TESTVUCOMISDM->XMM0
  RAX RAX XOR,
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VUCOMISD,
  EQ IF,
    RAX DEC,
  THEN,
  RAX  OU128C [O]  MOV,
  RET,  
END-CODE
  
: testvucomisdm->xmm0 ( -- ) 
    ." testing  M  XMM0  UCOMISD, "

    FPD2.0  OU128A CCO!  FPD2.0 OU128A 8 + CCO!
    FPD-2.0 OU128B CCO!  FPD2.0 OU128B 8 + CCO!     
    0 OU128C CCO!   0 OU128C 8 + CCO!
    0 ['] TESTVUCOMISDM->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0 = IF
      ." 1st U64 <> case SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st U64 <> case " 0  U.  
      ." , got " OU128C CCO@ U.
    THEN


    FPD-2.0  OU128A CCO!  FPD2.0 OU128A 8 + CCO!
    FPD-2.0 OU128B CCO!  FPD2.0 OU128B 8 + CCO!     
    0 OU128C CCO!   0 OU128C 8 + CCO!
    0 ['] TESTVUCOMISDM->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0 <> IF
      ."  1st U64 = case SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U64 = case " 0  U.  
      ." , got " OU128C CCO@ U.
    THEN

    

    CR
;

testvucomisdm->xmm0


HEX
CODE TESTVUCOMISSM->XMM0
  RAX RAX XOR,
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  VUCOMISS,
  EQ IF,
    RAX DEC,
  THEN,
  RAX  OU128C [O]  MOV,
  RET,  
END-CODE
  
: testvucomissm->xmm0 ( -- ) 
    ." testing  M  XMM0  VUCOMISS, "

    FPS2.0  OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!
    FPS-2.0 OU128B CCOU32!  FPS2.0 OU128B 4 + CCOU32!     
    0 OU128C CCO!   0 OU128C 8 + CCO!
    0 ['] TESTVUCOMISSM->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0 = IF
      ." 1st U64 <> case SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st U64 <> case " 0  U.  
      ." , got " OU128C CCO@ U.
    THEN


    FPS-2.0 OU128A CCOU32!  FPD2.0 OU128A 4 + CCOU32!
    FPS-2.0 OU128B CCOU32!  FPD2.0 OU128B 4 + CCOU32!     
    0 OU128C CCO!   0 OU128C 8 + CCO!
    0 ['] TESTVUCOMISSM->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0 <> IF
      ."  1st U64 = case SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U64 = case " 0  U.  
      ." , got " OU128C CCO@ U.
    THEN

    

    CR
;

testvucomissm->xmm0


HEX
CODE TESTVUNPCKHPDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VUNPCKHPD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvunpckhpdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VUNPCKHPD, "
    FPD5.0 OU128A CCO! FPD4.0 OU128A 8 + CCO!  
    FPD3.0 OU128B CCO! FPD1.0 OU128B 8 + CCO!
         0 OU128C CCO!      0 OU128C 8 + CCO!
    0 ['] TESTVUNPCKHPDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
    OU128C CCO@ FPD4.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD4.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD1.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD1.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvunpckhpdm128xmm0->xmm1


HEX
CODE TESTVUNPCKHPDM128XMM9->XMM10    // XMM9 uses REX
  OU128A [O]  XMM9  MOVDQA,
  OU128B [O]  XMM9  XMM10  VUNPCKHPD,   
  XMM10  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvunpckhpdm128xmm9->xmm10 ( -- )
    ." testing OM128 [O]  XMM9  XMM10 VUNPCKHPD, "
    FPD5.0 OU128A CCO!  FPD6.0 OU128A 8 + CCO!  
    FPD2.0 OU128B CCO!  FPD4.0 OU128B 8 + CCO!
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVUNPCKHPDM128XMM9->XMM10 >BODY CALLPROC
    DROP  
     OU128C CCO@ FPD6.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD6.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD4.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD4.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvunpckhpdm128xmm9->xmm10



HEX
CODE TESTVUNPCKHPSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VUNPCKHPS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvunpckhpsm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VUNPCKHPS, "
    FPS3.0 OU128A CCOU32!  FPS5.0 OU128A 4 + CCOU32!   FPS5.0 OU128A 8 + CCOU32!  FPS6.0 OU128A 0C + CCOU32!  
    FPS2.0 OU128B CCOU32!  FPS8.0 OU128B 4 + CCOU32!   FPS1.0 OU128B 8 + CCOU32!  FPS4.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVUNPCKHPSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS5.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS5.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS1.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS1.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS6.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS6.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS4.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS4.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvunpckhpsm128xmm0->xmm1


HEX
CODE TESTVUNPCKLPDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VUNPCKLPD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvunpcklpdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VUNPCKLPD, "
    FPD5.0 OU128A CCO! FPD4.0 OU128A 8 + CCO!  
    FPD3.0 OU128B CCO! FPD1.0 OU128B 8 + CCO!
         0 OU128C CCO!      0 OU128C 8 + CCO!
    0 ['] TESTVUNPCKLPDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
    OU128C CCO@ FPD5.0 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FPD5.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD3.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD3.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvunpcklpdm128xmm0->xmm1


HEX
CODE TESTVUNPCKLPSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VUNPCKLPS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvunpcklpsm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VUNPCKLPS, "
    FPS3.0 OU128A CCOU32!  FPS5.0 OU128A 4 + CCOU32!   FPS5.0 OU128A 8 + CCOU32!  FPS6.0 OU128A 0C + CCOU32!  
    FPS2.0 OU128B CCOU32!  FPS8.0 OU128B 4 + CCOU32!   FPS2.0 OU128B 8 + CCOU32!  FPS4.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVUNPCKLPSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS3.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS3.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS2.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS2.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS5.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS5.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS8.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS8.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvunpcklpsm128xmm0->xmm1


HEX
CODE TESTVBROADCASTSSM32->XMM1
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM1  VBROADCASTSS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvbroadcastssm32->xmm1 ( -- )
    ." testing OU128B [O]  XMM1  VBROADCASTSS, "
    FPS3.0 OU128A CCOU32!  FPS5.0 OU128A 4 + CCOU32!   FPS5.0 OU128A 8 + CCOU32!  FPS6.0 OU128A 0C + CCOU32!  
    FPS2.0 OU128B CCOU32!  FPS8.0 OU128B 4 + CCOU32!   FPS2.0 OU128B 8 + CCOU32!  FPS4.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVBROADCASTSSM32->XMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS2.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS2.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS2.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS2.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS2.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS2.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS2.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS2.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvbroadcastssm32->xmm1


HEX
CODE TESTVBROADCASTSSM32->YMM1
  OU128A [O]  YMM1  MOVDQA,
  OU128B [O]  YMM1  VBROADCASTSS,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvbroadcastssm32->ymm1 ( -- )
    ." testing OU128B [O]  YMM1  VBROADCASTSS, "
    FPS3.0 OU128A CCOU32!  FPS5.0 OU128A 4 + CCOU32!   FPS5.0 OU128A 8 + CCOU32!  FPS6.0 OU128A 0C + CCOU32!  
    FPS2.0 OU128B CCOU32!  FPS8.0 OU128B 4 + CCOU32!   FPS2.0 OU128B 8 + CCOU32!  FPS4.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
         0 OU128C 10 + CCOU32!  0 OU128C 18 + CCOU32!
    0 ['] TESTVBROADCASTSSM32->YMM1 >BODY CALLPROC
    DROP  

    OU128C CCOU32@ FPS2.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS2.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    OU128C 4 + CCOU32@ FPS2.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS2.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    OU128C 8 + CCOU32@ FPS2.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS2.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    OU128C 0C + CCOU32@ FPS2.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS2.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    OU128C 10 + CCOU32@ FPS2.0 = IF
      ." 1st fp32 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp32 "  FPS2.0 U.  
      ." , got " OU128C 10 + CCOU32@ U.
    THEN

    OU128C 14 + CCOU32@ FPS2.0 = IF
      ." 2nd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp32 " FPS2.0 U.  
      ." , got " OU128C 14 + CCOU32@ U.
    THEN

    OU128C 18 + CCOU32@ FPS2.0 = IF
      ." 3rd fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd fp32 " FPS2.0 U.  
      ." , got " OU128C 18 + CCOU32@ U.
    THEN

    OU128C 1C + CCOU32@ FPS2.0 = IF
      ." 4th fp32 SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th fp32 " FPS2.0 U.  
      ." , got " OU128C 1C + CCOU32@ U.
    THEN

    CR
;

testvbroadcastssm32->ymm1


HEX
CODE TESTVBROADCASTSDM64->YMM1
  OU128A [O]  YMM1  MOVDQA,
  OU128B [O]  YMM1  VBROADCASTSD,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvbroadcastsdm64->ymm1 ( -- )
    ." testing OM128 [O]  YMM1  VBROADCASTSD, "
    FPD5.0 OU128A CCO! FPD4.0 OU128A 8 + CCO!  
    FPD3.0 OU128B CCO! FPD1.0 OU128B 8 + CCO!
         0 OU128C CCO!      0 OU128C 8 + CCO!
         0 OU128C 10 + CCO! 0 OU128C 18 + CCO!
    0 ['] TESTVBROADCASTSDM64->YMM1 >BODY CALLPROC
    DROP  
    OU128C CCO@ FPD3.0 = IF
     ." 1st quarter SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st quarter " FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD3.0 = IF
     ." 2nd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd quarter " FPD3.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    OU128C 10 + CCO@ FPD3.0 = IF
     ." 3rd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd quarter " FPD3.0 U.  
      ." , got " OU128C 10 + CCO@ U.
    THEN
    OU128C 18 + CCO@ FPD3.0 = IF
     ." 4th quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th quarter " FPD3.0 U.  
      ." , got " OU128C 18 + CCO@ U.
    THEN
    CR
;

testvbroadcastsdm64->ymm1


HEX
CODE TESTVBROADCASTSDXMM0->YMM1
  OU128B [O]  XMM0  MOVDQA,
  XMM0  YMM1  VBROADCASTSD,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvbroadcastsdxmm0->ymm1 ( -- )
    ." testing XMM0  YMM1  VBROADCASTSD, "
    FPD5.0 OU128A CCO! FPD4.0 OU128A 8 + CCO!  
    FPD3.0 OU128B CCO! FPD1.0 OU128B 8 + CCO!
         0 OU128C CCO!      0 OU128C 8 + CCO!
         0 OU128C 10 + CCO! 0 OU128C 18 + CCO!
    0 ['] TESTVBROADCASTSDXMM0->YMM1 >BODY CALLPROC
    DROP  
    OU128C CCO@ FPD3.0 = IF
     ." 1st quarter SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st quarter " FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD3.0 = IF
     ." 2nd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd quarter " FPD3.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    OU128C 10 + CCO@ FPD3.0 = IF
     ." 3rd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd quarter " FPD3.0 U.  
      ." , got " OU128C 10 + CCO@ U.
    THEN
    OU128C 18 + CCO@ FPD3.0 = IF
     ." 4th quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th quarter " FPD3.0 U.  
      ." , got " OU128C 18 + CCO@ U.
    THEN
    CR
;

testvbroadcastsdxmm0->ymm1

HEX
CODE TESTVBROADCASTSDM64->YMM1
  OU128A [O]  YMM1  MOVDQA,
  OU128B [O]  YMM1  VBROADCASTSD,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvbroadcastsdm64->ymm1 ( -- )
    ." testing OM128 [O]  YMM1  VBROADCASTSD, "
    FPD5.0 OU128A CCO! FPD4.0 OU128A 8 + CCO!  
    FPD3.0 OU128B CCO! FPD1.0 OU128B 8 + CCO!
         0 OU128C CCO!      0 OU128C 8 + CCO!
         0 OU128C 10 + CCO! 0 OU128C 18 + CCO!
    0 ['] TESTVBROADCASTSDM64->YMM1 >BODY CALLPROC
    DROP  
    OU128C CCO@ FPD3.0 = IF
     ." 1st quarter SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st quarter " FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD3.0 = IF
     ." 2nd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd quarter " FPD3.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    OU128C 10 + CCO@ FPD3.0 = IF
     ." 3rd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd quarter " FPD3.0 U.  
      ." , got " OU128C 10 + CCO@ U.
    THEN
    OU128C 18 + CCO@ FPD3.0 = IF
     ." 4th quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th quarter " FPD3.0 U.  
      ." , got " OU128C 18 + CCO@ U.
    THEN
    CR
;

testvbroadcastsdm64->ymm1


HEX
CODE TESTVBROADCASTSDYMM1<-M64
  OU128A [O]  YMM1  MOVDQA,
  YMM1  <-  OU128B [O]  VBROADCASTSD,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvbroadcastsdymm1<-m64 ( -- )
    ." testing YMM1  <-  OU128B [O]  VBROADCASTSD, "
    FPD5.0 OU128A CCO! FPD4.0 OU128A 8 + CCO!  
    FPD3.0 OU128B CCO! FPD1.0 OU128B 8 + CCO!
         0 OU128C CCO!      0 OU128C 8 + CCO!
         0 OU128C 10 + CCO! 0 OU128C 18 + CCO!
    0 ['] TESTVBROADCASTSDYMM1<-M64 >BODY CALLPROC
    DROP  
    OU128C CCO@ FPD3.0 = IF
     ." 1st quarter SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st quarter " FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD3.0 = IF
     ." 2nd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd quarter " FPD3.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    OU128C 10 + CCO@ FPD3.0 = IF
     ." 3rd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd quarter " FPD3.0 U.  
      ." , got " OU128C 10 + CCO@ U.
    THEN
    OU128C 18 + CCO@ FPD3.0 = IF
     ." 4th quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th quarter " FPD3.0 U.  
      ." , got " OU128C 18 + CCO@ U.
    THEN
    CR
;

testvbroadcastsdymm1<-m64


HEX
CODE TESTVCVTPH2PSM64->XMM1
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM1  VCVTPH2PS,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvcvtph2psm64->xmm1 ( -- )
    ." testing OU128B [O]  XMM1  VCVTPH2PS, "
         0 OU128A      CCO!         0 OU128A  8 + CCO!  
    FPH2.0 OU128B      CCOU16! FPH1.0 OU128B  2 + CCOU16!
    FPH8.0 OU128B  4 + CCOU16! FPH4.0 OU128B  6 + CCOU16!
    FPH1.0 OU128B  8 + CCOU16! FPH1.0 OU128B 0A + CCOU16!
    FPH8.0 OU128B 0C + CCOU16! FPH4.0 OU128B 0E + CCOU16!
         0 OU128C      CCO!         0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!         0 OU128C 18 + CCO!
    0 ['] TESTVCVTPH2PSM64->XMM1 >BODY CALLPROC DROP 
    CR 
    OU128C CCOU32@ FPS2.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS2.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    CR
    OU128C 4 + CCOU32@ FPS1.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS1.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    CR
    OU128C 8 + CCOU32@ FPS8.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS8.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    CR
    OU128C 0C + CCOU32@ FPS4.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS4.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
    OU128C 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128C 10 + CCO@ U.
    THEN
    CR
;

testvcvtph2psm64->xmm1


HEX
CODE TESTVFMADD132PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADD132PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmadd132pdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADD132PD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD3.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD2.0 OU128C      CCO!  FPD3.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFMADD132PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD8.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD8.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD5.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD5.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmadd132pdm128xmm0->xmm1


HEX
CODE TESTVFMADD213PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADD213PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmadd213pdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADD213PD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD2.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFMADD213PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD8.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD8.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD9.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD9.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmadd213pdm128xmm0->xmm1


HEX
CODE TESTVFMADD231PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADD231PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmadd231pdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADD231PD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD1.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFMADD231PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD9.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD9.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD6.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD6.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmadd231pdm128xmm0->xmm1


HEX
CODE TESTVFMADD132SDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADD132SD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmadd132sdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADD132SD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD3.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD2.0 OU128C      CCO!  FPD3.0 OU128C 8 + CCO!
         0 OU128D      CCO!       1 OU128D 8 + CCO!
         1 OU128D 10 + CCO!       1 OU128D 18 + CCO!

    0 ['] TESTVFMADD132SDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD8.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD8.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD3.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD3.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmadd132sdm128xmm0->xmm1


HEX
CODE TESTVFMADD213SDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADD213SD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmadd213sdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADD213SD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD2.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       1 OU128D 8 + CCO!
         1 OU128D 10 + CCO!       1 OU128D 18 + CCO!

    0 ['] TESTVFMADD213SDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD8.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD8.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD4.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD4.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmadd213sdm128xmm0->xmm1


HEX
CODE TESTVFMADD231SDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADD231SD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmadd231sdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADD231SD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD1.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       1 OU128D 8 + CCO!
         1 OU128D 10 + CCO!       1 OU128D 18 + CCO!

    0 ['] TESTVFMADD231SDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD9.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD9.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD4.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD4.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmadd231sdm128xmm0->xmm1


HEX
CODE TESTVFMADD132PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADD132PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmadd132psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADD132PS, "

    FPS2.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS3.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMADD132PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS8.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS8.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS6.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS6.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS4.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS4.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS6.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS6.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmadd132psm128xmm0->xmm1


HEX
CODE TESTVFMADD213PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADD213PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmadd213psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADD213PS, "

    FPS1.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS1.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMADD213PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS5.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS5.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS9.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS9.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS4.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS4.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS5.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS5.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmadd213psm128xmm0->xmm1


HEX
CODE TESTVFMADD231PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADD231PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmadd231psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADD231PS, "

    FPS1.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS2.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMADD231PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS5.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS5.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS6.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS6.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS4.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS4.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS8.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS8.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmadd231psm128xmm0->xmm1


HEX
CODE TESTVFMADD132SSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADD132SS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmadd132ssm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADD132SS, "

    FPS2.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS3.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMADD132SSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS8.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS8.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS4.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS4.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS1.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS3.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS3.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmadd132ssm128xmm0->xmm1


HEX
CODE TESTVFMADD213SSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADD213SS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmadd213ssm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADD213SS, "

    FPS1.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS1.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMADD213SSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS5.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS5.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS4.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS4.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS1.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS1.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS1.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmadd213ssm128xmm0->xmm1


HEX
CODE TESTVFMADD231SSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADD231SS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmadd231ssm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADD231SS, "

    FPS1.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS2.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMADD231SSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS5.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS5.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS4.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS4.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS1.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS2.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS2.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmadd231ssm128xmm0->xmm1


HEX
CODE TESTVFMADDSUB132PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADDSUB132PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmadd132subpdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADDSUB132PD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD3.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD2.0 OU128C      CCO!  FPD3.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFMADDSUB132PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD4.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD4.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD5.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD5.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmadd132subpdm128xmm0->xmm1


HEX
CODE TESTVFMADDSUB213PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADDSUB213PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmaddsub213pdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADDSUB213PD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD3.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD2.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFMADDSUB213PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD1.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD1.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD9.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD9.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmaddsub213pdm128xmm0->xmm1


HEX
CODE TESTVFMADDSUB231PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADDSUB231PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmaddsub231pdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADDSUB231PD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD3.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFMADDSUB231PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD5.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD5.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD6.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD6.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmaddsub231pdm128xmm0->xmm1


HEX
CODE TESTVFMADDSUB132PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADDSUB132PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmaddsub132psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADDSUB132PS, "

    FPS2.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS3.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMADDSUB132PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS4.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS4.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS6.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS6.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS2.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS2.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS9.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS9.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmaddsub132psm128xmm0->xmm1


HEX
CODE TESTVFMADDSUB213PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADDSUB213PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmaddsub213psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADDSUB213PS, "

    FPS1.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS4.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS5.0 OU128C  8 + CCOU32!  FPS1.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMADDSUB213PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS1.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS1.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS9.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS9.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS2.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS2.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS5.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS5.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmaddsub213psm128xmm0->xmm1


HEX
CODE TESTVFMADDSUB231PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMADDSUB231PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmaddsub231psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMADDSUB231PS, "

    FPS1.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS2.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMADDSUB231PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS1.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS1.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS6.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS6.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS2.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS2.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS8.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS8.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmaddsub231psm128xmm0->xmm1


HEX
CODE TESTVFMSUBADD132PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUBADD132PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsubadd132pdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUBADD132PD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD3.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD2.0 OU128C      CCO!  FPD3.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFMSUBADD132PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD8.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD8.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD1.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD1.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsubadd132pdm128xmm0->xmm1


HEX
CODE TESTVFMSUBADD213PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUBADD213PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsubadd213pdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUBADD213PD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD3.0 OU128B 8 + CCO!
    FPD2.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFMSUBADD213PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD8.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD8.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD5.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD5.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsubadd213pdm128xmm0->xmm1


HEX
CODE TESTVFMSUBADD231PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUBADD231PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsubadd231pdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUBADD231PD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD1.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFMSUBADD231PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD9.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD9.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD-2.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD-2.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsubadd231pdm128xmm0->xmm1



HEX
CODE TESTVFMSUBADD132PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUBADD132PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsubadd132psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUBADD132PS, "

    FPS2.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS1.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS5.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMSUBADD132PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS8.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS8.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS2.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS2.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS4.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS4.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS4.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS4.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsubadd132psm128xmm0->xmm1


HEX
CODE TESTVFMSUBADD213PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUBADD213PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsubadd213psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUBADD213PS, "

    FPS1.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS3.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS1.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMSUBADD213PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS5.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS5.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS5.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS5.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS4.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS4.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS1.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS1.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsubadd213psm128xmm0->xmm1


HEX
CODE TESTVFMSUBADD231PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUBADD231PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsubadd231psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUBADD231PS, "

    FPS1.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS2.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMSUBADD231PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS5.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS5.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS-2.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS-2.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS4.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS4.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS4.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS4.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsubadd231psm128xmm0->xmm1



HEX
CODE TESTVFMSUB132PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUB132PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsub132pdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUB132PD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD3.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD2.0 OU128C      CCO!  FPD3.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFMSUB132PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD4.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD4.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD1.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD1.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsub132pdm128xmm0->xmm1


HEX
CODE TESTVFMSUB213PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUB213PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsub213pdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUB213PD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD3.0 OU128C      CCO!  FPD5.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFMSUB213PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD2.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD2.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD9.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD9.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsub213pdm128xmm0->xmm1


HEX
CODE TESTVFMSUB231PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUB231PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsub231pdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUB231PD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD5.0 OU128B 8 + CCO!
    FPD3.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFMSUB231PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD5.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD5.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD6.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD6.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsub231pdm128xmm0->xmm1


HEX
CODE TESTVFMSUB132SDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUB132SD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsub132sdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUB132SD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD3.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD2.0 OU128C      CCO!  FPD3.0 OU128C 8 + CCO!
         0 OU128D      CCO!       1 OU128D 8 + CCO!
         1 OU128D 10 + CCO!       1 OU128D 18 + CCO!

    0 ['] TESTVFMSUB132SDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD4.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD4.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD3.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD3.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsub132sdm128xmm0->xmm1


HEX
CODE TESTVFMSUB213SDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUB213SD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsub213sdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUB213SD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD5.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       1 OU128D 8 + CCO!
         1 OU128D 10 + CCO!       1 OU128D 18 + CCO!

    0 ['] TESTVFMSUB213SDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD6.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD6.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD4.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD4.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsub213sdm128xmm0->xmm1


HEX
CODE TESTVFMSUB231SDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUB231SD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsub231sdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUB231SD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD3.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       1 OU128D 8 + CCO!
         1 OU128D 10 + CCO!       1 OU128D 18 + CCO!

    0 ['] TESTVFMSUB231SDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD5.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD5.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD4.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD4.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsub231sdm128xmm0->xmm1


HEX
CODE TESTVFMSUB132PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUB132PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsub132psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUB132PS, "

    FPS2.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS6.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMSUB132PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS4.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS4.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS2.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS2.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS2.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS2.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS3.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS3.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsub132psm128xmm0->xmm1


HEX
CODE TESTVFMSUB213PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUB213PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsub213psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUB213PS, "

    FPS1.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS3.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS5.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS1.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMSUB213PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS2.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS2.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS5.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS5.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS-2.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS-2.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS1.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS1.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsub213psm128xmm0->xmm1


HEX
CODE TESTVFMSUB231PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUB231PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsub231psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUB231PS, "

    FPS1.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS1.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS2.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMSUB231PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS1.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS1.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS1.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS1.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS2.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS2.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS4.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS4.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsub231psm128xmm0->xmm1


HEX
CODE TESTVFMSUB132SSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUB132SS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsub132ssm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUB132SS, "

    FPS2.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS3.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMSUB132SSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS4.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS4.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS4.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS4.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS1.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS3.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS3.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsub132ssm128xmm0->xmm1


HEX
CODE TESTVFMSUB213SSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUB213SS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsub213ssm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUB213SS, "

    FPS4.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS1.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMSUB213SSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS5.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS5.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS4.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS4.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS1.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS1.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS1.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsub213ssm128xmm0->xmm1


HEX
CODE TESTVFMSUB231SSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFMSUB231SS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfmsub231ssm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFMSUB231SS, "

    FPS1.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS2.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFMSUB231SSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS1.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS1.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS4.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS4.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS1.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS2.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS2.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfmsub231ssm128xmm0->xmm1


HEX
CODE TESTVFNMADD132PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMADD132PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmadd132pdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMADD132PD, "
    FPD2.0 OU128A      CCO!  FPD4.0 OU128A 8 + CCO!  
    FPD3.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD-2.0 OU128C      CCO!  FPD3.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFNMADD132PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD8.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD8.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD1.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD1.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmadd132pdm128xmm0->xmm1


HEX
CODE TESTVFNMADD213PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMADD213PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmadd213pdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMADD213PD, "
    FPD2.0 OU128A      CCO!  FPD-2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD3.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFNMADD213PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD-2.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD-2.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD9.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD9.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmadd213pdm128xmm0->xmm1


HEX
CODE TESTVFNMADD231PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMADD231PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmadd231pdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMADD231PD, "
    FPD-2.0 OU128A     CCO!  FPD-2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD1.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFNMADD231PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD9.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD9.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD6.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD6.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmadd231pdm128xmm0->xmm1


HEX
CODE TESTVFNMADD132SDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMADD132SD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmadd132sdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMADD132SD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD3.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD-2.0 OU128C     CCO!  FPD3.0 OU128C 8 + CCO!
         0 OU128D      CCO!       1 OU128D 8 + CCO!
         1 OU128D 10 + CCO!       1 OU128D 18 + CCO!

    0 ['] TESTVFNMADD132SDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD8.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD8.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD3.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD3.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmadd132sdm128xmm0->xmm1


HEX
CODE TESTVFNMADD213SDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMADD213SD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmadd213sdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMADD213SD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD-2.0 OU128C     CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       1 OU128D 8 + CCO!
         1 OU128D 10 + CCO!       1 OU128D 18 + CCO!

    0 ['] TESTVFNMADD213SDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD8.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD8.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD4.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD4.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmadd213sdm128xmm0->xmm1


HEX
CODE TESTVFNMADD231SDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMADD231SD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmadd231sdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMADD231SD, "
    FPD-2.0 OU128A     CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD1.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       1 OU128D 8 + CCO!
         1 OU128D 10 + CCO!       1 OU128D 18 + CCO!

    0 ['] TESTVFNMADD231SDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD9.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD9.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD4.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD4.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmadd231sdm128xmm0->xmm1


HEX
CODE TESTVFNMADD132PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMADD132PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmadd132psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMADD132PS, "

    FPS2.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS8.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!

    FPS-2.0 OU128C     CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS3.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFNMADD132PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS8.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS8.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS-2.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS-2.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS-2.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS-2.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS5.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS5.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmadd132psm128xmm0->xmm1


HEX
CODE TESTVFNMADD213PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMADD213PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmadd213psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMADD213PS, "

    FPS1.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS9.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS1.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFNMADD213PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS1.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS1.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS1.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS1.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS2.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS2.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS-2.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS-2.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmadd213psm128xmm0->xmm1


HEX
CODE TESTVFNMADD231PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMADD231PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmadd231psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMADD231PS, "

    FPS1.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS4.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS9.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFNMADD231PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS-2.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS-2.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS2.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS2.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS-2.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS-2.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS3.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS3.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmadd231psm128xmm0->xmm1


HEX
CODE TESTVFNMADD132SSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMADD132SS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmadd132ssm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMADD132SS, "

    FPS9.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS3.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFNMADD132SSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS3.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS3.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS4.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS4.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS1.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS3.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS3.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmadd132ssm128xmm0->xmm1


HEX
CODE TESTVFNMADD213SSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMADD213SS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmadd213ssm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMADD213SS, "

    FPS1.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS1.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFNMADD213SSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS1.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS1.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS4.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS4.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS1.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS1.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS1.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmadd213ssm128xmm0->xmm1


HEX
CODE TESTVFNMADD231SSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMADD231SS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmadd231ssm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMADD231SS, "

    FPS2.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS9.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS2.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFNMADD231SSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS3.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS3.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS4.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS4.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS1.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS2.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS2.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmadd231ssm128xmm0->xmm1


HEX
CODE TESTVFNMSUB132PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMSUB132PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmsub132pdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMSUB132PD, "
    FPD2.0 OU128A      CCO!  FPD3.0 OU128A 8 + CCO!  
    FPD3.0 OU128B      CCO!  FPD-2.0 OU128B 8 + CCO!
    FPD-2.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFNMSUB132PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD4.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD4.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD5.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD5.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmsub132pdm128xmm0->xmm1


HEX
CODE TESTVFNMSUB213PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMSUB213PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmsub213pdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMSUB213PD, "
    FPD-2.0 OU128A     CCO!  FPD-2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD3.0 OU128B 8 + CCO!
    FPD3.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFNMSUB213PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD2.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD2.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD5.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD5.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmsub213pdm128xmm0->xmm1


HEX
CODE TESTVFNMSUB231PDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMSUB231PD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmsub231pdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMSUB231PD, "
    FPD-2.0 OU128A     CCO!  FPD-2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD3.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVFNMSUB231PDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD5.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD5.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD-2.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD-2.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmsub231pdm128xmm0->xmm1


HEX
CODE TESTVFNMSUB132SDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMSUB132SD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmsub132sdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMSUB132SD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD3.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD-2.0 OU128C     CCO!  FPD3.0 OU128C 8 + CCO!
         0 OU128D      CCO!       1 OU128D 8 + CCO!
         1 OU128D 10 + CCO!       1 OU128D 18 + CCO!

    0 ['] TESTVFNMSUB132SDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD4.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD4.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD3.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD3.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmsub132sdm128xmm0->xmm1


HEX
CODE TESTVFNMSUB213SDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMSUB213SD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmsub213sdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMSUB213SD, "
    FPD2.0 OU128A      CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD3.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD-2.0 OU128C     CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       1 OU128D 8 + CCO!
         1 OU128D 10 + CCO!       1 OU128D 18 + CCO!

    0 ['] TESTVFNMSUB213SDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD1.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD1.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD4.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD4.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmsub213sdm128xmm0->xmm1


HEX
CODE TESTVFNMSUB231SDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMSUB231SD,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmsub231sdm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMSUB231SD, "
    FPD-2.0 OU128A     CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD4.0 OU128B      CCO!  FPD1.0 OU128B 8 + CCO!
    FPD5.0 OU128C      CCO!  FPD4.0 OU128C 8 + CCO!
         0 OU128D      CCO!       1 OU128D 8 + CCO!
         1 OU128D 10 + CCO!       1 OU128D 18 + CCO!

    0 ['] TESTVFNMSUB231SDM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FPD3.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD3.0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ FPD4.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD4.0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmsub231sdm128xmm0->xmm1


HEX
CODE TESTVFNMSUB132PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMSUB132PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmsub132psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMSUB132PS, "

    FPS2.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS-2.0 OU128B  4 + CCOU32!
    FPS-2.0 OU128B  8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!

    FPS-2.0 OU128C     CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS-2.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFNMSUB132PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS4.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS4.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS6.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS6.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS1.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS-2.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS-2.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmsub132psm128xmm0->xmm1


HEX
CODE TESTVFNMSUB213PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMSUB213PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmsub213psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMSUB213PS, "

    FPS5.0 OU128A      CCOU32!  FPS-2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32! 
 
    FPS4.0 OU128B      CCOU32!  FPS6.0 OU128B  4 + CCOU32!
    FPS1.0 OU128B  8 + CCOU32!  FPS3.0 OU128B 0C + CCOU32!

    FPS-2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS-2.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFNMSUB213PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS6.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS6.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS2.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS2.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS-2.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS-2.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS5.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS5.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmsub213psm128xmm0->xmm1


HEX
CODE TESTVFNMSUB231PSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMSUB231PS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmsub231psm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMSUB231PS, "

    FPS1.0 OU128A      CCOU32!  FPS-2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS4.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS1.0 OU128B  8 + CCOU32!  FPS-2.0 OU128B 0C + CCOU32!

    FPS-2.0 OU128C     CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS5.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFNMSUB231PSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS-2.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS-2.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS-2.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS-2.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS-2.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS-2.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS1.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS1.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmsub231psm128xmm0->xmm1


HEX
CODE TESTVFNMSUB132SSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMSUB132SS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmsub132ssm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMSUB132SS, "

    FPS3.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!

    FPS-2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS3.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFNMSUB132SSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS3.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS3.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS4.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS4.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS1.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS3.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS3.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmsub132ssm128xmm0->xmm1


HEX
CODE TESTVFNMSUB213SSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMSUB213SS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmsub213ssm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMSUB213SS, "

    FPS1.0 OU128A      CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS4.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS-2.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS1.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFNMSUB213SSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS-2.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS-2.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS4.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS4.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS1.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS1.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS1.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmsub213ssm128xmm0->xmm1


HEX
CODE TESTVFNMSUB231SSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128C [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  XMM1  VFNMSUB231SS,
  XMM1  OU128D [O]  MOVDQA,
  RET,  
END-CODE
  
: testvfnmsub231ssm128xmm0->xmm1 ( -- )
    ." testing OU128B [O]  XMM0  XMM1  VFNMSUB231SS, "

    FPS-2.0 OU128A     CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A  8 + CCOU32!  FPS3.0 OU128A 0C + CCOU32! 
 
    FPS3.0 OU128B      CCOU32!  FPS1.0 OU128B  4 + CCOU32!
    FPS3.0 OU128B  8 + CCOU32!  FPS2.0 OU128B 0C + CCOU32!

    FPS3.0 OU128C      CCOU32!  FPS4.0 OU128C  4 + CCOU32!
    FPS1.0 OU128C  8 + CCOU32!  FPS2.0 OU128C 0C + CCOU32!

         0 OU128D      CCO!          1 OU128D  8 + CCO!
         1 OU128D 10 + CCO!          1 OU128D 18 + CCO!

    0 ['] TESTVFNMSUB231SSM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCOU32@ FPS3.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS3.0 U.  
      ." , got " OU128D CCOU32@ U.
    THEN
    CR
    OU128D 4 + CCOU32@ FPS4.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS4.0 U.  
      ." , got " OU128D 4 + CCOU32@ U.
    THEN
    CR
    OU128D 8 + CCOU32@ FPS1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS1.0 U.  
      ." , got " OU128D 8 + CCOU32@ U.
    THEN
    CR
    OU128D 0C + CCOU32@ FPS2.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS2.0 U.  
      ." , got " OU128D 0C + CCOU32@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1 = IF
     ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 1 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
;

testvfnmsub231ssm128xmm0->xmm1


HEX
CODE TESTVINSERTF1280NM128YMM0->XMMY
  OU128A [O]  YMM0  VMOVDQA,
  OU128C [O]  YMM1  VMOVDQA,
  0 N OU128B [O]  YMM0  YMM1  VINSERTF128,
  YMM1  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvinsertf1280nm128ymm0->ymm1 ( -- )
    ." testing 0 N OU128B [O]  YMM0  YMM1  VINSERTF128, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    1                OU128C       CCO!                 1 OU128C  8 + CCO!
    1                OU128C  10 + CCO!                 1 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVINSERTF1280NM128YMM0->XMMY >BODY CALLPROC DROP

    CR  
    OU128D CCO@ F565758595051525 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " F565758595051525 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 6162636465666768 = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 6162636465666768 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1112131415161718 = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " 1112131415161718 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 2122232425262728 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 2122232425262728 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvinsertf1280nm128ymm0->ymm1


HEX
CODE TESTVINSERTF1281NM128YMM0->XMMY
  OU128A [O]  YMM0  VMOVDQA,
  OU128C [O]  YMM1  VMOVDQA,
  1 N OU128B [O]  YMM0  YMM1  VINSERTF128,
  YMM1  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvinsertf1281nm128ymm0->ymm1 ( -- )
    ." testing 1 N OU128B [O]  YMM0  YMM1  VINSERTF128, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    1                OU128C       CCO!                 1 OU128C  8 + CCO!
    1                OU128C  10 + CCO!                 1 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVINSERTF1281NM128YMM0->XMMY >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 4342444547484940 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " 4342444547484940 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 3132323449484746 = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 3132323449484746 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ F565758595051525 = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " F565758595051525 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 6162636465666768 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 6162636465666768 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvinsertf1281nm128ymm0->ymm1


HEX
CODE TESTVINSERTI1280NM128YMM0->XMMY
  OU128A [O]  YMM0  VMOVDQA,
  OU128C [O]  YMM1  VMOVDQA,
  0 N OU128B [O]  YMM0  YMM1  VINSERTI128,
  YMM1  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvinserti1280nm128ymm0->ymm1 ( -- )
    ." testing 0 N OU128B [O]  YMM0  YMM1  VINSERTI128, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    1                OU128C       CCO!                 1 OU128C  8 + CCO!
    1                OU128C  10 + CCO!                 1 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVINSERTI1280NM128YMM0->XMMY >BODY CALLPROC DROP

    CR  
    OU128D CCO@ F565758595051525 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " F565758595051525 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 6162636465666768 = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 6162636465666768 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1112131415161718 = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " 1112131415161718 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 2122232425262728 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 2122232425262728 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvinserti1280nm128ymm0->ymm1


HEX
CODE TESTVINSERTI1281NM128YMM0->XMM1
  OU128A [O]  YMM0  VMOVDQA,
  OU128C [O]  YMM1  VMOVDQA,
  1 N OU128B [O]  YMM0  YMM1  VINSERTI128,
  YMM1  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvinserti1281nm128ymm0->ymm1 ( -- )
    ." testing 1 N OU128B [O]  YMM0  YMM1  VINSERTI128, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    1                OU128C       CCO!                 1 OU128C  8 + CCO!
    1                OU128C  10 + CCO!                 1 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVINSERTI1281NM128YMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 4342444547484940 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " 4342444547484940 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 3132323449484746 = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 3132323449484746 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ F565758595051525 = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " F565758595051525 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 6162636465666768 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 6162636465666768 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvinserti1281nm128ymm0->ymm1


HEX
CODE TESTVINSERTI1281NXMM2YMM0->XMMY
  OU128A [O]  YMM0  VMOVDQA,
  OU128C [O]  YMM1  VMOVDQA,
  OU128B [O]  XMM2  MOVDQA,
  1 N  XMM2  YMM0  YMM1  VINSERTI128,
  YMM1  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvinserti1281nxmm2ymm0->ymm1 ( -- )
    ." testing 1 N  XMM2  YMM0  YMM1  VINSERTI128, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    1                OU128C       CCO!                 1 OU128C  8 + CCO!
    1                OU128C  10 + CCO!                 1 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVINSERTI1281NXMM2YMM0->XMMY >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 4342444547484940 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " 4342444547484940 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 3132323449484746 = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 3132323449484746 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ F565758595051525 = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " F565758595051525 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 6162636465666768 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 6162636465666768 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvinserti1281nxmm2ymm0->ymm1


HEX
CODE TESTVPBLENDD9NM128XMM0->XMM1
  OU128A [O]  XMM0  VMOVDQA,
  OU128C [O]  XMM1  VMOVDQA,
  9 N OU128B [O]  XMM0  XMM1  VPBLENDD,
  XMM1  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpblendd9nm128xmm0->xmm1 ( -- )
    ." testing 9 N OU128B [O]  XMM0  XMM1  VPBLENDD, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    1                OU128C       CCO!                 1 OU128C  8 + CCO!
    1                OU128C  10 + CCO!                 1 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPBLENDD9NM128XMM0->XMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 4342444595051525 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " 4342444595051525 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 6162636449484746 = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 6162636449484746 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 0 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 0 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpblendd9nm128xmm0->xmm1


HEX
CODE TESTVPBLENDD9NM128YMM0->YMM1
  OU128A [O]  YMM0  VMOVDQA,
  OU128C [O]  YMM1  VMOVDQA,
  39 N OU128B [O]  YMM0  YMM1  VPBLENDD,
  YMM1  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpblendd9nm128ymm0->ymm1 ( -- )
    ." testing 9 N OU128B [O]  YMM0  YMM1  VPBLENDD, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    1                OU128C       CCO!                 1 OU128C  8 + CCO!
    1                OU128C  10 + CCO!                 1 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPBLENDD9NM128YMM0->YMM1 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 4342444595051525 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " 4342444595051525 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 6162636449484746 = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 6162636449484746 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 7172737475767778 = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " 7172737475767778 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 2122232425262728 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 2122232425262728 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpblendd9nm128ymm0->ymm1


HEX
CODE TESTVPBROADCASTB->XMM0
  OU128A [O]  XMM0  VMOVDQA,
  OU128B [O]  XMM0  VPBROADCASTB,
  XMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpbroadcastb->xmm0 ( -- )
    ." testing OU128B [O]  XMM0  VPBROADCASTB, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    1                OU128C       CCO!                 1 OU128C  8 + CCO!
    1                OU128C  10 + CCO!                 1 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPBROADCASTB->XMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 2525252525252525 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " 2525252525252525 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 2525252525252525 = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 2525252525252525 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 0 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 0 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpbroadcastb->xmm0


HEX
CODE TESTVPBROADCASTW->XMM0
  OU128A [O]  XMM0  VMOVDQA,
  OU128B [O]  XMM0  VPBROADCASTW,
  XMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpbroadcastw->xmm0 ( -- )
    ." testing OU128B [O]  XMM0  VPBROADCASTW, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    1                OU128C       CCO!                 1 OU128C  8 + CCO!
    1                OU128C  10 + CCO!                 1 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPBROADCASTW->XMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 1525152515251525 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " 1525152515251525 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 1525152515251525 = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 1525152515251525 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 0 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 0 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpbroadcastw->xmm0


HEX
CODE TESTVPBROADCASTD->XMM0
  OU128A [O]  XMM0  VMOVDQA,
  OU128B [O]  XMM0  VPBROADCASTD,
  XMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpbroadcastd->xmm0 ( -- )
    ." testing OU128B [O]  XMM0  VPBROADCASTD, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    1                OU128C       CCO!                 1 OU128C  8 + CCO!
    1                OU128C  10 + CCO!                 1 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPBROADCASTD->XMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 9505152595051525 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " 9505152595051525 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 9505152595051525 = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 9505152595051525 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 0 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 0 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpbroadcastd->xmm0


HEX
CODE TESTVPBROADCASTQ->XMM0
  OU128A [O]  XMM0  VMOVDQA,
  OU128B [O]  XMM0  VPBROADCASTQ,
  XMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpbroadcastq->xmm0 ( -- )
    ." testing OU128B [O]  XMM0  VPBROADCASTQ, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    1                OU128C       CCO!                 1 OU128C  8 + CCO!
    1                OU128C  10 + CCO!                 1 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPBROADCASTQ->XMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ F565758595051525 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " F565758595051525 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ F565758595051525 = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " F565758595051525 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0 = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 0 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 0 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpbroadcastq->xmm0


HEX
CODE TESTVPBROADCASTI128M128->YMM0
  OU128A [O]  YMM0  VMOVDQA,
  OU128B [O]  YMM0  VPBROADCASTI128,
  YMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpbroadcasti128m128->ymm0 ( -- )
    ." testing OU128B [O]  YMM0  VPBROADCASTI128, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    1                OU128C       CCO!                 1 OU128C  8 + CCO!
    1                OU128C  10 + CCO!                 1 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPBROADCASTI128M128->YMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ F565758595051525 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " F565758595051525 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 6162636465666768 = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 6162636465666768 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ F565758595051525 = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " F565758595051525 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 6162636465666768 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 6162636465666768 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpbroadcasti128m128->ymm0


HEX
CODE TESTVPERMDM256YMM1->YMM0
  OU128C [O]  YMM1  VMOVDQA,  // mask
  OU128B [O]  YMM1  YMM0  VPERMD,
  YMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpermdm256ymm1->ymm0 ( -- )
    ." testing OU128B [O]  YMM1  YMM0  VPERMD, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    0000000100000003 OU128C       CCO!  0000000200000003 OU128C  8 + CCO!
    0000000100000001 OU128C  10 + CCO!  0000000300000004 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPERMDM256YMM1->YMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ F565758561626364 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " F565758561626364 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 6566676861626364 = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 6566676861626364 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ F5657585F5657585 = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " F5657585F5657585 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 6162636475767778 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 6162636475767778 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpermdm256ymm1->ymm0


HEX
CODE TESTVPERMPSM256YMM1->YMM0
  OU128C [O]  YMM1  VMOVDQA,  // mask
  OU128B [O]  YMM1  YMM0  VPERMPS,
  YMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpermpsm256ymm1->ymm0 ( -- )
    ." testing OU128B [O]  YMM1  YMM0  VPERMPS, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    0000000100000003 OU128C       CCO!  0000000200000003 OU128C  8 + CCO!
    0000000100000001 OU128C  10 + CCO!  0000000300000004 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPERMPSM256YMM1->YMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ F565758561626364 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " F565758561626364 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 6566676861626364 = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 6566676861626364 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ F5657585F5657585 = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " F5657585F5657585 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 6162636475767778 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 6162636475767778 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpermpsm256ymm1->ymm0


HEX
CODE TESTVPERMPD9FNM256->YMM0
  9F N  OU128B [O]  YMM0  VPERMPD,
  YMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpermpd9Fnm256->ymm0 ( -- )
    ." testing  9F N  OU128B [O]  YMM1  VPERMPD, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    0000000000000003 OU128C       CCO!  0000000000000003 OU128C  8 + CCO!
    0000000000000001 OU128C  10 + CCO!  0000000000000002 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPERMPD9FNM256->YMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 8182838485868788 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " 8182838485868788 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 8182838485868788 = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 8182838485868788 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 6162636465666768 = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " 6162636465666768 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 7172737475767778 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 7172737475767778 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpermpd9Fnm256->ymm0


HEX
CODE TESTVPERMQ9FNM256->YMM0
  9F N  OU128B [O]  YMM0  VPERMQ,
  YMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpermq9Fnm256->ymm0 ( -- )
    ." testing  9F N  OU128B [O]  YMM1  VPERMQ, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    0000000000000003 OU128C       CCO!  0000000000000003 OU128C  8 + CCO!
    0000000000000001 OU128C  10 + CCO!  0000000000000002 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPERMQ9FNM256->YMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 8182838485868788 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " 8182838485868788 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 8182838485868788 = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 8182838485868788 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 6162636465666768 = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " 6162636465666768 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 7172737475767778 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 7172737475767778 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpermq9Fnm256->ymm0


HEX
CODE TESTVPERM2I1289NM256->YMM0
  OU128A [O]  YMM1  VMOVDQA,
  21 N  OU128B [O]  YMM1  YMM0  VPERM2I128,
  YMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpermq2i1289nm256->ymm0 ( -- )
    ." testing  21 N  OU128B [O]  YMM1  VPERM2I128, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    0000000000000003 OU128C       CCO!  0000000000000003 OU128C  8 + CCO!
    0000000000000001 OU128C  10 + CCO!  0000000000000002 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPERM2I1289NM256->YMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 1112131415161718 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " 1112131415161718 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 2122232425262728  = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 2122232425262728 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ F565758595051525  = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " F565758595051525 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 6162636465666768 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 6162636465666768 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpermq2i1289nm256->ymm0


HEX
CODE TESTVPERM2F1289NM256->YMM0
  OU128A [O]  YMM1  VMOVDQA,
  21 N  OU128B [O]  YMM1  YMM0  VPERM2F128,
  YMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpermq2f1289nm256->ymm0 ( -- )
    ." testing  21 N  OU128B [O]  YMM1  VPERM2F128, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    0000000000000003 OU128C       CCO!  0000000000000003 OU128C  8 + CCO!
    0000000000000001 OU128C  10 + CCO!  0000000000000002 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPERM2F1289NM256->YMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 1112131415161718 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " 1112131415161718 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 2122232425262728  = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 2122232425262728 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ F565758595051525  = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " F565758595051525 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 6162636465666768 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 6162636465666768 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpermq2f1289nm256->ymm0


HEX
CODE TESTVPERM2F12844NYMM2YMM1->YMM0
  88 N  YMM2  YMM1  YMM0  VPERM2F128,
  YMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpermq2f12844nymm2ymm1->ymm0 ( -- )
    ." testing  88 N  YMM2  YMM1  YMM0  VPERM2F128, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    F565758595051525 OU128B       CCO!  6162636465666768 OU128B  8 + CCO!
    7172737475767778 OU128B  10 + CCO!  8182838485868788 OU128B 18 + CCO!

    0000000000000003 OU128C       CCO!  0000000000000003 OU128C  8 + CCO!
    0000000000000001 OU128C  10 + CCO!  0000000000000002 OU128C 18 + CCO!

         -1 OU128D      CCO!       -1 OU128D 8 + CCO!
         -1 OU128D 10 + CCO!       -1 OU128D 18 + CCO!

    0 ['] TESTVPERM2F12844NYMM2YMM1->YMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 0 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " 0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 0  = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 0 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 0  = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 0 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 0 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpermq2f12844nymm2ymm1->ymm0


HEX
CODE TESTVPSLLVDM256YMM1->YMM0
  OU128A [O]  YMM1  VMOVDQA,
  OU128B [O]  YMM1  YMM0  VPSLLVD,
  YMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpsllvdm256->ymm0 ( -- )
    ." testing  OU128B [O]  YMM1  YMM0  VPSLLVD, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    400000004 OU128B       CCO!  400000004 OU128B  8 + CCO!
    400000004 OU128B  10 + CCO!  800000004 OU128B 18 + CCO!

    0000000000000003 OU128C       CCO!  0000000000000003 OU128C  8 + CCO!
    0000000000000001 OU128C  10 + CCO!  0000000000000002 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPSLLVDM256YMM1->YMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 3424445074849400 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " 3424445074849400 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 1323234094847460  = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 1323234094847460 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1121314051617180  = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " 1121314051617180 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 2223240052627280 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 2223240052627280 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpsllvdm256->ymm0


HEX
CODE TESTVPSLLVQM256YMM1->YMM0
  OU128A [O]  YMM1  VMOVDQA,
  OU128B [O]  YMM1  YMM0  VPSLLVQ,
  YMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpsllvqm256->ymm0 ( -- )
    ." testing  OU128B [O]  YMM1  YMM0  VPSLLVQ, "

    4342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    4 OU128B       CCO!  4 OU128B  8 + CCO!
    4 OU128B  10 + CCO!  8 OU128B 18 + CCO!

    0000000000000003 OU128C       CCO!  0000000000000003 OU128C  8 + CCO!
    0000000000000001 OU128C  10 + CCO!  0000000000000002 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPSLLVQM256YMM1->YMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 3424445474849400 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " 3424445474849400 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 1323234494847460  = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 1323234494847460 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 1121314151617180  = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " 1121314151617180 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 2223242526272800 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 2223242526272800 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpsllvqm256->ymm0


HEX
CODE TESTVPSRAVDM256YMM1->YMM0
  OU128A [O]  YMM1  VMOVDQA,
  OU128B [O]  YMM1  YMM0  VPSRAVD,
  YMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpsravdm256->ymm0 ( -- )
    ." testing  OU128B [O]  YMM1  YMM0  VPSRAVD, "

    8342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    400000004 OU128B       CCO!  400000004 OU128B  8 + CCO!
    400000004 OU128B  10 + CCO!  800000008 OU128B 18 + CCO!

    0000000000000003 OU128C       CCO!  0000000000000003 OU128C  8 + CCO!
    0000000000000001 OU128C  10 + CCO!  0000000000000002 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPSRAVDM256YMM1->YMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ F834244404748494 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " F834244404748494 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 313232304948474  = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 313232304948474 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 111213101516171  = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " 111213101516171 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 21222300252627 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 21222300252627 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpsravdm256->ymm0


HEX
CODE TESTVPSRLVDM256YMM1->YMM0
  OU128A [O]  YMM1  VMOVDQA,
  OU128B [O]  YMM1  YMM0  VPSRLVD,
  YMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpsrlvdm256->ymm0 ( -- )
    ." testing  OU128B [O]  YMM1  YMM0  VPSRLVD, "

    8342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    400000004 OU128B       CCO!  400000004 OU128B  8 + CCO!
    400000004 OU128B  10 + CCO!  800000008 OU128B 18 + CCO!

    0000000000000003 OU128C       CCO!  0000000000000003 OU128C  8 + CCO!
    0000000000000001 OU128C  10 + CCO!  0000000000000002 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPSRLVDM256YMM1->YMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 834244404748494 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " 834244404748494 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 313232304948474  = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 313232304948474 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 111213101516171  = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " 111213101516171 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 21222300252627 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 21222300252627 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpsrlvdm256->ymm0


HEX
CODE TESTVPSRLVQM256YMM1->YMM0
  OU128A [O]  YMM1  VMOVDQA,
  OU128B [O]  YMM1  YMM0  VPSRLVQ,
  YMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpsrlvqm256->ymm0 ( -- )
    ." testing  OU128B [O]  YMM1  YMM0  VPSRLVQ, "

    8342444547484940 OU128A       CCO!  3132323449484746 OU128A  8 + CCO!
    1112131415161718 OU128A  10 + CCO!  2122232425262728 OU128A 18 + CCO!  

    4 OU128B       CCO!  4 OU128B  8 + CCO!
    4 OU128B  10 + CCO!  8 OU128B 18 + CCO!

    0000000000000003 OU128C       CCO!  0000000000000003 OU128C  8 + CCO!
    0000000000000001 OU128C  10 + CCO!  0000000000000002 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVPSRLVQM256YMM1->YMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 834244454748494 = IF
     ."  1st U128 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st U128 " 834244454748494 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
    OU128D 8 + CCO@ 313232344948474  = IF
     ."  2nd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd U128 " 313232344948474 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR
    OU128D 10 + CCO@ 111213141516171  = IF
     ."  3rd U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd U128 " 111213141516171 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR
    OU128D 18 + CCO@ 21222324252627 = IF
     ."  4th U128 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th U128 " 21222324252627 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
    CR
;

testvpsrlvqm256->ymm0


HEX
CODE TESTVTESTPDM256YMM0
  RAX RAX  XOR,
  OU128A [O]  YMM0  VMOVDQA,
  OU128B [O]  YMM0  VTESTPD,
  ZS IF,
    RAX DEC,
  THEN,
  RAX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testvtestpdm256ymm0 ( -- )
    ." testing  OU128B [O]  YMM0  VTESTPD, "

    8000000100000001 OU128A       CCO!  8000000100000001 OU128A  8 + CCO!
    0000000100000001 OU128A  10 + CCO!  0000000100000001 OU128A 18 + CCO!  

    0000000200000002 OU128B       CCO!  0000000100000001 OU128B  8 + CCO!
    8000000200000002 OU128B  10 + CCO!  0000000180000001 OU128B 18 + CCO!

    0000000000000003 OU128C       CCO!  0000000000000003 OU128C  8 + CCO!
    0000000000000001 OU128C  10 + CCO!  0000000000000002 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVTESTPDM256YMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FFFFFFFFFFFFFFFF = IF
     ."  1st ZS case SUCCESS! "
    ELSE
      ."  FAIL! Expected for ZS case " FFFFFFFFFFFFFFFF U.  
      ." , got " OU128D CCO@ U.
    THEN

    8000000020000002 OU128B CCO!

    0 ['] TESTVTESTPDM256YMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 0 = IF
     ."  1st NZ case SUCCESS! "
    ELSE
      ."  FAIL! Expected for NZ case " 0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
;

testvtestpdm256ymm0


HEX
CODE TESTVTESTPSM256YMM0
  RAX RAX  XOR,
  OU128A [O]  YMM0  VMOVDQA,
  OU128B [O]  YMM0  VTESTPS,
  ZS IF,
    RAX DEC,
  THEN,
  RAX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testvtestpsm256ymm0 ( -- )
    ." testing  OU128B [O]  YMM0  VTESTPS, "

    8000000080000001 OU128A       CCO!  8000000100000001 OU128A  8 + CCO!
    0000000100000001 OU128A  10 + CCO!  0000000100000001 OU128A 18 + CCO!  

    0000000200000002 OU128B       CCO!  0000000100000001 OU128B  8 + CCO!
    8000000200000002 OU128B  10 + CCO!  0000000180000001 OU128B 18 + CCO!

    0000000000000003 OU128C       CCO!  0000000000000003 OU128C  8 + CCO!
    0000000000000001 OU128C  10 + CCO!  0000000000000002 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVTESTPSM256YMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ FFFFFFFFFFFFFFFF = IF
     ."  1st ZS case SUCCESS! "
    ELSE
      ."  FAIL! Expected for ZS case " FFFFFFFFFFFFFFFF U.  
      ." , got " OU128D CCO@ U.
    THEN

    0000000080000002 OU128B CCO!

    0 ['] TESTVTESTPSM256YMM0 >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 0 = IF
     ."  1st NZ case SUCCESS! "
    ELSE
      ."  FAIL! Expected for NZ case " 0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
;

testvtestpsm256ymm0


HEX
CODE TESTVZEROALL
  OU128A [O]  YMM0  VMOVDQA,
  VZEROALL,
  YMM0  OU128A [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvzeroall ( -- )
    ." testing  VZEROALL, "

    8000000080000001 OU128A       CCO!  8000000100000001 OU128A  8 + CCO!
    0000000100000001 OU128A  10 + CCO!  0000000100000001 OU128A 18 + CCO!  

    0000000200000002 OU128B       CCO!  0000000100000001 OU128B  8 + CCO!
    8000000200000002 OU128B  10 + CCO!  0000000180000001 OU128B 18 + CCO!

    0000000000000003 OU128C       CCO!  0000000000000003 OU128C  8 + CCO!
    0000000000000001 OU128C  10 + CCO!  0000000000000002 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVZEROALL >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 0 = IF
     ."  SUCCESS! "
    ELSE
      ."  FAIL! Expected " 0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR
;

testvzeroall


HEX
CODE TESTVZEROUPPER
  OU128A [O]  YMM0  VMOVDQA,
  VZEROUPPER,
  YMM0  OU128D [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvzeroupper ( -- )
    ." testing  VZEROUPPER, "

    8000000080000001 OU128A       CCO!  8000000100000001 OU128A  8 + CCO!
    0000000100000001 OU128A  10 + CCO!  0000000100000001 OU128A 18 + CCO!  

    0000000200000002 OU128B       CCO!  0000000100000001 OU128B  8 + CCO!
    8000000200000002 OU128B  10 + CCO!  0000000180000001 OU128B 18 + CCO!

    0000000000000003 OU128C       CCO!  0000000000000003 OU128C  8 + CCO!
    0000000000000001 OU128C  10 + CCO!  0000000000000002 OU128C 18 + CCO!

         0 OU128D      CCO!       0 OU128D 8 + CCO!
         0 OU128D 10 + CCO!       0 OU128D 18 + CCO!

    0 ['] TESTVZEROUPPER >BODY CALLPROC DROP

    CR  
    OU128D CCO@ 8000000080000001 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected 1st quarter case " 8000000080000001 U.  
      ." , got " OU128D CCO@ U.
    THEN
    CR

    OU128D 8 + CCO@ 8000000100000001 = IF
     ."  2nd quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected 2nd quarter case " 8000000100000001 U.  
      ." , got " OU128D 8 + CCO@ U.
    THEN
    CR

    OU128D 10 + CCO@ 0 = IF
     ."  3rd quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected 3rd quarter case " 0 U.  
      ." , got " OU128D 10 + CCO@ U.
    THEN
    CR

    OU128D 18 + CCO@ 0 = IF
     ."  4th quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected 4th quarter case " 0 U.  
      ." , got " OU128D 18 + CCO@ U.
    THEN
;

testvzeroupper


HEX
CODE TESTVXORPDM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1  VXORPD,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvxorpdm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VXORPD, "
    FF00FF00FF00FF00 OU128A CCO!  FFFF0000FFFF0000 OU128A 8 + CCO!  
    FFFFFFFF00000000 OU128B CCO!  F00F0FF0F00F0FF0 OU128B 8 + CCO!
                     0 OU128C CCO!               0 OU128C 8 + CCO!
    0 ['] TESTVXORPDM128XMM0->XMM1 >BODY CALLPROC
    DROP  
     OU128C CCO@ 00FF00FFFF00FF00 = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " 00FF00FFFF00FF00 U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ 0FF00FF00FF00FF0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " 0FF00FF00FF00FF0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvxorpdm128xmm0->xmm1


HEX
CODE TESTVXORPSM128XMM0->XMM1
  OU128A [O]  XMM0  MOVDQA,
  OU128B [O]  XMM0  XMM1 VXORPS,
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvxorpsm128xmm0->xmm1 ( -- )
    ." testing OM128 [O]  XMM0  XMM1  VXORPS, "
    FPS1.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!   FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32!  
    FPS1.0 OU128B CCOU32!  FPS1.0 OU128B 4 + CCOU32!   FPS1.0 OU128B 8 + CCOU32!  FPS1.0 OU128B 0C + CCOU32!
         0 OU128C CCOU32!       0 OU128C 8 + CCOU32!
    0 ['] TESTVXORPSM128XMM0->XMM1 >BODY CALLPROC
    DROP  

    CR
    OU128C CCOU32@ FPS1.0 FPS1.0 XOR = IF
      ."  1st fp32 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st fp32 "  FPS1.0 FPS1.0 XOR U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    CR
    OU128C 4 + CCOU32@ FPS2.0 FPS1.0 XOR = IF
      ."  2nd fp32 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd fp32 " FPS2.0 FPS1.0 XOR U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    CR
    OU128C 8 + CCOU32@ FPS3.0 FPS1.0 XOR = IF
      ."  3rd fp32 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd fp32 " FPS3.0 FPS1.0 XOR U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    CR
    OU128C 0C + CCOU32@ FPS1.0 FPS4.0 XOR = IF
      ."  4th fp32 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th fp32 " FPS1.0 FPS4.0 XOR U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvxorpsm128xmm0->xmm1


HEX
CODE TESTMULXM64RDX->RAXRCX
  OU128A [O]  RDX  MOV,
  OU128B [O]  RAX  RCX  MULX,
  RAX  OU128C [O]  MOV,
  RCX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testmulxm64rdx->raxrcx ( -- )
    ." testing OU128B [O]  RAX  RCX  MULX, "
    
    1112131415161718  OU128A CCO!
    2122232425262728  OU128B CCO!
                   0  OU128C CCO!
                   0  OU128D CCO!

    0 ['] TESTMULXM64RDX->RAXRCX >BODY CALLPROC DROP  

    CR
    OU128C CCO@ 4D35E4578E8843C0 = IF
      ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half "  4D35E4578E8843C0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
    OU128D CCO@ 2359B3401033BAB = IF
      ."  hi half SUCCESS! "
    ELSE
      ."  FAIL! Expected for hi half "  2359B3401033BAB U.  
      ." , got " OU128D CCO@ U.
    THEN

    
    CR
;

testmulxm64rdx->raxrcx


HEX
CODE TESTMULXR8RDX->RAXRCX
  OU128A [O]  RDX  MOV,
  OU128B [O]  R8   MOV,
  R8  RAX  RCX  MULX,
  RAX  OU128C [O]  MOV,
  RCX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testmulxr8rdx->raxrcx ( -- )
    ." testing R8  RAX  RCX  MULX, "
    
    1112131415161718  OU128A CCO!
    2122232425262728  OU128B CCO!
                   0  OU128C CCO!
                   0  OU128D CCO!

    0 ['] TESTMULXR8RDX->RAXRCX >BODY CALLPROC DROP  

    CR
    OU128C CCO@ 4D35E4578E8843C0 = IF
      ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half "  4D35E4578E8843C0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
    OU128D CCO@ 2359B3401033BAB = IF
      ."  hi half SUCCESS! "
    ELSE
      ."  FAIL! Expected for hi half "  2359B3401033BAB U.  
      ." , got " OU128D CCO@ U.
    THEN

    
    CR
;

testmulxr8rdx->raxrcx


HEX
CODE TESTMULXM64EDX->EAXECX
  OU128A [O]  RDX  MOV,
  OU128B [O]  EAX  ECX  MULX,
  RAX  OU128C [O]  MOV,
  RCX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testmulxm64edx->eaxecx ( -- )
    ." testing OU128B [O]  EAX  ECX  MULX, "
    
    1112131415161718  OU128A CCO!
    2122232425262728  OU128B CCO!
                   0  OU128C CCO!
                   0  OU128D CCO!

    0 ['] TESTMULXM64EDX->EAXECX >BODY CALLPROC DROP  

    CR
    OU128C CCO@ 8E8843C0 = IF
      ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half "  8E8843C0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
    OU128D CCO@ 30F55D7 = IF
      ."  hi half SUCCESS! "
    ELSE
      ."  FAIL! Expected for hi half "  30F55D7 U.  
      ." , got " OU128D CCO@ U.
    THEN

    
    CR
;

testmulxm64edx->eaxecx


HEX
CODE TESTMULXRAXRCX<-M64RDX
  OU128A [O]  RDX  MOV,
  RCX  RAX  OU128B [O] <-  MULX,
  RAX  OU128C [O]  MOV,
  RCX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testmulxraxrcx<-m64rdx ( -- )
    ." testing RCX  RAX  OU128B [O] <-  MULX, "
    
    1112131415161718  OU128A CCO!
    2122232425262728  OU128B CCO!
                   0  OU128C CCO!
                   0  OU128D CCO!

    0 ['] TESTMULXRAXRCX<-M64RDX >BODY CALLPROC DROP  

    CR
    OU128C CCO@ 4D35E4578E8843C0 = IF
      ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half "  4D35E4578E8843C0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
    OU128D CCO@ 2359B3401033BAB = IF
      ."  hi half SUCCESS! "
    ELSE
      ."  FAIL! Expected for hi half "  2359B3401033BAB U.  
      ." , got " OU128D CCO@ U.
    THEN

    
    CR
;

testmulxraxrcx<-m64rdx


HEX
CODE TESTPDEPM64RAX->RCX
  OU128A [O]  RAX  MOV,
  OU128B [O]  RAX  RCX  PDEP,
  RCX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testpdepm64rax->rcx ( -- )
    ." testing OU128B [O]  RAX  RCX  PDEP, "
    
   45362718  OU128A CCO!
    F00FF0F  OU128B CCO!
          0  OU128C CCO!
          0  OU128D CCO!

    0 ['] TESTPDEPM64RAX->RCX >BODY CALLPROC DROP  

    CR
    OU128D CCO@ 2007108 = IF
      ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half "  2007108 U.  
      ." , got " OU128D CCO@ U.
    THEN
    
    CR
;

testpdepm64rax->rcx


HEX
CODE TESTPEXTM64RAX->RCX
  OU128A [O]  RAX  MOV,
  OU128B [O]  RAX  RCX  PEXT,
  RCX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testpextm64rax->rcx ( -- )
    ." testing OU128B [O]  RAX  RCX  PEXT, "
    
   45362718  OU128A CCO!
    F00FF0F  OU128B CCO!
          0  OU128C CCO!
          0  OU128D CCO!

    0 ['] TESTPEXTM64RAX->RCX >BODY CALLPROC DROP  

    CR
    OU128D CCO@ 5278 = IF
      ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half "  5278 U.  
      ." , got " OU128D CCO@ U.
    THEN
    
    CR
;

testpextm64rax->rcx


HEX
CODE TESTANDNM64RAX->RCX
  OU128A [O]  RAX  MOV,
  OU128B [O]  RAX  RCX  ANDN,
  RCX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testandnm64rax->rcx ( -- )
    ." testing OU128B [O]  RAX  RCX  ANDN, "
    
   F00F0FF0FF0000FF  OU128A CCO!
   123456789ABCDEF0  OU128B CCO!
          0  OU128C CCO!
          0  OU128D CCO!

    0 ['] TESTANDNM64RAX->RCX >BODY CALLPROC DROP  

    CR
    OU128D CCO@ 0230500800BCDE00 = IF
      ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half "  0230500800BCDE00 U.  
      ." , got " OU128D CCO@ U.
    THEN
    
    CR
;

testandnm64rax->rcx


HEX
CODE TESTANDNM64RAX->RCX
  OU128A [O]  RAX  MOV,
  OU128B [O]  RAX  RCX  ANDN,
  RCX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testandnm64rax->rcx ( -- )
    ." testing OU128B [O]  RAX  RCX  ANDN, "
    
   F00F0FF0FF0000FF  OU128A CCO!
   123456789ABCDEF0  OU128B CCO!
          0  OU128C CCO!
          0  OU128D CCO!

    0 ['] TESTANDNM64RAX->RCX >BODY CALLPROC DROP  

    CR
    OU128D CCO@ 0230500800BCDE00 = IF
      ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half "  0230500800BCDE00 U.  
      ." , got " OU128D CCO@ U.
    THEN
    
    CR
;

testandnm64rax->rcx


HEX
CODE TESTBZHIM64RAX->RCX
  OU128A [O]  RAX  MOV,
  RAX  OU128B [O]  RCX  BZHI,  
  RCX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testbzhim64rax->rcx ( -- )
    ." testing RAX  OU128B [O]  RCX  BZHI,  "
    
   14  OU128A CCO!
   123456789ABCDEF0  OU128B CCO!
          0  OU128C CCO!
          0  OU128D CCO!

    0 ['] TESTBZHIM64RAX->RCX >BODY CALLPROC DROP  

    CR
    OU128D CCO@ CDEF0 = IF
      ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half "  CDEF0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    
    CR
;

testbzhim64rax->rcx


HEX
CODE TESTBEXTRM64RAX->RCX
  OU128A [O]  RAX  MOV,
  RAX  OU128B [O]  RCX  BEXTR,  
  RCX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testbextrm64rax->rcx ( -- )
    ." testing RAX  OU128B [O]  RCX  BEXTR, "
    
   1808  OU128A CCO!
   123456789ABCDEF0  OU128B CCO!
          0  OU128C CCO!
          0  OU128D CCO!

    0 ['] TESTBEXTRM64RAX->RCX >BODY CALLPROC DROP  

    CR
    OU128D CCO@ 9ABCDE = IF
      ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half "  9ABCDE U.  
      ." , got " OU128D CCO@ U.
    THEN
    
    CR
;

testbextrm64rax->rcx


HEX
CODE TESTBLSIM64->RAX
  OU128B [O]  RAX  BLSI,  
  RAX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testblsim64->rax ( -- )
    ." testing OU128B [O]  RAX  BLSI, "
    
                  0  OU128A CCO!
   123456789ABCDEE0  OU128B CCO!
                  0  OU128C CCO!
                  0  OU128D CCO!

    0 ['] TESTBLSIM64->RAX >BODY CALLPROC DROP  

    CR
    OU128D CCO@ 20 = IF
      ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half "  20 U.  
      ." , got " OU128D CCO@ U.
    THEN
    
    CR
;

testblsim64->rax


HEX
CODE TESTBLSRM64->RAX
  OU128B [O]  RAX  BLSR,  
  RAX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testblsrm64->rax ( -- )
    ." testing OU128B [O]  RAX  BLSR, "
    
                  0  OU128A CCO!
   123456789ABCDEE0  OU128B CCO!
                  0  OU128C CCO!
                  0  OU128D CCO!

    0 ['] TESTBLSRM64->RAX >BODY CALLPROC DROP  

    CR
    OU128D CCO@ 123456789ABCDEC0 = IF
      ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half "  123456789ABCDEC0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    
    CR
;

testblsrm64->rax


HEX
CODE TESTBLSRRCX->RAX
  OU128B [O]  RCX  MOV,
  RCX  RAX  BLSR,  
  RAX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testblsrrcx->rax ( -- )
    ." testing RCX  RAX  BLSR, "
    
                  0  OU128A CCO!
   123456789ABCDEE0  OU128B CCO!
                  0  OU128C CCO!
                  0  OU128D CCO!

    0 ['] TESTBLSRRCX->RAX >BODY CALLPROC DROP  

    CR
    OU128D CCO@ 123456789ABCDEC0 = IF
      ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half "  123456789ABCDEC0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    
    CR
;

testblsrrcx->rax


HEX
CODE TESTBLSRM32->EAX
  RAX RAX XOR,
  RAX DEC,
  OU128B [O]  EAX  BLSR,  
  RAX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testblsrm32->eax ( -- )
    ." testing OU128B [O]  EAX  BLSR, "
    
                  0  OU128A CCO!
   123456789ABCDEE0  OU128B CCO!
                  0  OU128C CCO!
                  0  OU128D CCO!

    0 ['] TESTBLSRM32->EAX >BODY CALLPROC DROP  

    CR
    OU128D CCO@ 9ABCDEC0 = IF
      ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half "  9ABCDEC0 U.  
      ." , got " OU128D CCO@ U.
    THEN
    
    CR
;

testblsrm32->eax


HEX
CODE TESTBLSMSKM64->RAX
  OU128B [O]  RAX  BLSMSK,  
  RAX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testblsmskm64->rax ( -- )
    ." testing OU128B [O]  RAX  BLSMSK, "
    
                  0  OU128A CCO!
   123456789ABCDEE0  OU128B CCO!
                  0  OU128C CCO!
                  0  OU128D CCO!

    0 ['] TESTBLSMSKM64->RAX >BODY CALLPROC DROP  

    CR
    OU128D CCO@ 3F = IF
      ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half "  3F U.  
      ." , got " OU128D CCO@ U.
    THEN
    
    CR
;

testblsmskm64->rax


HEX
CODE TESTBLSMSKRAX<-M64
  RAX  OU128B [O]  <-  BLSMSK,  
  RAX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testblsmskrax<-m64 ( -- )
    ." testing RAX  OU128B [O]  <-  BLSMSK, "
    
                  0  OU128A CCO!
   123456789ABCDEE0  OU128B CCO!
                  0  OU128C CCO!
                  0  OU128D CCO!

    0 ['] TESTBLSMSKRAX<-M64 >BODY CALLPROC DROP  

    CR
    OU128D CCO@ 3F = IF
      ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half "  3F U.  
      ." , got " OU128D CCO@ U.
    THEN
    
    CR
;

testblsmskrax<-m64


HEX
CODE TESTTZCNTM64->RAX
  OU128B [O]  RAX  TZCNT,  
  RAX  OU128D [O]  MOV,
  RET,  
END-CODE
  
: testtzcntm64->rax ( -- )
    ." testing OU128B [O]  RAX  TZCNT, "
    
   0  OU128A CCO!
   123456789ABCD000  OU128B CCO!
          0  OU128C CCO!
          0  OU128D CCO!

    0 ['] TESTTZCNTM64->RAX >BODY CALLPROC DROP  

    CR
    OU128D CCO@ 0C = IF
      ."  SUCCESS! "
    ELSE
      ."  FAIL! Expected "  0C U.  
      ." , got " OU128D CCO@ U.
    THEN
    
    CR
;

testtzcntm64->rax


HEX
CODE TESTTZCNTRAX<-M64
  RAX  OU128B [O] <-  TZCNT,  
  OU128D [O]  RAX <-  MOV,
  RET,  
END-CODE
  
: testtzcntrax<-m64 ( -- )
    ." testing RAX  OU128B [O] <-  TZCNT, "
    
   0  OU128A CCO!
   123456789ABCD000  OU128B CCO!
          0  OU128C CCO!
          0  OU128D CCO!

    0 ['] TESTTZCNTRAX<-M64 >BODY CALLPROC DROP  

    CR
    OU128D CCO@ 0C = IF
      ."  SUCCESS! "
    ELSE
      ."  FAIL! Expected "  0C U.  
      ." , got " OU128D CCO@ U.
    THEN
    
    CR
;

testtzcntrax<-m64


HEX
CODE TESTVBLENDVPD1NinXMM5M128XMM0->XMM1
  OU128C [O]  XMM1  MOVDQA,
  OU128D [O]  XMM5  MOVDQA, 
  OU128A [O]  XMM0  MOVDQA,
  50 N  OU128B [O]  XMM0  XMM1  VBLENDVPD,   
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvblendvpd1ninxmm5m128xmm0->xmm1 ( -- )
    ." testing 1 N in XMM5 OU128B [O]  XMM0  XMM1  VBLENDVPD, "
    FPD1.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD3.0 OU128B CCO!  FPD4.0 OU128B 8 + CCO!
         0 OU128C CCO!       0 OU128C 8 + CCO!
    8000000000000000 OU128D CCO!       0 OU128D 8 + CCO!
    0 ['] TESTVBLENDVPD1NinXMM5M128XMM0->XMM1 >BODY CALLPROC DROP  

    CR
    OU128C CCO@ FPD3.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128C 8 + CCO@ FPD2.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD2.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvblendvpd1ninxmm5m128xmm0->xmm1


HEX
CODE TESTVBLENDVPD1NinXMM5M128XMM0->XMM1b
  OU128C [O]  XMM1  MOVDQA,
  OU128D [O]  XMM5  MOVDQA, 
  OU128A [O]  XMM0  MOVDQA,
  XMM5  OU128B [O]  XMM0  XMM1  VBLENDVPD,   
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvblendvpd1ninxmm5m128xmm0->xmm1b ( -- )
    ." testing 1 N in XMM5 OU128B [O]  XMM0  XMM1  VBLENDVPD, b"
    FPD1.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD3.0 OU128B CCO!  FPD4.0 OU128B 8 + CCO!
         0 OU128C CCO!       0 OU128C 8 + CCO!
    8000000000000000 OU128D CCO!       0 OU128D 8 + CCO!
    0 ['] TESTVBLENDVPD1NinXMM5M128XMM0->XMM1b >BODY CALLPROC DROP  

    CR
    OU128C CCO@ FPD3.0 = IF
     ."  lo half SUCCESS! "
    ELSE
      ."  FAIL! Expected for lo half " FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128C 8 + CCO@ FPD2.0 = IF
     ."  hi half SUCCESS!"
    ELSE
      ."  FAIL! Expected for hi half " FPD2.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvblendvpd1ninxmm5m128xmm0->xmm1b


HEX
CODE TESTVBLENDVPS1NinXMM5M128XMM0->XMM1 
  OU128C [O]  XMM1  MOVDQA,
  OU128D [O]  XMM5  MOVDQA,
  OU128A [O]  XMM0  MOVDQA,
  50 N  OU128B [O]  XMM0  XMM1  VBLENDVPS,   
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvblendvps1ninXMM5m128xmm0->xmm1 ( -- )
    ." testing 1 N inXMM5 OU128B [O]  XMM0  XMM1  VBLENDVPS, "
    FPS1.0 OU128A     CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS5.0 OU128A 8 + CCOU32!  FPS8.0 OU128A 0C + CCOU32!  
    FPS3.0 OU128B     CCOU32!  FPS4.0 OU128B  4 + CCOU32!
    FPS6.0 OU128B 8 + CCOU32!  FPS9.0 OU128B 0C + CCOU32!
         0 OU128C CCO!              0 OU128C 8 + CCO!
    80000000 OU128D CCO!              0 OU128D 8 + CCO!
    0 ['] TESTVBLENDVPS1NinXMM5M128XMM0->XMM1  >BODY CALLPROC DROP

    CR  
    OU128C CCOU32@ FPS3.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS3.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    CR
    OU128C 4 + CCOU32@ FPS2.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS2.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    CR
    OU128C 8 + CCOU32@ FPS5.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS5.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    CR
    OU128C 0C + CCOU32@ FPS8.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS8.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
;

testvblendvps1ninXMM5m128xmm0->xmm1


HEX
CODE TESTVBLENDVPS1NinXMM5M128XMM0->XMM1b 
  OU128C [O]  XMM1  MOVDQA,
  OU128D [O]  XMM5  MOVDQA,
  OU128A [O]  XMM0  MOVDQA,
  XMM5  OU128B [O]  XMM0  XMM1  VBLENDVPS,   
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvblendvps1ninXMM5m128xmm0->xmm1b ( -- )
    ." testing 1 N inXMM5 OU128B [O]  XMM0  XMM1  VBLENDVPS, b"
    FPS1.0 OU128A     CCOU32!  FPS2.0 OU128A  4 + CCOU32!
    FPS5.0 OU128A 8 + CCOU32!  FPS8.0 OU128A 0C + CCOU32!  
    FPS3.0 OU128B     CCOU32!  FPS4.0 OU128B  4 + CCOU32!
    FPS6.0 OU128B 8 + CCOU32!  FPS9.0 OU128B 0C + CCOU32!
         0 OU128C CCO!              0 OU128C 8 + CCO!
    80000000 OU128D CCO!              0 OU128D 8 + CCO!
    0 ['] TESTVBLENDVPS1NinXMM5M128XMM0->XMM1b  >BODY CALLPROC DROP

    CR  
    OU128C CCOU32@ FPS3.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS3.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    CR
    OU128C 4 + CCOU32@ FPS2.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS2.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    CR
    OU128C 8 + CCOU32@ FPS5.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS5.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    CR
    OU128C 0C + CCOU32@ FPS8.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPS8.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
;

testvblendvps1ninXMM5m128xmm0->xmm1b


HEX
CODE TESTVBROADCASTF128M128->YMM1
  OU128C [O]  YMM1  VMOVDQA,
  OU128B [O]  YMM1  VBROADCASTF128,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvbroadcastf128mf128->ymm1 ( -- )
    ." testing OM128 [O]  YMM1  VBROADCASTF128, "

    FPD5.0 OU128A      CCO! FPD4.0 OU128A  8 + CCO!
    FPD1.0 OU128A 10 + CCO! FPD2.0 OU128A 18 + CCO! 
 
    FPD3.0 OU128B      CCO! FPD1.0 OU128B  8 + CCO!
    FPD5.0 OU128B 10 + CCO! FPD8.0 OU128B 18 + CCO!

         0 OU128C CCO!      0 OU128C  8 + CCO!
         0 OU128C 10 + CCO! 0 OU128C 18 + CCO!

    0 ['] TESTVBROADCASTF128M128->YMM1 >BODY CALLPROC DROP
  
    CR
    OU128C CCO@ FPD3.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128C 8 + CCO@ FPD1.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPD1.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
    OU128C 10 + CCO@ FPD3.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPD3.0 U.  
      ." , got " OU128C 10 + CCO@ U.
    THEN
    CR
    OU128C 18 + CCO@ FPD1.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPD1.0 U.  
      ." , got " OU128C 18 + CCO@ U.
    THEN
    CR
;

testvbroadcastf128mf128->ymm1


HEX
CODE TESTVGATHERDPDXMM0VSIB->XMM1
  OU128A [O]  YMM0  VMOVDQA, // mask
  OU128B [O]  RAX   LEA,     // base reg
  OU128D [O]  YMM2  VMOVDQA, // index reg 
  OU128C [O]  YMM1  VMOVDQA, // pre destination
  XMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  XMM1  VGATHERDPD,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvgatherdpdxmm0vsib->xmm1 ( -- )
    ." testing XMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  XMM1  VGATHERDPD, "

    8000000000000000 OU128A      CCO! 8000000000000000 OU128A  8 + CCO!
    8000000000000000 OU128A 10 + CCO! 8000000000000000 OU128A 18 + CCO! 
 
    FPD3.0 OU128B      CCO! FPD1.0 OU128B  8 + CCO!
    FPD5.0 OU128B 10 + CCO! FPD8.0 OU128B 18 + CCO!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

        18 OU128D     CCOU32! 10 OU128D  4 + CCOU32!
         8 OU128D 8 + CCOU32!  0 OU128D 0C + CCOU32!

    0 ['] TESTVGATHERDPDXMM0VSIB->XMM1 >BODY CALLPROC DROP
  
    CR
    OU128C CCO@ FPD8.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPD8.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128C 8 + CCO@ FPD5.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPD5.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
    OU128C 10 + CCO@ 0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " 0 U.  
      ." , got " OU128C 10 + CCO@ U.
    THEN
    CR
    OU128C 18 + CCO@ 0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " 0 U.  
      ." , got " OU128C 18 + CCO@ U.
    THEN
    CR
;

testvgatherdpdxmm0vsib->xmm1


HEX
CODE TESTVGATHERDPDYMM0VSIB->YMM1
  OU128A [O]  YMM0  VMOVDQA, // mask
  OU128B [O]  RAX   LEA,     // base reg
  OU128D [O]  YMM2  VMOVDQA, // index reg 
  OU128C [O]  YMM1  VMOVDQA, // pre destination
  YMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VGATHERDPD,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvgatherdpdymm0vsib->ymm1 ( -- )
    ." testing YMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VGATHERDPD, "

    8000000000000000 OU128A      CCO! 8000000000000000 OU128A  8 + CCO!
    8000000000000000 OU128A 10 + CCO! 8000000000000000 OU128A 18 + CCO! 
 
    FPD3.0 OU128B      CCO! FPD1.0 OU128B  8 + CCO!
    FPD5.0 OU128B 10 + CCO! FPD8.0 OU128B 18 + CCO!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

        18 OU128D     CCOU32! 10 OU128D  4 + CCOU32!
         8 OU128D 8 + CCOU32!  0 OU128D 0C + CCOU32!

    0 ['] TESTVGATHERDPDYMM0VSIB->YMM1 >BODY CALLPROC DROP
  
    CR
    OU128C CCO@ FPD8.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPD8.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128C 8 + CCO@ FPD5.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPD5.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
    OU128C 10 + CCO@ FPD1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPD1.0 U.  
      ." , got " OU128C 10 + CCO@ U.
    THEN
    CR
    OU128C 18 + CCO@ FPD3.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPD3.0 U.  
      ." , got " OU128C 18 + CCO@ U.
    THEN
    CR
;

testvgatherdpdymm0vsib->ymm1


HEX
CODE TESTVGATHERDPDYMM0VSIBUSINGRBP->YMM1
  RBP PUSH,
  OU128A [O]  YMM0  VMOVDQA, // mask
  OU128B [O]  RBP   LEA,     // base reg
  OU128D [O]  YMM2  VMOVDQA, // index reg 
  OU128C [O]  YMM1  VMOVDQA, // pre destination
  YMM0  RBP SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VGATHERDPD,
  YMM1  OU128C [O]  VMOVDQA,
  RBP POP,
  RET,  
END-CODE
  
: testvgatherdpdymm0vsibusingrbp->ymm1 ( -- )
    ." testing YMM0  RBP SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VGATHERDPD, "

    8000000000000000 OU128A      CCO! 8000000000000000 OU128A  8 + CCO!
    8000000000000000 OU128A 10 + CCO! 8000000000000000 OU128A 18 + CCO! 
 
    FPD3.0 OU128B      CCO! FPD1.0 OU128B  8 + CCO!
    FPD5.0 OU128B 10 + CCO! FPD8.0 OU128B 18 + CCO!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

        18 OU128D     CCOU32! 10 OU128D  4 + CCOU32!
         8 OU128D 8 + CCOU32!  0 OU128D 0C + CCOU32!

    0 ['] TESTVGATHERDPDYMM0VSIBUSINGRBP->YMM1 >BODY CALLPROC DROP
  
    CR
    OU128C CCO@ FPD8.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPD8.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128C 8 + CCO@ FPD5.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPD5.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
    OU128C 10 + CCO@ FPD1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPD1.0 U.  
      ." , got " OU128C 10 + CCO@ U.
    THEN
    CR
    OU128C 18 + CCO@ FPD3.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPD3.0 U.  
      ." , got " OU128C 18 + CCO@ U.
    THEN
    CR
;

testvgatherdpdymm0vsibusingrbp->ymm1


HEX
CODE TESTVGATHERDPDYMM0VSIBUSINGR13->YMM1
  R13 PUSH,
  OU128A [O]  YMM0  VMOVDQA, // mask
  OU128B [O]  R13   LEA,     // base reg
  OU128D [O]  YMM2  VMOVDQA, // index reg 
  OU128C [O]  YMM1  VMOVDQA, // pre destination
  YMM0  R13 SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VGATHERDPD,
  YMM1  OU128C [O]  VMOVDQA,
  R13 POP,
  RET,  
END-CODE
  
: testvgatherdpdymm0vsibusingr13->ymm1 ( -- )
    ." testing YMM0  R13 SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VGATHERDPD, "

    8000000000000000 OU128A      CCO! 8000000000000000 OU128A  8 + CCO!
    8000000000000000 OU128A 10 + CCO! 8000000000000000 OU128A 18 + CCO! 
 
    FPD3.0 OU128B      CCO! FPD1.0 OU128B  8 + CCO!
    FPD5.0 OU128B 10 + CCO! FPD8.0 OU128B 18 + CCO!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

        18 OU128D     CCOU32! 10 OU128D  4 + CCOU32!
         8 OU128D 8 + CCOU32!  0 OU128D 0C + CCOU32!

    0 ['] TESTVGATHERDPDYMM0VSIBUSINGR13->YMM1 >BODY CALLPROC DROP
  
    CR
    OU128C CCO@ FPD8.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPD8.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128C 8 + CCO@ FPD5.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPD5.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
    OU128C 10 + CCO@ FPD1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPD1.0 U.  
      ." , got " OU128C 10 + CCO@ U.
    THEN
    CR
    OU128C 18 + CCO@ FPD3.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPD3.0 U.  
      ." , got " OU128C 18 + CCO@ U.
    THEN
    CR
;

testvgatherdpdymm0vsibusingr13->ymm1


HEX
CODE TESTVGATHERQPDYMM0VSIB->YMM1
  OU128A [O]  YMM0  VMOVDQA, // mask
  OU128B [O]  RAX   LEA,     // base reg
  OU128D [O]  YMM2  VMOVDQA, // index reg 
  OU128C [O]  YMM1  VMOVDQA, // pre destination
  YMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VGATHERQPD,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvgatherqpdymm0vsib->ymm1 ( -- )
    ." testing YMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VGATHERQPD, "

    8000000000000000 OU128A      CCO! 8000000000000000 OU128A  8 + CCO!
    8000000000000000 OU128A 10 + CCO! 8000000000000000 OU128A 18 + CCO! 
 
    FPD3.0 OU128B      CCO! FPD1.0 OU128B  8 + CCO!
    FPD5.0 OU128B 10 + CCO! FPD8.0 OU128B 18 + CCO!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

        18 OU128D      CCO!  10 OU128D  8 + CCO!
         8 OU128D 10 + CCO!   0 OU128D 18 + CCO!

    0 ['] TESTVGATHERQPDYMM0VSIB->YMM1 >BODY CALLPROC DROP
  
    CR
    OU128C CCO@ FPD8.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPD8.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128C 8 + CCO@ FPD5.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPD5.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
    OU128C 10 + CCO@ FPD1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPD1.0 U.  
      ." , got " OU128C 10 + CCO@ U.
    THEN
    CR
    OU128C 18 + CCO@ FPD3.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPD3.0 U.  
      ." , got " OU128C 18 + CCO@ U.
    THEN
    CR
;

testvgatherqpdymm0vsib->ymm1


HEX
CODE TESTVGATHERDPSYMM0VSIB->YMM1
  OU128A [O]  YMM0  VMOVDQA, // mask
  OU128B [O]  RAX   LEA,     // base reg
  OU128D [O]  YMM2  VMOVDQA, // index reg 
  OU128C [O]  YMM1  VMOVDQA, // pre destination
  YMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VGATHERDPS,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvgatherdpsymm0vsib->ymm1 ( -- )
    ." testing YMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VGATHERDPS, "

    8000000080000000 OU128A      CCO! 8000000080000000 OU128A  8 + CCO!
    8000000080000000 OU128A 10 + CCO! 8000000080000000 OU128A 18 + CCO! 
 
    FPS3.0 OU128B       CCOU32! FPS1.0 OU128B  4 + CCOU32!
    FPS5.0 OU128B  8  + CCOU32! FPS8.0 OU128B 0C + CCOU32!
    FPS2.0 OU128B 10  + CCOU32! FPS6.0 OU128B 14 + CCOU32!
    FPS4.0 OU128B 18  + CCOU32! FPS9.0 OU128B 1C + CCOU32!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

        0C OU128D      CCOU32!  8 OU128D  4 + CCOU32!
         4 OU128D  8 + CCOU32!  0 OU128D 0C + CCOU32!
        1C OU128D 10 + CCOU32! 14 OU128D 14 + CCOU32!
        18 OU128D 18 + CCOU32! 10 OU128D 1C + CCOU32!

    0 ['] TESTVGATHERDPSYMM0VSIB->YMM1 >BODY CALLPROC DROP
  
    CR
    OU128C CCOU32@ FPS8.0 = IF
     ."  1st eighth SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st eighth " FPS8.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    CR
    OU128C 4 + CCOU32@ FPS5.0 = IF
     ."  2nd eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd eighth " FPS5.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    CR
    OU128C 8 + CCOU32@ FPS1.0 = IF
     ."  3rd eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd eighth " FPS1.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    CR
    OU128C 0C + CCOU32@ FPS3.0 = IF
     ."  4th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th eighth " FPS3.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
    OU128C 10 + CCOU32@ FPS9.0 = IF
     ."  5th eighth SUCCESS! "
    ELSE
      ."  FAIL! Expected for 5th eighth " FPS9.0 U.  
      ." , got " OU128C 10 + CCOU32@ U.
    THEN
    CR
    OU128C 14 + CCOU32@ FPS6.0 = IF
     ."  6th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 6th eighth " FPS6.0 U.  
      ." , got " OU128C 14 + CCOU32@ U.
    THEN
    CR
    OU128C 18 + CCOU32@ FPS4.0 = IF
     ."  7th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 7th eighth " FPS4.0 U.  
      ." , got " OU128C 18 + CCOU32@ U.
    THEN
    CR
    OU128C 1C + CCOU32@ FPS2.0 = IF
     ."  8th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 8th eighth " FPS2.0 U.  
      ." , got " OU128C 1C + CCOU32@ U.
    THEN
    CR
;

testvgatherdpsymm0vsib->ymm1


HEX
CODE TESTVGATHERQPSYMM0VSIB->YMM1
  OU128A [O]  YMM0  VMOVDQA, // mask
  OU128B [O]  RAX   LEA,     // base reg
  OU128D [O]  YMM2  VMOVDQA, // index reg 
  OU128C [O]  YMM1  VMOVDQA, // pre destination
  YMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VGATHERQPS,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvgatherqpsymm0vsib->ymm1 ( -- )
    ." testing YMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VGATHERQPS, "

    8000000080000000 OU128A      CCO! 8000000080000000 OU128A  8 + CCO!
    8000000080000000 OU128A 10 + CCO! 8000000080000000 OU128A 18 + CCO! 
 
    FPS3.0 OU128B       CCOU32! FPS1.0 OU128B  4 + CCOU32!
    FPS5.0 OU128B  8  + CCOU32! FPS8.0 OU128B 0C + CCOU32!
    FPS2.0 OU128B 10  + CCOU32! FPS6.0 OU128B 14 + CCOU32!
    FPS4.0 OU128B 18  + CCOU32! FPS9.0 OU128B 1C + CCOU32!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

        0C OU128D      CCO!  8 OU128D  8 + CCO!
         4 OU128D 10 + CCO!  0 OU128D 18 + CCO!

    0 ['] TESTVGATHERQPSYMM0VSIB->YMM1 >BODY CALLPROC DROP
  
    CR
    OU128C CCOU32@ FPS8.0 = IF
     ."  1st eighth SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st eighth " FPS8.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    CR
    OU128C 4 + CCOU32@ FPS5.0 = IF
     ."  2nd eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd eighth " FPS5.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    CR
    OU128C 8 + CCOU32@ FPS1.0 = IF
     ."  3rd eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd eighth " FPS1.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    CR
    OU128C 0C + CCOU32@ FPS3.0 = IF
     ."  4th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th eighth " FPS3.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
    OU128C 10 + CCOU32@ 0 = IF
     ."  5th eighth SUCCESS! "
    ELSE
      ."  FAIL! Expected for 5th eighth " 0 U.  
      ." , got " OU128C 10 + CCOU32@ U.
    THEN
    CR
    OU128C 14 + CCOU32@ 0 = IF
     ."  6th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 6th eighth " 0 U.  
      ." , got " OU128C 14 + CCOU32@ U.
    THEN
    CR
    OU128C 18 + CCOU32@ 0 = IF
     ."  7th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 7th eighth " 0 U.  
      ." , got " OU128C 18 + CCOU32@ U.
    THEN
    CR
    OU128C 1C + CCOU32@ 0 = IF
     ."  8th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 8th eighth " 0 U.  
      ." , got " OU128C 1C + CCOU32@ U.
    THEN
    CR
;

testvgatherqpsymm0vsib->ymm1


HEX
CODE TESTVPGATHERDQYMM0VSIB->YMM1
  OU128A [O]  YMM0  VMOVDQA, // mask
  OU128B [O]  RAX   LEA,     // base reg
  OU128D [O]  YMM2  VMOVDQA, // index reg 
  OU128C [O]  YMM1  VMOVDQA, // pre destination
  YMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VPGATHERDQ,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpgatherdqymm0vsib->ymm1 ( -- )
    ." testing YMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VPGATHERDQ, "

    8000000000000000 OU128A      CCO! 8000000000000000 OU128A  8 + CCO!
    8000000000000000 OU128A 10 + CCO! 8000000000000000 OU128A 18 + CCO! 
 
    FPD3.0 OU128B      CCO! FPD1.0 OU128B  8 + CCO!
    FPD5.0 OU128B 10 + CCO! FPD8.0 OU128B 18 + CCO!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

        18 OU128D     CCOU32! 10 OU128D  4 + CCOU32!
         8 OU128D 8 + CCOU32!  0 OU128D 0C + CCOU32!

    0 ['] TESTVPGATHERDQYMM0VSIB->YMM1 >BODY CALLPROC DROP
  
    CR
    OU128C CCO@ FPD8.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPD8.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128C 8 + CCO@ FPD5.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPD5.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
    OU128C 10 + CCO@ FPD1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPD1.0 U.  
      ." , got " OU128C 10 + CCO@ U.
    THEN
    CR
    OU128C 18 + CCO@ FPD3.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPD3.0 U.  
      ." , got " OU128C 18 + CCO@ U.
    THEN
    CR
;

testvpgatherdqymm0vsib->ymm1


HEX
CODE TESTVPGATHERQQYMM0VSIB->YMM1
  OU128A [O]  YMM0  VMOVDQA, // mask
  OU128B [O]  RAX   LEA,     // base reg
  OU128D [O]  YMM2  VMOVDQA, // index reg 
  OU128C [O]  YMM1  VMOVDQA, // pre destination
  YMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VPGATHERQQ,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpgatherqqymm0vsib->ymm1 ( -- )
    ." testing YMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VPGATHERQQ, "

    8000000000000000 OU128A      CCO! 8000000000000000 OU128A  8 + CCO!
    8000000000000000 OU128A 10 + CCO! 8000000000000000 OU128A 18 + CCO! 
 
    FPD3.0 OU128B      CCO! FPD1.0 OU128B  8 + CCO!
    FPD5.0 OU128B 10 + CCO! FPD8.0 OU128B 18 + CCO!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

        18 OU128D      CCO!  10 OU128D  8 + CCO!
         8 OU128D 10 + CCO!   0 OU128D 18 + CCO!

    0 ['] TESTVPGATHERQQYMM0VSIB->YMM1 >BODY CALLPROC DROP
  
    CR
    OU128C CCO@ FPD8.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPD8.0 U.  
      ." , got " OU128C CCO@ U.
    THEN
    CR
    OU128C 8 + CCO@ FPD5.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPD5.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
    OU128C 10 + CCO@ FPD1.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPD1.0 U.  
      ." , got " OU128C 10 + CCO@ U.
    THEN
    CR
    OU128C 18 + CCO@ FPD3.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPD3.0 U.  
      ." , got " OU128C 18 + CCO@ U.
    THEN
    CR
;

testvpgatherqqymm0vsib->ymm1


HEX
CODE TESTVPGATHERDDYMM0VSIB->YMM1
  OU128A [O]  YMM0  VMOVDQA, // mask
  OU128B [O]  RAX   LEA,     // base reg
  OU128D [O]  YMM2  VMOVDQA, // index reg 
  OU128C [O]  YMM1  VMOVDQA, // pre destination
  YMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VPGATHERDD,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpgatherddymm0vsib->ymm1 ( -- )
    ." testing YMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VPGATHERDD, "

    8000000080000000 OU128A      CCO! 8000000080000000 OU128A  8 + CCO!
    8000000080000000 OU128A 10 + CCO! 8000000080000000 OU128A 18 + CCO! 
 
    FPS3.0 OU128B       CCOU32! FPS1.0 OU128B  4 + CCOU32!
    FPS5.0 OU128B  8  + CCOU32! FPS8.0 OU128B 0C + CCOU32!
    FPS2.0 OU128B 10  + CCOU32! FPS6.0 OU128B 14 + CCOU32!
    FPS4.0 OU128B 18  + CCOU32! FPS9.0 OU128B 1C + CCOU32!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

        0C OU128D      CCOU32!  8 OU128D  4 + CCOU32!
         4 OU128D  8 + CCOU32!  0 OU128D 0C + CCOU32!
        1C OU128D 10 + CCOU32! 14 OU128D 14 + CCOU32!
        18 OU128D 18 + CCOU32! 10 OU128D 1C + CCOU32!

    0 ['] TESTVPGATHERDDYMM0VSIB->YMM1 >BODY CALLPROC DROP
  
    CR
    OU128C CCOU32@ FPS8.0 = IF
     ."  1st eighth SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st eighth " FPS8.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    CR
    OU128C 4 + CCOU32@ FPS5.0 = IF
     ."  2nd eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd eighth " FPS5.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    CR
    OU128C 8 + CCOU32@ FPS1.0 = IF
     ."  3rd eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd eighth " FPS1.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    CR
    OU128C 0C + CCOU32@ FPS3.0 = IF
     ."  4th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th eighth " FPS3.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
    OU128C 10 + CCOU32@ FPS9.0 = IF
     ."  5th eighth SUCCESS! "
    ELSE
      ."  FAIL! Expected for 5th eighth " FPS9.0 U.  
      ." , got " OU128C 10 + CCOU32@ U.
    THEN
    CR
    OU128C 14 + CCOU32@ FPS6.0 = IF
     ."  6th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 6th eighth " FPS6.0 U.  
      ." , got " OU128C 14 + CCOU32@ U.
    THEN
    CR
    OU128C 18 + CCOU32@ FPS4.0 = IF
     ."  7th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 7th eighth " FPS4.0 U.  
      ." , got " OU128C 18 + CCOU32@ U.
    THEN
    CR
    OU128C 1C + CCOU32@ FPS2.0 = IF
     ."  8th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 8th eighth " FPS2.0 U.  
      ." , got " OU128C 1C + CCOU32@ U.
    THEN
    CR
;

testvpgatherddymm0vsib->ymm1


HEX
CODE TESTVPGATHERQDYMM0VSIB->YMM1
  OU128A [O]  YMM0  VMOVDQA, // mask
  OU128B [O]  RAX   LEA,     // base reg
  OU128D [O]  YMM2  VMOVDQA, // index reg 
  OU128C [O]  YMM1  VMOVDQA, // pre destination
  YMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VPGATHERQD,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpgatherqdymm0vsib->ymm1 ( -- )
    ." testing YMM0  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM1  VPGATHERQD, "

    8000000080000000 OU128A      CCO! 8000000080000000 OU128A  8 + CCO!
    8000000080000000 OU128A 10 + CCO! 8000000080000000 OU128A 18 + CCO! 
 
    FPS3.0 OU128B       CCOU32! FPS1.0 OU128B  4 + CCOU32!
    FPS5.0 OU128B  8  + CCOU32! FPS8.0 OU128B 0C + CCOU32!
    FPS2.0 OU128B 10  + CCOU32! FPS6.0 OU128B 14 + CCOU32!
    FPS4.0 OU128B 18  + CCOU32! FPS9.0 OU128B 1C + CCOU32!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

        0C OU128D      CCO!  8 OU128D  8 + CCO!
         4 OU128D 10 + CCO!  0 OU128D 18 + CCO!

    0 ['] TESTVPGATHERQDYMM0VSIB->YMM1 >BODY CALLPROC DROP
  
    CR
    OU128C CCOU32@ FPS8.0 = IF
     ."  1st eighth SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st eighth " FPS8.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    CR
    OU128C 4 + CCOU32@ FPS5.0 = IF
     ."  2nd eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd eighth " FPS5.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    CR
    OU128C 8 + CCOU32@ FPS1.0 = IF
     ."  3rd eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd eighth " FPS1.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    CR
    OU128C 0C + CCOU32@ FPS3.0 = IF
     ."  4th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th eighth " FPS3.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
    OU128C 10 + CCOU32@ 0 = IF
     ."  5th eighth SUCCESS! "
    ELSE
      ."  FAIL! Expected for 5th eighth " 0 U.  
      ." , got " OU128C 10 + CCOU32@ U.
    THEN
    CR
    OU128C 14 + CCOU32@ 0 = IF
     ."  6th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 6th eighth " 0 U.  
      ." , got " OU128C 14 + CCOU32@ U.
    THEN
    CR
    OU128C 18 + CCOU32@ 0 = IF
     ."  7th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 7th eighth " 0 U.  
      ." , got " OU128C 18 + CCOU32@ U.
    THEN
    CR
    OU128C 1C + CCOU32@ 0 = IF
     ."  8th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 8th eighth " 0 U.  
      ." , got " OU128C 1C + CCOU32@ U.
    THEN
    CR
;

testvpgatherqdymm0vsib->ymm1


HEX
CODE TESTVPGATHERQDYMM1<-VSIBYMM0
  OU128A [O]  YMM0  VMOVDQA, // mask
  OU128B [O]  RAX   LEA,     // base reg
  OU128D [O]  YMM2  VMOVDQA, // index reg 
  OU128C [O]  YMM1  VMOVDQA, // pre destination
  YMM1 <-  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM0  VPGATHERQD,
  YMM1  OU128C [O]  VMOVDQA,
  YMM0  OU128A [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpgatherqdymm1<-vsibymm0 ( -- )
    ." testing YMM1 <-  RAX SCALE1* YMM2 0 [R+S*YMMR+N]  YMM0  VPGATHERQD, "

    8000000080000000 OU128A      CCO! 8000000080000000 OU128A  8 + CCO!
    8000000080000000 OU128A 10 + CCO! 8000000080000000 OU128A 18 + CCO! 
 
    FPS3.0 OU128B       CCOU32! FPS1.0 OU128B  4 + CCOU32!
    FPS5.0 OU128B  8  + CCOU32! FPS8.0 OU128B 0C + CCOU32!
    FPS2.0 OU128B 10  + CCOU32! FPS6.0 OU128B 14 + CCOU32!
    FPS4.0 OU128B 18  + CCOU32! FPS9.0 OU128B 1C + CCOU32!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

        0C OU128D      CCO!  8 OU128D  8 + CCO!
         4 OU128D 10 + CCO!  0 OU128D 18 + CCO!

    0 ['] TESTVPGATHERQDYMM1<-VSIBYMM0 >BODY CALLPROC DROP

    CR
    OU128A CCO@ 0 = IF
     ."  1st mask quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st mask quarter " 0 U.  
      ." , got " OU128A CCO@ U.
    THEN
    CR
    OU128A 8 + CCO@ 0 = IF
     ."  2nd mask quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 2nd mask quarter " 0 U.  
      ." , got " OU128A 8 + CCO@ U.
    THEN
    CR
    OU128A 10 + CCO@ 0 = IF
     ."  3rd mask quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 3rd mask quarter " 0 U.  
      ." , got " OU128A 10 + CCO@ U.
    THEN
    CR
    OU128A 18 + CCO@ 0 = IF
     ."  4th mask quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 4th mask quarter " 0 U.  
      ." , got " OU128A 18 + CCO@ U.
    THEN
  
    CR
    OU128C CCOU32@ FPS8.0 = IF
     ."  1st eighth SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st eighth " FPS8.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    CR
    OU128C 4 + CCOU32@ FPS5.0 = IF
     ."  2nd eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd eighth " FPS5.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    CR
    OU128C 8 + CCOU32@ FPS1.0 = IF
     ."  3rd eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd eighth " FPS1.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    CR
    OU128C 0C + CCOU32@ FPS3.0 = IF
     ."  4th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th eighth " FPS3.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
    OU128C 10 + CCOU32@ 0 = IF
     ."  5th eighth SUCCESS! "
    ELSE
      ."  FAIL! Expected for 5th eighth " 0 U.  
      ." , got " OU128C 10 + CCOU32@ U.
    THEN
    CR
    OU128C 14 + CCOU32@ 0 = IF
     ."  6th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 6th eighth " 0 U.  
      ." , got " OU128C 14 + CCOU32@ U.
    THEN
    CR
    OU128C 18 + CCOU32@ 0 = IF
     ."  7th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 7th eighth " 0 U.  
      ." , got " OU128C 18 + CCOU32@ U.
    THEN
    CR
    OU128C 1C + CCOU32@ 0 = IF
     ."  8th eighth SUCCESS!"
    ELSE
      ."  FAIL! Expected for 8th eighth " 0 U.  
      ." , got " OU128C 1C + CCOU32@ U.
    THEN
    CR
;

testvpgatherqdymm1<-vsibymm0


HEX
CODE TESTVPERMILPDM128XMM1->XMM0
  OU128B [O]  XMM1  VMOVDQA,     // source
  OU128C [O]  XMM0  VMOVDQA,     // pre destination
  OU128A [O]  XMM1  XMM0  VPERMILPD,
  XMM0  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpermilpdm128xmm1->xmm0 ( -- )
    ." testing OU128A [O]  XMM1  XMM0  VPERMILPD, "

         2 OU128A      CCO! 0 OU128A  8 + CCO!
         0 OU128A 10 + CCO! 0 OU128A 18 + CCO! 
 
    0102030405060708 OU128B  0 +  CCO!    1112131415161718 OU128B  8 + CCO!
    FPD2.0 OU128B 10  + CCO!    FPD6.0 OU128B 18 + CCO!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

         0 OU128D      CCO!  0 OU128D  8 + CCO!
         0 OU128D 10 + CCO!  0 OU128D 18 + CCO!

    0 ['] TESTVPERMILPDM128XMM1->XMM0 >BODY CALLPROC DROP
  
    CR
    OU128C CCO@ 1112131415161718 = IF
     ."  1st half SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st half " 1112131415161718 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
    OU128C 8 + CCO@ 0102030405060708 = IF
     ."  2nd half SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd half " 0102030405060708 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpermilpdm128xmm1->xmm0


HEX
CODE TESTVPERMILPDXMM2XMM1->XMM0
  OU128B [O]  XMM1  VMOVDQA,     // source
  OU128C [O]  XMM0  VMOVDQA,     // pre destination
  OU128A [O]  XMM2  VMOVDQA,
  XMM2  XMM1  XMM0  VPERMILPD,
  XMM0  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpermilpdxmm2xmm1->xmm0 ( -- )
    ." testing XMM2  XMM1  XMM0  VPERMILPD, "

         2 OU128A      CCO! 0 OU128A  8 + CCO!
         0 OU128A 10 + CCO! 0 OU128A 18 + CCO! 
 
    0102030405060708 OU128B  0 +  CCO!    1112131415161718 OU128B  8 + CCO!
    FPD2.0 OU128B 10  + CCO!    FPD6.0 OU128B 18 + CCO!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

         0 OU128D      CCO!  0 OU128D  8 + CCO!
         0 OU128D 10 + CCO!  0 OU128D 18 + CCO!

    0 ['] TESTVPERMILPDXMM2XMM1->XMM0 >BODY CALLPROC DROP
  
    CR
    OU128C CCO@ 1112131415161718 = IF
     ."  1st half SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st half " 1112131415161718 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
    OU128C 8 + CCO@ 0102030405060708 = IF
     ."  2nd half SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd half " 0102030405060708 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpermilpdxmm2xmm1->xmm0

HEX
CODE TESTVPERMILPDYMM2YMM1->YMM0
  OU128B [O]  YMM1  VMOVDQA,     // source
  OU128C [O]  YMM0  VMOVDQA,     // pre destination
  OU128A [O]  YMM2  VMOVDQA,
  YMM2  YMM1  YMM0  VPERMILPD,
  YMM0  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpermilpdymm2ymm1->ymm0 ( -- )
    ." testing YMM2  YMM1  YMM0  VPERMILPD, "

         2 OU128A      CCO! 0 OU128A  8 + CCO!
         2 OU128A 10 + CCO! 0 OU128A 18 + CCO! 
 
    0102030405060708 OU128B  0 +  CCO!    1112131415161718 OU128B  8 + CCO!
    FPD2.0 OU128B 10  + CCO!    FPD6.0 OU128B 18 + CCO!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

         0 OU128D      CCO!  0 OU128D  8 + CCO!
         0 OU128D 10 + CCO!  0 OU128D 18 + CCO!

    0 ['] TESTVPERMILPDYMM2YMM1->YMM0 >BODY CALLPROC DROP
  
    CR
    OU128C CCO@ 1112131415161718 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " 1112131415161718 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
    OU128C 8 + CCO@ 0102030405060708 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " 0102030405060708 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
    OU128C 10 + CCO@ FPD6.0 = IF
     ."  3rd quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPD6.0 U.  
      ." , got " OU128C CCO@ 10 +  U.
    THEN

    CR
    OU128C 18 + CCO@ FPD2.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPD2.0 U.  
      ." , got " OU128C 18 + CCO@ U.
    THEN

    CR
;

testvpermilpdymm2ymm1->ymm0


HEX
CODE TESTVPERMILPDXMM0<-M128XMM1
  OU128B [O]  XMM1  VMOVDQA,     // source
  OU128C [O]  XMM0  VMOVDQA,     // pre destination
  XMM0 <-  XMM1  OU128A [O]  VPERMILPD,
  XMM0  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpermilpdxmm0<-m128xmm1 ( -- )
    ." testing XMM0 <-  XMM1  OU128A [O]  VPERMILPD, "

         2 OU128A      CCO! 0 OU128A  8 + CCO!
         0 OU128A 10 + CCO! 0 OU128A 18 + CCO! 
 
    0102030405060708 OU128B  0 +  CCO!    1112131415161718 OU128B  8 + CCO!
    FPD2.0 OU128B 10  + CCO!    FPD6.0 OU128B 18 + CCO!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

         0 OU128D      CCO!  0 OU128D  8 + CCO!
         0 OU128D 10 + CCO!  0 OU128D 18 + CCO!

    0 ['] TESTVPERMILPDXMM0<-M128XMM1 >BODY CALLPROC DROP
  
    CR
    OU128C CCO@ 1112131415161718 = IF
     ."  1st half SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st half " 1112131415161718 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
    OU128C 8 + CCO@ 0102030405060708 = IF
     ."  2nd half SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd half " 0102030405060708 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpermilpdxmm0<-m128xmm1


HEX
CODE TESTVPERMILPD1NM128->XMM0
  OU128C [O]  XMM0  VMOVDQA,     // pre destination
  01 N  OU128B [O]  XMM0  VPERMILPD,
  XMM0  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpermilpd1nm128->xmm0 ( -- )
    ." testing 01 N  OU128B [O]  XMM0  VPERMILPD, "

         0 OU128A      CCO! 0 OU128A  8 + CCO!
         0 OU128A 10 + CCO! 0 OU128A 18 + CCO! 
 
    0102030405060708 OU128B  0 +  CCO!    1112131415161718 OU128B  8 + CCO!
    FPD2.0 OU128B 10  + CCO!    FPD6.0 OU128B 18 + CCO!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

         0 OU128D      CCO!  0 OU128D  8 + CCO!
         0 OU128D 10 + CCO!  0 OU128D 18 + CCO!

    0 ['] TESTVPERMILPD1NM128->XMM0 >BODY CALLPROC DROP
  
    CR
    OU128C CCO@ 1112131415161718 = IF
     ."  1st half SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st half " 1112131415161718 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
    OU128C 8 + CCO@ 0102030405060708 = IF
     ."  2nd half SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd half " 0102030405060708 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpermilpd1nm128->xmm0


HEX
CODE TESTVPERMILPD1NXMM0<-M128
  OU128C [O]  XMM0  VMOVDQA,     // pre destination
  01 N  XMM0 <-  OU128B [O]  VPERMILPD,
  XMM0  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpermilpd1nxmm0<-m128 ( -- )
    ." testing 01 N  XMM0 <-  OU128B [O]  VPERMILPD, "

         0 OU128A      CCO! 0 OU128A  8 + CCO!
         0 OU128A 10 + CCO! 0 OU128A 18 + CCO! 
 
    0102030405060708 OU128B  0 +  CCO!    1112131415161718 OU128B  8 + CCO!
    FPD2.0 OU128B 10  + CCO!    FPD6.0 OU128B 18 + CCO!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

         0 OU128D      CCO!  0 OU128D  8 + CCO!
         0 OU128D 10 + CCO!  0 OU128D 18 + CCO!

    0 ['] TESTVPERMILPD1NXMM0<-M128 >BODY CALLPROC DROP
  
    CR
    OU128C CCO@ 1112131415161718 = IF
     ."  1st half SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st half " 1112131415161718 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
    OU128C 8 + CCO@ 0102030405060708 = IF
     ."  2nd half SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd half " 0102030405060708 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvpermilpd1nxmm0<-m128


HEX
CODE TESTVPERMILPD1NM256->YMM1
  OU128C [O]  YMM0  VMOVDQA,     // pre destination
  05 N  OU128B [O]  YMM0  VPERMILPD,
  YMM0  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpermilpd1nm256->ymm0 ( -- )
    ." testing 05 N  OU128B [O]  YMM0  VPERMILPD, "

         0 OU128A      CCO! 0 OU128A  8 + CCO!
         0 OU128A 10 + CCO! 0 OU128A 18 + CCO! 
 
    0102030405060708 OU128B  0 +  CCO!    1112131415161718 OU128B  8 + CCO!
    FPD2.0 OU128B 10  + CCO!    FPD6.0 OU128B 18 + CCO!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

         0 OU128D      CCO!  0 OU128D  8 + CCO!
         0 OU128D 10 + CCO!  0 OU128D 18 + CCO!

    0 ['] TESTVPERMILPD1NM256->YMM1 >BODY CALLPROC DROP
  
    CR
    OU128C CCO@ 1112131415161718 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " 1112131415161718 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
    OU128C 8 + CCO@ 0102030405060708 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " 0102030405060708 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
    OU128C 10 + CCO@ FPD6.0 = IF
     ."  3rd quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPD6.0 U.  
      ." , got " OU128C 10 + CCO@ U.
    THEN

    CR
    OU128C 18 + CCO@ FPD2.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPD2.0 U.  
      ." , got " OU128C 18 + CCO@ U.
    THEN

    CR
;

testvpermilpd1nm256->ymm0


HEX
CODE TESTVPERMILPS1NM128->XMM0
  OU128C [O]  XMM0  VMOVDQA,     // pre destination
  1B N  OU128B [O]  XMM0  VPERMILPS,
  XMM0  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpermilps1nm128->xmm0 ( -- )
    ." testing 01 N  OU128B [O]  XMM0  VPERMILPS, "

         0 OU128A      CCO! 0 OU128A  8 + CCO!
         0 OU128A 10 + CCO! 0 OU128A 18 + CCO! 
 
    01020304 OU128B  0 +  CCOU32! 05060708 OU128B   4 +  CCOU32!    
    11121314 OU128B  8 +  CCOU32! 15161718 OU128B  0C +  CCOU32!
    21222324 OU128B 10  + CCOU32! 25262728 OU128B  14 +  CCOU32!
    31323334 OU128B 18  + CCOU32! 35363738 OU128B  1C +  CCOU32!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

         0 OU128D      CCO!  0 OU128D  8 + CCO!
         0 OU128D 10 + CCO!  0 OU128D 18 + CCO!

    0 ['] TESTVPERMILPS1NM128->XMM0 >BODY CALLPROC DROP
  
    CR
    OU128C CCOU32@ 15161718 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " 15161718 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    CR
    OU128C 4 + CCOU32@ 11121314 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " 11121314 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    CR
    OU128C 8 + CCOU32@ 05060708 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " 05060708 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    CR
    OU128C 0C + CCOU32@ 01020304 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " 01020304 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvpermilps1nm128->xmm0


HEX
CODE TESTVPERMILPSM128XMM1->XMM0
  OU128B [O]  XMM1  VMOVDQA,     // source
  OU128C [O]  XMM0  VMOVDQA,     // pre destination
  OU128A [O]  XMM1  XMM0  VPERMILPS,
  XMM0  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvpermilpsm128xmm1->xmm0 ( -- )
    ." testing 01 N  OU128A [O]  XMM1  XMM0  VPERMILPS, "

         0000000200000003 OU128A  CCO! 0000000000000001 OU128A  8 + CCO!
         0 OU128A 10 + CCO! 0 OU128A 18 + CCO! 
 
    01020304 OU128B  0 +  CCOU32! 05060708 OU128B   4 +  CCOU32!    
    11121314 OU128B  8 +  CCOU32! 15161718 OU128B  0C +  CCOU32!
    21222324 OU128B 10  + CCOU32! 25262728 OU128B  14 +  CCOU32!
    31323334 OU128B 18  + CCOU32! 35363738 OU128B  1C +  CCOU32!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

         0 OU128D      CCO!  0 OU128D  8 + CCO!
         0 OU128D 10 + CCO!  0 OU128D 18 + CCO!

    0 ['] TESTVPERMILPSM128XMM1->XMM0 >BODY CALLPROC DROP
  
    CR
    OU128C CCOU32@ 15161718 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " 15161718 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    CR
    OU128C 4 + CCOU32@ 11121314 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " 11121314 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    CR
    OU128C 8 + CCOU32@ 05060708 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " 05060708 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    CR
    OU128C 0C + CCOU32@ 01020304 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " 01020304 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvpermilpsm128xmm1->xmm0


HEX
CODE TESTVADDSUBPDM256YMM0->YMM1
  OU128C [O]  YMM1  VMOVDQA,     // pre destination
  OU128A [O]  YMM0  VMOVDQA,     // target y source
  OU128B [O]  YMM0  YMM1  VADDSUBPD,
  YMM1  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvaddsubm256ymm0->ymm1 ( -- )
    ." testing OU128B [O]  YMM0  YMM1  VADDSUBPD, "

    FPD4.0 OU128A      CCO!     FPD2.0 OU128A  8 + CCO!
    FPD6.0 OU128A 10 + CCO!     FPD3.0 OU128A 18 + CCO! 
 
    FPD1.0 OU128B  0 +  CCO!    FPD4.0 OU128B  8 + CCO!
    FPD2.0 OU128B 10  + CCO!    FPD5.0 OU128B 18 + CCO!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

         0 OU128D      CCO!  0 OU128D  8 + CCO!
         0 OU128D 10 + CCO!  0 OU128D 18 + CCO!

    0 ['] TESTVADDSUBPDM256YMM0->YMM1 >BODY CALLPROC DROP
  
    CR
    OU128C CCO@ FPD3.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
    OU128C 8 + CCO@ FPD6.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPD6.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
    OU128C 10 + CCO@ FPD4.0 = IF
     ."  3rd quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPD4.0 U.  
      ." , got " OU128C 10 + CCO@ U.
    THEN

    CR
    OU128C 18 + CCO@ FPD8.0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " FPD8.0 U.  
      ." , got " OU128C 18 + CCO@ U.
    THEN

    CR
;

testvaddsubm256ymm0->ymm1


HEX
CODE TESTVADDSUBM128XMM1->XMM0
  OU128B [O]  XMM1  VMOVDQA,     // source
  OU128C [O]  XMM0  VMOVDQA,     // pre destination
  OU128A [O]  XMM1  XMM0  VADDSUBPS,
  XMM0  OU128C [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvaddsubpsm128xmm1->xmm0 ( -- )
    ." testing OU128A [O]  XMM1  XMM0  VADDSUBPS, "

    FPS3.0 OU128A     CCOU32!  FPS6.0 OU128A  4 + CCOU32!
    FPS1.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32! 
         0 OU128A 10 + CCO!         0 OU128A 18 + CCO!
 
    FPS4.0 OU128B  0 +  CCOU32! FPS2.0 OU128B   4 +  CCOU32!    
    FPS6.0 OU128B  8 +  CCOU32! FPS5.0 OU128B  0C +  CCOU32!
    21222324 OU128B 10  + CCOU32! 25262728 OU128B  14 +  CCOU32!
    31323334 OU128B 18  + CCOU32! 35363738 OU128B  1C +  CCOU32!

         0 OU128C      CCO!  0 OU128C  8 + CCO!
         0 OU128C 10 + CCO!  0 OU128C 18 + CCO!

         0 OU128D      CCO!  0 OU128D  8 + CCO!
         0 OU128D 10 + CCO!  0 OU128D 18 + CCO!

    0 ['] TESTVADDSUBM128XMM1->XMM0 >BODY CALLPROC DROP
  
    CR
    OU128C CCOU32@ FPS1.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS1.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    CR
    OU128C 4 + CCOU32@ FPS8.0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " FPS8.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    CR
    OU128C 8 + CCOU32@ FPS5.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS5.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    CR
    OU128C 0C + CCOU32@ FPS9.0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " FPS9.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;

testvaddsubpsm128xmm1->xmm0


HEX
CODE TESTVAESENCM128XMM1->XMM0
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM1  XMM0  VAESENC,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvaesencm128xmm1->xmm0 ( -- )
    ." testing OU128B [O]  XMM1  XMM0  VAESENC, "
         0 OU128A CCO!          0 OU128A 8 + CCO!
         0 OU128B CCO!          0 OU128B 8 + CCO!     
         0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVAESENCM128XMM1->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 6363636363636363 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  6363636363636363 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 6363636363636363 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 6363636363636363 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvaesencm128xmm1->xmm0


HEX
CODE TESTVAESDECM128XMM1->XMM0
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM1  XMM0  VAESDEC,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvaesdecm128xmm1->xmm0 ( -- )
    ." testing OM128B [O]  XMM1  XMM0  VAESDEC, "
6363636363636363 OU128A CCO!  6363636363636363 OU128A 8 + CCO!
               0 OU128B CCO!                 0 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVAESDECM128XMM1->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvaesdecm128xmm1->xmm0


HEX
CODE TESTVAESENCLASTM128XMM1->XMM0
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM1  XMM0  VAESENCLAST,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvaesenclastm128xmm1->xmm0 ( -- )
    ." testing OM128B [O]  XMM1  XMM0  VAESENCLAST, "
         0 OU128A CCO!          0 OU128A 8 + CCO!
         0 OU128B CCO!          0 OU128B 8 + CCO!     
         0 OU128C CCO!          0 OU128C 8 + CCO!
    0 ['] TESTVAESENCLASTM128XMM1->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 6363636363636363 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  6363636363636363 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 6363636363636363 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 6363636363636363 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvaesenclastm128xmm1->xmm0


HEX
CODE TESTVAESDECLASTM128XMM1->XMM0
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM1  XMM0  VAESDECLAST,
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvaesdeclastm128xmm1->xmm0 ( -- )
    ." testing OM128B [O]  XMM1  XMM0  VAESDECLAST, "
6363636363636363 OU128A CCO!  6363636363636363 OU128A 8 + CCO!
               0 OU128B CCO!                 0 OU128B 8 + CCO!     
               0 OU128C CCO!                 0 OU128C 8 + CCO!
    0 ['] TESTVAESDECLASTM128XMM1->XMM0 >BODY CALLPROC
    DROP  

    OU128C CCO@ 0 = IF
      ." 1st fp64 SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st fp64 "  0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    OU128C 8 + CCO@ 0 = IF
      ." 2nd fp64 SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd fp64 " 0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvaesdeclastm128xmm1->xmm0


HEX
CODE TESTVCMPPD0NM128XMM1->XMM0 
  OU128A [O]  XMM1  MOVDQA,
  0 N  OU128B [O]  XMM1  XMM0  VCMPPD,   
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcmppd0nm128xmm1->xmm0 ( -- )
    ." testing 0 N OM128 [O]  XMM1  XMM0  VCMPPD, "
    FPD1.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD1.0 OU128B CCO!  FPD4.0 OU128B 8 + CCO!
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVCMPPD0NM128XMM1->XMM0 >BODY CALLPROC
    DROP  
     OU128C CCO@ FFFFFFFFFFFFFFFF = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FFFFFFFFFFFFFFFF U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ 0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " 0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvcmppd0nm128xmm1->xmm0


HEX
CODE TESTVCMPPS0NM128XMM1->XMM0 
  OU128A [O]  XMM1  MOVDQA,
  0 N  OU128B [O]  XMM1  XMM0  VCMPPS,   
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcmpps0nm128xmm1->xmm0 ( -- )
    ." testing 0 N OM128 [O]  XMM0  CMPPS, "
    FPS1.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!  FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32! 
    FPS1.0 OU128B CCOU32!  FPS4.0 OU128B 4 + CCOU32!  FPS3.0 OU128B 8 + CCOU32!  FPS6.0 OU128B 0C + CCOU32! 
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVCMPPS0NM128XMM1->XMM0 >BODY CALLPROC
    DROP  
     OU128C CCOU32@ FFFFFFFF = IF
     ." 1st quarter SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st quarter " FFFFFFFF U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ 0 = IF
     ." 2nd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd quarter " 0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    OU128C 8 + CCOU32@ FFFFFFFF = IF
     ." 3rd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd quarter " FFFFFFFF U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    OU128C 0C + CCOU32@ 0 = IF
     ." 4th quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th quarter " 0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
;

testvcmpps0nm128xmm1->xmm0


HEX
CODE TESTVCMPSD0NM128XMM1->XMM0 
  OU128A [O]  XMM1  MOVDQA,
  0 N  OU128B [O]  XMM1  XMM0  VCMPSD,   
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcmpsd0nm128xmm1->xmm0 ( -- )
    ." testing 0 N OM128 [O]  XMM1  XMM0  VCMPSD, "
    FPD1.0 OU128A CCO!  FPD2.0 OU128A 8 + CCO!  
    FPD1.0 OU128B CCO!  FPD3.0 OU128B 8 + CCO!
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVCMPSD0NM128XMM1->XMM0 >BODY CALLPROC
    DROP  
     OU128C CCO@ FFFFFFFFFFFFFFFF = IF
     ." lo half SUCCESS! "
    ELSE
      ." FAIL! Expected for lo half " FFFFFFFFFFFFFFFF U.  
      ." , got " OU128C CCO@ U.
    THEN
    OU128C 8 + CCO@ FPD2.0 = IF
     ." hi half SUCCESS!"
    ELSE
      ." FAIL! Expected for hi half " FPD2.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN
    CR
;

testvcmpsd0nm128xmm1->xmm0


HEX
CODE TESTVCMPSS0NM128XMM1->XMM0 
  OU128A [O]  XMM1  MOVDQA,
  0 N  OU128B [O]  XMM1  XMM0  VCMPSS,   
  XMM0  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvcmpss0nm128xmm1->xmm0 ( -- )
    ." testing 0 N OM128 [O]  XMM1  XMM0  VCMPSS, "
    FPS1.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!  FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32! 
    FPS1.0 OU128B CCOU32!  FPS4.0 OU128B 4 + CCOU32!  FPS3.0 OU128B 8 + CCOU32!  FPS6.0 OU128B 0C + CCOU32! 
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVCMPSS0NM128XMM1->XMM0 >BODY CALLPROC
    DROP  
     OU128C CCOU32@ FFFFFFFF = IF
     ." 1st quarter SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st quarter " FFFFFFFF U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ FPS2.0 = IF
     ." 2nd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd quarter " FPS2.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    OU128C 8 + CCOU32@ FPS3.0 = IF
     ." 3rd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd quarter " FPS3.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    OU128C 0C + CCOU32@ FPS4.0 = IF
     ." 4th quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th quarter " FPS4.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
;

testvcmpss0nm128xmm1->xmm0


: testvcmpss0nm128xmm1->xmm0 ( -- )
    ." testing 0 N OM128 [O]  XMM1  XMM0  VCMPSS, "
    FPS1.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!  FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32! 
    FPS1.0 OU128B CCOU32!  FPS4.0 OU128B 4 + CCOU32!  FPS3.0 OU128B 8 + CCOU32!  FPS6.0 OU128B 0C + CCOU32! 
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVCMPSS0NM128XMM1->XMM0 >BODY CALLPROC
    DROP  
     OU128C CCOU32@ FFFFFFFF = IF
     ." 1st quarter SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st quarter " FFFFFFFF U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    OU128C 4 + CCOU32@ FPS2.0 = IF
     ." 2nd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 2nd quarter " FPS2.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    OU128C 8 + CCOU32@ FPS3.0 = IF
     ." 3rd quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 3rd quarter " FPS3.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    OU128C 0C + CCOU32@ FPS4.0 = IF
     ." 4th quarter SUCCESS!"
    ELSE
      ." FAIL! Expected for 4th quarter " FPS4.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
;

testvcmpss0nm128xmm1->xmm0

HEX
CODE TESTVEXTRACTF1281NYMM0->M128
  OU128A [O]  YMM1  VMOVDQA,
  1 N  YMM1  OU128C [O]  VEXTRACTF128,
  YMM1  OU128B  [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvextractf128ymm0->m128 ( -- )
    ." testing 1 N  YMM1  OU128B [O]  VEXTRACTF128, "
    7FFFFF80FF807F8E OU128A      CCO!  FFFDFFFC01000008 OU128A  8 + CCO! 
    3132333435363738 OU128A 10 + CCO!  4142434445464748 OU128A 18 + CCO!

    0                     OU128C CCO!  0                OU128C  8 + CCO!
    0                10 + OU128C CCO!  0                OU128C 18 + CCO!
    
    0 ['] TESTVEXTRACTF1281NYMM0->M128 >BODY CALLPROC DROP 

    CR
    OU128C CCO@ 3132333435363738 = IF
      ."  1st half SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st half "  3132333435363738 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
    OU128C 8 + CCO@ 4142434445464748 = IF
      ."  2nd half SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd half " 4142434445464748 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    CR
    OU128C 10 + CCO@ 0 = IF
      ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    CR
;

testvextractf128ymm0->m128


HEX
CODE TESTVEXTRACTI1281NYMM0->M128
  OU128A [O]  YMM1  VMOVDQA,
  1 N  YMM1  OU128C [O]  VEXTRACTI128,
  YMM1  OU128B [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvextracti128ymm0->m128 ( -- )
    ." testing 1 N  YMM1  OU128B [O]  VEXTRACTI128, "
    7FFFFF80FF807F8E OU128A      CCO!  FFFDFFFC01000008 OU128A  8 + CCO! 
    3132333435363738 OU128A 10 + CCO!  4142434445464748 OU128A 18 + CCO!

    0                     OU128C CCO!  0                OU128C  8 + CCO!
    0                10 + OU128C CCO!  0                OU128C 18 + CCO!
    
    0 ['] TESTVEXTRACTI1281NYMM0->M128 >BODY CALLPROC  DROP

    CR
    OU128C CCO@ 3132333435363738 = IF
      ."  1st half SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st half "  3132333435363738 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
    OU128C 8 + CCO@ 4142434445464748 = IF
      ."  2nd half SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd half " 4142434445464748 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    CR
    OU128C 10 + CCO@ 0 = IF
      ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    CR
;

testvextracti128ymm0->m128


HEX
CODE TESTVEXTRACTI1281NYMM1->XMM0
  OU128A [O]  YMM1  VMOVDQA,
  1 N  YMM1  XMM0  VEXTRACTI128,
  XMM0  OU128C [O]  VMOVDQA,
  YMM1  OU128B [O]  VMOVDQA,
  RET,  
END-CODE
  
: testvextracti128ymm1->xmm0 ( -- )
    ." 1 N  YMM1  XMM0  VEXTRACTI128, "
    7FFFFF80FF807F8E OU128A      CCO!  FFFDFFFC01000008 OU128A  8 + CCO! 
    3132333435363738 OU128A 10 + CCO!  4142434445464748 OU128A 18 + CCO!

    0                     OU128C CCO!  0                OU128C  8 + CCO!
    0                10 + OU128C CCO!  0                OU128C 18 + CCO!
    
    0 ['] TESTVEXTRACTI1281NYMM1->XMM0 >BODY CALLPROC  DROP

    CR
    OU128C CCO@ 3132333435363738 = IF
      ."  1st half SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st half "  3132333435363738 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
    OU128C 8 + CCO@ 4142434445464748 = IF
      ."  2nd half SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd half " 4142434445464748 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    CR
    OU128C 10 + CCO@ 0 = IF
      ."  after SUCCESS!"
    ELSE
      ."  FAIL! Expected for after " 0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    CR
;

testvextracti128ymm1->xmm0

HEX
CODE TESTVEXTRACTPSXMM0->EAX
  RAX RAX XOR,
  RAX DEC, 
  OU128A [O]  XMM1  MOVDQA,
  1 N  XMM1  EAX  VEXTRACTPS,   
  RET,  
END-CODE
  
: testvextractpsxmm0->eax ( -- )
    ." testing 1 N  XMM1  EAX  VEXTRACTPS, "

    FPS1.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!  FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32! 

    FPS1.0 OU128B CCOU32!  FPS4.0 OU128B 4 + CCOU32!  FPS3.0 OU128B 8 + CCOU32!  FPS6.0 OU128B 0C + CCOU32!
 
         0 OU128C CCO!       0 OU128C 8 + CCO!
    0 ['] TESTVEXTRACTPSXMM0->EAX >BODY CALLPROC OU128C CCO!

    CR
    OU128C CCOU32@ FPS2.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st quarter " FPS2.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    CR
    OU128C 4 + CCOU32@ 0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " 0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    CR
    OU128C 8 + CCOU32@ 0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " 0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    CR
    OU128C 0C + CCOU32@ 0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " 0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
;

testvextractpsxmm0->eax


HEX
CODE TESTVEXTRACTPSXMM0->M32
  RAX RAX XOR,
  RAX DEC, 
  OU128A [O]  XMM1  MOVDQA,
  1 N  XMM1  OU128C [O]  VEXTRACTPS,   
  RET,  
END-CODE
  
: testvextractpsxmm0->m32 ( -- )
    ." testing 1 N  XMM1  EAX  VEXTRACTPS, "

    FPS1.0 OU128A CCOU32!  FPS2.0 OU128A 4 + CCOU32!  FPS3.0 OU128A 8 + CCOU32!  FPS4.0 OU128A 0C + CCOU32! 

    FPS1.0 OU128B CCOU32!  FPS4.0 OU128B 4 + CCOU32!  FPS3.0 OU128B 8 + CCOU32!  FPS6.0 OU128B 0C + CCOU32!
 
         0 OU128C CCO!          0 OU128C 8 + CCO!

    0 ['] TESTVEXTRACTPSXMM0->M32 >BODY CALLPROC DROP

    CR
    OU128C CCOU32@ FPS2.0 = IF
     ."  1st quarter SUCCESS! "
    ELSE
      ." FAIL! Expected for 1st quarter " FPS2.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN
    CR
    OU128C 4 + CCOU32@ 0 = IF
     ."  2nd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd quarter " 0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN
    CR
    OU128C 8 + CCOU32@ 0 = IF
     ."  3rd quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd quarter " 0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN
    CR
    OU128C 0C + CCOU32@ 0 = IF
     ."  4th quarter SUCCESS!"
    ELSE
      ."  FAIL! Expected for 4th quarter " 0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN
    CR
;

testvextractpsxmm0->m32

HEX
CODE TESTVROUNDPSN8M128->XMM1
  OU128A [O]  XMM1  MOVDQA,
  2 N  OU128B [O]  XMM1  VROUNDPS,  
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvroundpsn8m128->xmm1 ( -- ) 
    ." testing  N8  M128  XMM1  VROUNDPS, "
    123456789ABCDEF7 OU128A CCO!                   1122334455667788 OU128A 8 + CCO!
              FPS2.5 OU128B CCOU32!   FPS1.0 OU128B 4 + CCOU32!   FPS0.5 OU128B 8 + CCOU32!   FPS1.5 OU128B 0C + CCOU32!        
                   0 OU128C CCO!                                  0 OU128C 8 + CCO!
    0 ['] TESTVROUNDPSN8M128->XMM1 >BODY CALLPROC DROP  

    CR
    OU128C CCOU32@ FPS3.0 = IF
      ."  1st fp32 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st fp32 "  FPS3.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    CR
    OU128C 4 + CCOU32@ FPS1.0 = IF
      ."  2nd fp32 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 2nd fp32 "  FPS1.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    CR
    OU128C 8 + CCOU32@ FPS1.0 = IF
      ."  3rd fp32 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd fp32 " FPS1.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    CR
    OU128C 0C + CCOU32@ FPS2.0 = IF
      ."  1st fp32 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st fp32 "  FPS2.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;


testvroundpsn8m128->xmm1


HEX
CODE TESTVROUNDPSN8XMM0->XMM1
  OU128A [O]  XMM1  MOVDQA,
  OU128B [O]  XMM0  MOVDQA,
  2 N  XMM0  XMM1  VROUNDPS,  
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvroundpsn8xmm0->xmm1 ( -- ) 
    ." testing  N8  XMM0  XMM1  VROUNDPS, "
    123456789ABCDEF7 OU128A CCO!                   1122334455667788 OU128A 8 + CCO!
              FPS2.5 OU128B CCOU32!   FPS1.0 OU128B 4 + CCOU32!   FPS0.5 OU128B 8 + CCOU32!   FPS1.5 OU128B 0C + CCOU32!        
                   0 OU128C CCO!                                  0 OU128C 8 + CCO!
    0 ['] TESTVROUNDPSN8XMM0->XMM1 >BODY CALLPROC DROP  

    CR
    OU128C CCOU32@ FPS3.0 = IF
      ."  1st fp32 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st fp32 "  FPS3.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    CR
    OU128C 4 + CCOU32@ FPS1.0 = IF
      ."  2nd fp32 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 2nd fp32 "  FPS1.0 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    CR
    OU128C 8 + CCOU32@ FPS1.0 = IF
      ."  3rd fp32 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd fp32 " FPS1.0 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    CR
    OU128C 0C + CCOU32@ FPS2.0 = IF
      ."  1st fp32 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st fp32 "  FPS2.0 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;


testvroundpsn8xmm0->xmm1


HEX
CODE TESTVROUNDSSN8M128->XMM1
  OU128A [O]  XMM2  MOVDQA,
  2 N  OU128B [O]  XMM2  XMM1  VROUNDSS,  
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvroundssn8m128->xmm1 ( -- ) 
    ." testing  N8  M128  XMM1  VROUNDSS, "
    123456789ABCDEF7 OU128A CCO!          1122334455667788 OU128A  8 + CCO!

              FPS2.5 OU128B     CCOU32!             FPS1.0 OU128B  4 + CCOU32!   
              FPS0.5 OU128B 8 + CCOU32!             FPS1.5 OU128B 0C + CCOU32! 
       
                   0 OU128C CCO!                                   0 OU128C 8 + CCO!
    0 ['] TESTVROUNDSSN8M128->XMM1 >BODY CALLPROC  DROP  

    CR
    OU128C CCOU32@ FPS3.0 = IF
      ."  1st fp32 SUCCESS! "
    ELSE 
      ."  FAIL! Expected for 1st fp32 "  FPS3.0 U.  
      ." , got " OU128C CCOU32@ U.
    THEN

    CR
    OU128C 4 + CCOU32@ 12345678 = IF
      ."  2nd fp32 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 2nd fp32 "  12345678 U.  
      ." , got " OU128C 4 + CCOU32@ U.
    THEN

    CR
    OU128C 8 + CCOU32@ 55667788 = IF
      ."  3rd fp32 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 3rd fp32 " 55667788 U.  
      ." , got " OU128C 8 + CCOU32@ U.
    THEN

    CR
    OU128C 0C + CCOU32@ 11223344 = IF
      ."  1st fp32 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st fp32 "  11223344 U.  
      ." , got " OU128C 0C + CCOU32@ U.
    THEN

    CR
;


testvroundssn8m128->xmm1


HEX
CODE TESTVROUNDPDN8M128->XMM1
  OU128A [O]  XMM1  MOVDQA,
  2 N  OU128B [O]  XMM1  ROUNDPD,  
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvroundpdn8m128->xmm1 ( -- ) 
    ." testing  N8  M128  XMM1  VROUNDPD, "
    123456789ABCDEF7 OU128A CCO!   1122334455667788 OU128A 8 + CCO!
              FPD2.5 OU128B CCO!             FPD1.5 OU128B 8 + CCO!         
                   0 OU128C CCO!                  0 OU128C 8 + CCO!
    0 ['] TESTVROUNDPDN8M128->XMM1 >BODY CALLPROC
    DROP  

    CR
    OU128C CCO@ FPD3.0 = IF
      ."  1st fp64 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st fp64 "  FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
    OU128C 8 + CCO@ FPD2.0 = IF
      ."  2nd fp64 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd fp64 " FPD2.0 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvroundpdn8m128->xmm1


HEX
CODE TESTVROUNDSDN8M128->XMM1
  OU128A [O]  XMM2  MOVDQA,
  2 N  OU128B [O]  XMM2  XMM1  VROUNDSD,  
  XMM1  OU128C [O]  MOVDQA,
  RET,  
END-CODE
  
: testvroundsdn8m128->xmm1 ( -- ) 
    ." testing  N8  M128  XMM1  VROUNDSD, "
    123456789ABCDEF7 OU128A CCO!   1122334455667788 OU128A 8 + CCO!
              FPD2.5 OU128B CCO!             FPD1.5 OU128B 8 + CCO!         
                   0 OU128C CCO!                  0 OU128C 8 + CCO!
    0 ['] TESTVROUNDSDN8M128->XMM1 >BODY CALLPROC
    DROP  

    CR
    OU128C CCO@ FPD3.0 = IF
      ."  1st fp64 SUCCESS! "
    ELSE
      ."  FAIL! Expected for 1st fp64 "  FPD3.0 U.  
      ." , got " OU128C CCO@ U.
    THEN

    CR
    OU128C 8 + CCO@ 1122334455667788 = IF
      ."  2nd fp64 SUCCESS!"
    ELSE
      ."  FAIL! Expected for 2nd fp64 " 1122334455667788 U.  
      ." , got " OU128C 8 + CCO@ U.
    THEN

    CR
;

testvroundsdn8m128->xmm1


CODE TESTVLDDQUXMM0
  OU128A [O] XMM0 VLDDQU,
  RET,
END-CODE

CODE TESTVLDDQUYMM0
  OU128A [O] YMM0 VLDDQU,
  RET,
END-CODE

CODE TESTVLDMXCSR
  OU128A [O] VLDMXCSR,
  RET,
END-CODE

CODE TESTVSTMXCSR
  OU128A [O] VSTMXCSR,
  RET,
END-CODE


// VERR VERW
// change how VPMSADBW does the immediate target...

CR ." ***********"
CR ." Stack Check"
CR .S
CR

